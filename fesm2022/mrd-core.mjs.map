{"version":3,"file":"mrd-core.mjs","sources":["../../../projects/mrd-core/src/lib/impl/util/subscription-manager.ts","../../../projects/mrd-core/src/lib/impl/util/util.ts","../../../projects/mrd-core/src/lib/impl/util/item-store.ts","../../../projects/mrd-core/src/lib/impl/http/rest-handler.ts","../../../projects/mrd-core/src/lib/impl/util/subscription-handler.ts","../../../projects/mrd-core/src/lib/abstract/ui/base-object.ts","../../../projects/mrd-core/src/lib/impl/validation/validator-required.ts","../../../projects/mrd-core/src/lib/abstract/validation/accessable-form-control.ts","../../../projects/mrd-core/src/lib/abstract/validation/accessable-form-group.ts","../../../projects/mrd-core/src/lib/abstract/validation/accessable-form-array.ts","../../../projects/mrd-core/src/lib/impl/http/readonly-rest-service-observer.ts","../../../projects/mrd-core/src/lib/impl/http/readony-rest-handler.ts","../../../projects/mrd-core/src/lib/abstract/http/abstract-readonly-restservice.ts","../../../projects/mrd-core/src/lib/impl/http/rest-service-observer.ts","../../../projects/mrd-core/src/lib/abstract/http/abstract-rest-service.ts","../../../projects/mrd-core/src/lib/impl/validation/validator-custom.ts","../../../projects/mrd-core/src/lib/enum/regex.ts","../../../projects/mrd-core/src/lib/impl/validation/validator-email.ts","../../../projects/mrd-core/src/lib/impl/validation/validator-fixed-value.ts","../../../projects/mrd-core/src/lib/impl/validation/validator-float.ts","../../../projects/mrd-core/src/lib/impl/validation/validator-integer.ts","../../../projects/mrd-core/src/lib/impl/validation/validator-postal-code.ts","../../../projects/mrd-core/src/lib/impl/util/type-converter.ts","../../../projects/mrd-core/src/lib/impl/validation/accessable-control-factory.ts","../../../projects/mrd-core/src/lib/enum/http-status-codes.ts","../../../projects/mrd-core/src/lib/abstract/ui/base-push-strategy-object.ts","../../../projects/mrd-core/src/lib/impl/util/observable-value.ts","../../../projects/mrd-core/src/lib/abstract/http/abstract-stored-readonly-restservice.ts","../../../projects/mrd-core/src/lib/abstract/http/abstract-stored-restservice.ts","../../../projects/mrd-core/src/lib/impl/util/deactivation-handler.ts","../../../projects/mrd-core/src/lib/abstract/routing/abstract-activation-queued-guard.ts","../../../projects/mrd-core/src/lib/abstract/routing/abstract-activation-guard.ts","../../../projects/mrd-core/src/lib/abstract/routing/abstract-route-configuration.ts","../../../projects/mrd-core/src/lib/abstract/routing/abstract-resolver.ts","../../../projects/mrd-core/src/lib/abstract/ui/base-root-component.ts","../../../projects/mrd-core/src/lib/abstract/http/abstract-readonly-cached-restservice.ts","../../../projects/mrd-core/src/lib/abstract/http/abstract-cached-restservice.ts","../../../projects/mrd-core/src/lib/abstract/util/abstract-entity-resolver.ts","../../../projects/mrd-core/src/lib/impl/util/timestamp-item-store.ts","../../../projects/mrd-core/src/public-api.ts","../../../projects/mrd-core/src/mrd-core.ts"],"sourcesContent":["import {finalize, take} from 'rxjs/operators';\r\nimport {Observable, Subscription} from \"rxjs\";\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\nimport * as _ from 'underscore';\r\n\r\n/** Diese Klasse kümmert sich um die Speicherverwaltung von Subscriptions.\r\n Diese erzeugen Memory-Leaks, wenn sie nicht sauber gelöscht werden. */\r\nexport abstract class SubscriptionManager {\r\n  // Alle benannten Subscriptions werden hier gecached\r\n  private static subscriptions: object = {};\r\n  /** Subscription mit einem Namen. Diese Funktion ist nützlich,\r\n   falls eine Subscription öfters aufgerufen wird und die vorherige, falls\r\n   noch nicht abgeschlossen, beendet werden soll (HTTP Aufrufe). */\r\n  public static subscribeAs<T>(\r\n    name: string,\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    const sub = observable\r\n      .pipe(\r\n        take(1),\r\n        finalize((...args: any[]) => {\r\n          if (_.isFunction(handler.onFinished)) {\r\n            handler.onFinished(...args);\r\n            if (sub) {\r\n              this.deleteSubscription(name);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onSuccess)) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onError)) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n    this.pushSubscription(name, sub);\r\n    return sub;\r\n  }\r\n  /** Funktion für einmalige Subscriptions (z.B.: Initialisierungsaufrufe) */\r\n  public static subscribe<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    const sub = observable\r\n      .pipe(\r\n        take(1),\r\n        finalize((...args: any[]) => {\r\n          if (_.isFunction(handler.onFinished)) {\r\n            handler.onFinished(...args);\r\n            // if (sub) {\r\n            //   this.deleteSubscription();\r\n            // }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onSuccess)) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onError)) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n    return sub;\r\n  }\r\n\r\n  private static pushSubscription(name: string, subscription: Subscription): void {\r\n    this.deleteSubscription(name);\r\n    SubscriptionManager.subscriptions[name] = subscription;\r\n  }\r\n\r\n  private static deleteSubscription(name: string): void {\r\n    const sub = SubscriptionManager.subscriptions[name];\r\n    if (sub) {\r\n      sub.unsubscribe();\r\n      delete SubscriptionManager.subscriptions[name];\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import * as _ from 'underscore';\r\n\r\nexport class Util {\r\n\r\n  public static isDefined(obj: any): boolean {\r\n    return obj !== null && obj !== undefined;\r\n  }\r\n\r\n  public static armUrlWithSearchParams(url: string, queryParams: object): string {\r\n    if (!queryParams || _.isEmpty(queryParams)) {\r\n      return url;\r\n    }\r\n    _.each(queryParams, (value: any, key: string) => {\r\n      const querySelector = url.indexOf('?') === -1 ? '?' : '&';\r\n      url = `${url}${querySelector}${key}=${value}`;\r\n    });\r\n    return url;\r\n  }\r\n\r\n  public static createEntityUrl(url: string, id: any): string {\r\n    return `${url}/${id}`;\r\n  }\r\n\r\n  public static getBrowser(): string {\r\n    const ua = navigator.userAgent;\r\n    let tem;\r\n    let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\r\n    if (/trident/i.test(M[1])) {\r\n      tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\r\n      return 'IE ' + (tem[1] || '');\r\n    }\r\n    if (M[1] === 'Chrome') {\r\n      tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\r\n      if (tem != null) {\r\n        return tem.slice(1).join(' ').replace('OPR', 'Opera');\r\n      }\r\n    }\r\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\r\n    tem = ua.match(/version\\/(\\d+)/i);\r\n    if (tem != null) {\r\n      M.splice(1, 1, tem[1]);\r\n    }\r\n    return M.join(' ');\r\n  }\r\n\r\n  public static getCurrentUnixTimestamp(): number {\r\n    return Math.round((new Date()).getTime() / 1000);\r\n  }\r\n\r\n  public static guid(): string {\r\n    const s4 = () => {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    };\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  private static transformUmlaute(value: string): string {\r\n    return value\r\n      .replace('Ä', 'Ae')\r\n      .replace('ä', 'ae')\r\n      .replace('Ö', 'Oe')\r\n      .replace('ö', 'oe')\r\n      .replace('Ü', 'Ue')\r\n      .replace('ü', 'ue');\r\n  }\r\n\r\n  public static sortAlpabetically<TListType>(list: TListType[], attribute: string): TListType[] {\r\n    const resultList = _.sortBy(list, (item: TListType) => this.transformUmlaute(item[attribute]).toUpperCase());\r\n    return resultList;\r\n  }\r\n\r\n}\r\n","import {Subject} from 'rxjs';\r\nimport {Util} from \"./util\";\r\n\r\n\r\nexport class ItemStore<T> {\r\n\r\n  public readonly onChanged: Subject<T[]> = new Subject();\r\n\r\n  protected items$: object = {};\r\n  protected transformedItems$: T[] = [];\r\n\r\n  constructor(\r\n    public readonly identifier: any,\r\n    public readonly transform?: (items: T[]) => T[]\r\n  ) {}\r\n\r\n  public updateItems(items: T[]): void {\r\n    this.clear();\r\n    items = items || [];\r\n    for (const item of items) {\r\n      this.items$[item[this.identifier]] = item;\r\n    }\r\n    this.internalTransform$();\r\n  }\r\n\r\n  public clear(): void {\r\n    this.items$ = {};\r\n    this.transformedItems$ = [];\r\n  }\r\n\r\n  public remove(item: T): void {\r\n    if (item) {\r\n      delete this.items$[item[this.identifier]];\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public removeByIdentifier(identifier: any): void {\r\n    if (Util.isDefined(identifier)) {\r\n      delete this.items$[identifier];\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public update(item: T): void {\r\n    if (item) {\r\n      this.items$[item[this.identifier]] = item;\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public push(item: T): void {\r\n    if (item) {\r\n      this.items$[item[this.identifier]] = item;\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  protected internalTransform$(): void {\r\n    this.transformedItems$ = Object.values(this.items$);\r\n    if (this.transform) {\r\n      this.transformedItems$ = this.transform(this.transformedItems$);\r\n    }\r\n    this.onChanged.next(this.transformedItems$);\r\n  }\r\n\r\n  get items(): T[] {\r\n    return this.transformedItems$;\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {finalize, tap} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"./rest-service-observer\";\r\nimport {Util} from \"../util/util\";\r\n\r\n\r\nexport class RestHandler<T> implements IWriteableRestService<T> {\r\n\r\n  constructor(\r\n    public readonly http: HttpClient,\r\n    public readonly url: string,\r\n    public readonly observer: RestServiceObserver<T>,\r\n    public readonly identifier: string\r\n  ) {}\r\n\r\n  public create(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isCreatingItem = true;\r\n    return this.http.post<T>(\r\n        Util.armUrlWithSearchParams(this.url, getParams), model, httpOptions)\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemCreated.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isCreatingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    this.observer.isDestoyingItem = true;\r\n    return this.http.delete<void>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, id), getParams\r\n      ),\r\n      httpOptions\r\n    ).pipe(\r\n      tap(() => {\r\n        this.observer.onItemDestroyed.next(id);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isDestoyingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  public partialUpdate(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isPartiallyUpdatingItem = true;\r\n    return this.http.patch<T>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, model[this.identifier]), getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemPartialUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isPartiallyUpdatingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  public save(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isSavingItem = true;\r\n    let observable: Observable<T>;\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      observable = this.update(model, getParams, httpOptions);\r\n    } else {\r\n      observable = this.create(model, getParams, httpOptions);\r\n    }\r\n    return observable\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemSaved.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isSavingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public set(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isSavingItem = true;\r\n    let observable: Observable<T>;\r\n    this.observer.isUpdatingItem = true;\r\n    observable = this.http.put<T>(\r\n      Util.armUrlWithSearchParams(\r\n        this.url, getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isUpdatingItem = false;\r\n      })\r\n    );\r\n\r\n    return observable\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemSaved.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isSavingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public update(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isUpdatingItem = true;\r\n    return this.http.put<T>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, model[this.identifier]), getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isUpdatingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","/** Standart Implementierung zur Nutzung von Subscriptions\r\n *  Generell hat es wenig Sinn diese Klasse zu erzwingen,\r\n *  allerdings ergibt sich eine bessere Lesbarkeit des Codes daraus.\r\n */\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\n\r\nexport class SubscriptionHandler implements ISubscriptionHandler {\r\n  constructor(\r\n    public onSuccess?: (...args: any[]) => any,\r\n    public onError?: (...args: any[]) => any,\r\n    public onFinished?: (...args: any[]) => any\r\n  ) {}\r\n}\r\n\r\n","import {Component, OnDestroy} from '@angular/core';\r\nimport {finalize, takeUntil} from 'rxjs/operators';\r\nimport {Observable, Subject, Subscription} from \"rxjs\";\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\nimport {SubscriptionManager} from \"../../impl/util/subscription-manager\";\r\n\r\n\r\n@Component({\r\n  template: ''\r\n})\r\n/** Abstracte Klasse von der alle Komponenten und Services erben. Sie stellt eine Speicherverwaltung für Observables bereit. */\r\nexport abstract class BaseObject implements OnDestroy {\r\n  /** Wird benutzt um Observables bei der Zerstörung einer Komponente auszulösen.\r\n   * Wird im ngOnDestroy ausgelöst.\r\n   */\r\n  protected $unsubscribe: Subject<void> = new Subject<void>();\r\n  /** Funktion zur dauerhaften Überwachung von Subscriptions. Speicher wird bei Zerstörung der Komponente freigegeben. */\r\n  protected watch<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    return observable\r\n      .pipe(\r\n        takeUntil(this.$unsubscribe),\r\n        finalize( (...args: any[]) => {\r\n          if (handler.onFinished) {\r\n            handler.onFinished(...args);\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (handler.onSuccess) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (handler.onError) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n  }\r\n  /** Proxy für SubscriptionManager.subscribe */\r\n  protected subscribe<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler,\r\n  ): Subscription {\r\n    return SubscriptionManager.subscribe<T>(observable, handler);\r\n  }\r\n  /** Proxy für SubscriptionManager.subscribeAs */\r\n  protected subscribeAs<T>(\r\n    name: string,\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    return SubscriptionManager.subscribeAs<T>(name, observable, handler);\r\n  }\r\n  /** Alle Observables die mit watch überwacht werden, werden hier ausgelöst. Angular kümmert sich im den Aufruf.\r\n   *  Falls das Kind auch das Interface 'OnDestroy' implementiert, nicht vergessen super.ngOnDestroy() auszurufen, oder der Speicher\r\n   *  wird nicht freigegeben.\r\n   */\r\n  public ngOnDestroy(): void {\r\n    this.$unsubscribe.next();\r\n    this.$unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport * as moment from 'moment';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport class ValidatorRequired implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Pflichtfeld';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl): object | null => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n\r\n  public validate(): any {\r\n    if (_.isDate(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (moment.isMoment(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (_.isNumber(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (_.isString(this.value)) {\r\n      if (this.value.length > 0) {\r\n        this.hasError = false;\r\n        return null;\r\n      } else {\r\n        this.hasError = true;\r\n        return {required: true};\r\n      }\r\n    }\r\n    if (_.isBoolean(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (!this.value || _.isEmpty(this.value)) {\r\n      this.hasError = true;\r\n      return {required: true};\r\n    } else {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {FormControl} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport {ValidatorRequired} from '../../impl/validation/validator-required';\r\nimport {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\n\r\nexport class AccessableFormControl<TType = any>\r\n  implements IAccessableFormControl<AccessableFormControl<TType>, TType> {\r\n\r\n  public control: FormControl;\r\n  public showAs: (value: any) => any;\r\n  public convertTo: (value: any) => any;\r\n  private required$: boolean;\r\n  private validators$: IValidator[];\r\n  private blocked$: boolean;\r\n\r\n  public initialize(\r\n    formState?: any,\r\n    validators?: IValidator[]\r\n  ) {\r\n    this.control = new FormControl(formState, null, null);\r\n    this.validateWith(validators);\r\n    this.setValue(formState);\r\n  }\r\n\r\n  public validateWith(validators: IValidator[] = []): AccessableFormControl {\r\n    this.validators$ = validators;\r\n    this.control.setValidators(_.map(validators, (v: IValidator) => {\r\n      return v.validator();\r\n    }));\r\n    this.required$ = false;\r\n    _.each(this.validators$, (v: IValidator) => {\r\n      if (v instanceof ValidatorRequired) {\r\n        this.required$ = true;\r\n      }\r\n    });\r\n    this.control.updateValueAndValidity();\r\n    return this;\r\n  }\r\n\r\n  public setValue(value: any): AccessableFormControl {\r\n    if (this.showAs) {\r\n      this.control.setValue(this.showAs(value));\r\n    } else {\r\n      this.control.setValue(value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public reset(value: TType): AccessableFormControl {\r\n    if (this.showAs) {\r\n      this.control.reset(this.showAs(value));\r\n    } else {\r\n      this.control.reset(value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormControl {\r\n    this.control.markAsDirty();\r\n    this.control.markAsTouched();\r\n    this.control.updateValueAndValidity();\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormControl {\r\n    _.each(this.validators$, (validator: IValidator) => validator.hasError = false );\r\n    this.control.updateValueAndValidity();\r\n    this.control.markAsPristine();\r\n    this.control.markAsUntouched();\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormControl {\r\n    this.control.markAsDirty();\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormControl {\r\n    this.control.markAsTouched();\r\n    return this;\r\n  }\r\n\r\n  public disable(): AccessableFormControl {\r\n    this.control.disable();\r\n    return this;\r\n  }\r\n\r\n  public enable(): AccessableFormControl {\r\n    this.control.enable();\r\n    return this;\r\n  }\r\n\r\n  public blockControls(): void {\r\n    this.blocked$ = true;\r\n  }\r\n\r\n  public unblockControls(): void {\r\n    this.blocked$ = false;\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.control.disabled;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    if (this.control.disabled) {\r\n      return true;\r\n    }\r\n    return !this.error;\r\n  }\r\n\r\n  get validators(): IValidator[] {\r\n    return this.validators$;\r\n  }\r\n\r\n  get error(): IValidator {\r\n    return _.find(this.validators$, (v: IValidator) => v.hasError );\r\n  }\r\n\r\n  get value(): any {\r\n    if (this.convertTo) {\r\n      return this.convertTo(this.control.value);\r\n    } else {\r\n      return this.control.value;\r\n    }\r\n  }\r\n\r\n  set value(value: any) {\r\n    this.setValue(value);\r\n  }\r\n\r\n  get valueChanges(): Observable<any> {\r\n    return Observable.create( (observer: Observer<any>) => {\r\n      const sub = this.control.valueChanges\r\n        .subscribe(\r\n          () => {\r\n            if (!this.blocked) {\r\n              observer.next(this.value);\r\n            }\r\n          },\r\n          null,\r\n          () => {\r\n            sub.unsubscribe();\r\n          }\r\n        );\r\n    });\r\n  }\r\n\r\n  get required(): boolean {\r\n    return this.required$;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n  get blocked(): boolean {\r\n    return this.blocked$;\r\n  }\r\n\r\n}\r\n","import {FormGroup} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\r\nimport {Util} from '../../impl/util/util';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\nexport abstract class AccessableFormGroup<TFields, TModel extends object>\r\n  implements IAccessableFormControl<AccessableFormGroup<TFields, TModel>, TModel> {\r\n\r\n  public control: FormGroup;\r\n  private fields$: TFields;\r\n  private changed$: Subject<any> = new Subject();\r\n\r\n  public initialize(\r\n    fields: TFields\r\n  ): void {\r\n    this.control = new FormGroup(\r\n      _.mapObject(fields, (field) => {\r\n        return field.control;\r\n      })\r\n    );\r\n    this.fields$ = fields;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsUsed() );\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsUnused() );\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsDirty() );\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsTouched() );\r\n    return this;\r\n  }\r\n\r\n  public reset(model: TModel, propagateChanges: boolean = true): AccessableFormGroup<TFields, TModel> {\r\n    if (!Util.isDefined(model)) {\r\n      model = {} as TModel;\r\n    }\r\n    _.each(this.fields$, (field: IAccessableFormControl<any, any>, key: string) => field.reset(model[key]));\r\n\r\n    if (propagateChanges) {\r\n      this.changed$.next();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  get fields(): TFields {\r\n    return this.fields$;\r\n  }\r\n\r\n\r\n  get value(): TModel {\r\n    const ret = {} as TModel;\r\n    _.each(this.fields$, (field: IAccessableFormControl<any, any>, key: string) => ret[key] = field.value);\r\n    return ret;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.control.valid;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  disable(): AccessableFormGroup<TFields, TModel> {\r\n    this.control.disable();\r\n    return this;\r\n  }\r\n\r\n  enable(): AccessableFormGroup<TFields, TModel> {\r\n    this.control.enable();\r\n    return this;\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.control.disabled;\r\n  }\r\n\r\n  get enabled(): boolean {\r\n    return this.control.enabled;\r\n  }\r\n\r\n  get changed(): Observable<void> {\r\n    return this.changed$.asObservable();\r\n  }\r\n\r\n}\r\n","import { IAccessableFormControl } from '../../interface/validation/i-accessable-form-control';\r\nimport { FormArray } from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport { Util } from '../../impl/util/util';\r\nimport { IValidator } from '../../interface/validation/i-validator';\r\nimport { ValidatorRequired } from '../../impl/validation/validator-required';\r\n\r\nexport const Type = Function;\r\nexport interface Type<T> extends Function { new (...args: any[]): T; }\r\n\r\nexport abstract class AccessableFormArray<TModel>\r\n  implements IAccessableFormControl<AccessableFormArray<TModel>, TModel[]> {\r\n\r\n  private validators$: IValidator[] = [];\r\n  public control: FormArray;\r\n  public type: Type<IAccessableFormControl<any, any>>;\r\n  private required$: boolean = false;\r\n\r\n  private entries$: IAccessableFormControl<any, TModel>[];\r\n\r\n  public initialize(type: Type<IAccessableFormControl<any, any>>): void {\r\n    this.control = new FormArray([]);\r\n    this.type = type;\r\n    this.entries$ = [];\r\n  }\r\n\r\n  public push(entry: TModel): IAccessableFormControl<any, TModel> {\r\n    const item = this.generateFormEntry(entry);\r\n    this.control.push(item.control);\r\n    this.entries$.push(item);\r\n    return item;\r\n  }\r\n\r\n  public removeAt(index: number): void {\r\n    this.control.removeAt(index);\r\n    this.entries$ = _.reject(this.entries$, (e, round: number) => {\r\n      return round === index;\r\n    });\r\n    let markAsUsed = false;\r\n    for (const entry of this.entries$) {\r\n      markAsUsed = markAsUsed || entry.dirty;\r\n    }\r\n    markAsUsed ? this.markAsUsed() : this.markAsUnused();\r\n  }\r\n\r\n  public validateWith(validators: IValidator[]): AccessableFormArray<TModel> {\r\n    if (!Util.isDefined(validators)) {\r\n      validators = [];\r\n    }\r\n    if (_.isArray(validators)) {\r\n      this.validators$ = validators;\r\n    }\r\n    this.control.setValidators(_.map(validators, (v: IValidator) => v.validator()));\r\n    this.required$ = false;\r\n    _.each(this.validators$, (v: IValidator) => {\r\n      if (v instanceof ValidatorRequired) {\r\n        this.required$ = true;\r\n      }\r\n    });\r\n    this.control.updateValueAndValidity();\r\n    return this;\r\n  }\r\n\r\n  public clearValidators(): void {\r\n    this.validators$ = [];\r\n  }\r\n\r\n  public generateFormEntry(value: any): IAccessableFormControl<any, TModel> {\r\n    const validation = new this.type();\r\n    validation.reset(value);\r\n    return validation;\r\n  }\r\n\r\n  public get errors(): string[] {\r\n    return _.compact(_.map(this.validators$, (e: IValidator) => {\r\n      if (e.hasError) {\r\n        return e.error;\r\n      }\r\n      return null;\r\n    }));\r\n  }\r\n\r\n  public get error(): IValidator {\r\n    return _.find(this.validators$, (v) => {\r\n      return v.hasError;\r\n    });\r\n  }\r\n\r\n  public get validators(): IValidator[] {\r\n    return this.validators$;\r\n  }\r\n\r\n  get required(): boolean {\r\n    return this.required$;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.control.valid;\r\n  }\r\n\r\n  get value(): TModel[] {\r\n    const ret: TModel[] = [];\r\n    for (const entry of this.entries$) {\r\n      ret.push(entry.value);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  get entries(): IAccessableFormControl<any, TModel>[] {\r\n    return this.entries$;\r\n  }\r\n\r\n  public disable(): AccessableFormArray<TModel> {\r\n    this.control.disable();\r\n    return this;\r\n  }\r\n\r\n  public enable(): AccessableFormArray<TModel> {\r\n    this.control.enable();\r\n    for (const entry of this.entries$) {\r\n      entry.enable();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormArray<TModel> {\r\n    this.control.markAsDirty();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsDirty();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormArray<TModel> {\r\n    this.control.markAsTouched();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsTouched();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormArray<TModel> {\r\n    this.control.markAsUntouched();\r\n    this.control.markAsPristine();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsUnused();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormArray<TModel> {\r\n    this.control.markAsTouched();\r\n    this.control.markAsDirty();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsUsed();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public reset(models: TModel[]): AccessableFormArray<TModel> {\r\n    this.entries$ = [];\r\n    this.control.clear();\r\n    if (Util.isDefined(models) && _.isArray(models)) {\r\n      for (const model of models) {\r\n        this.push(model);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n}\r\n","import {EventEmitter} from '@angular/core';\r\nimport {Subject} from \"rxjs\";\r\n\r\n\r\nexport class ReadonlyRestServiceObserver<T> {\r\n\r\n  public readonly onItemFetched: Subject<T> = new Subject();\r\n  public readonly onItemsFetched: Subject<T[]> = new Subject();\r\n\r\n  private isFetchingItem$: boolean;\r\n  private isFetchingItems$: boolean;\r\n\r\n  constructor() {\r\n    this.isFetchingItem$ = false;\r\n    this.isFetchingItems$ = false;\r\n  }\r\n\r\n  public isActivate(): boolean {\r\n    return !this.isFetchingItem && !this.isFetchingItems;\r\n  }\r\n\r\n  set isFetchingItems(fetching: boolean) {\r\n    this.isFetchingItems$ = fetching;\r\n  }\r\n\r\n  get isFetchingItems(): boolean {\r\n    return this.isFetchingItems$;\r\n  }\r\n\r\n  set isFetchingItem(fetching: boolean) {\r\n    this.isFetchingItem$ = fetching;\r\n  }\r\n\r\n  get isFetchingItem(): boolean {\r\n    return this.isFetchingItem$;\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {finalize, tap} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IReadonlyRestService} from \"../../interface/http/i-readonly-restservice\";\r\nimport {ReadonlyRestServiceObserver} from \"./readonly-rest-service-observer\";\r\nimport {Util} from \"../util/util\";\r\n\r\n\r\nexport class ReadonlyRestHandler<T> implements IReadonlyRestService<T> {\r\n\r\n  identifier: string;\r\n\r\n  constructor(\r\n    public readonly http: HttpClient,\r\n    public readonly url: string,\r\n    public readonly observer: ReadonlyRestServiceObserver<T>\r\n  ) {}\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<T[]> {\r\n    this.observer.isFetchingItems = true;\r\n    return this.http.get<T[]>(Util.armUrlWithSearchParams(this.url, searchParams), httpOptions)\r\n      .pipe(\r\n        tap( (result: T[]): void => {\r\n          this.observer.onItemsFetched.next(result);\r\n        }),\r\n        // catchError( _.bind(this.serviceErrorHandler.catchError, this.serviceErrorHandler) as (error: any) => Observable<any> ),\r\n        finalize( (): void => {\r\n          this.observer.isFetchingItems = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isFetchingItem = true;\r\n    return this.http.get<T>(\r\n        Util.armUrlWithSearchParams(Util.createEntityUrl(this.url, id), getParams), httpOptions)\r\n      .pipe(\r\n        tap( (result: T): void => {\r\n          this.observer.onItemFetched.next(result);\r\n        }),\r\n        finalize( (): void => {\r\n          this.observer.isFetchingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {BaseObject} from '../ui/base-object';\r\nimport {IReadonlyRestService} from '../../interface/http/i-readonly-restservice';\r\nimport {ReadonlyRestServiceObserver} from '../../impl/http/readonly-rest-service-observer';\r\nimport {ReadonlyRestHandler} from '../../impl/http/readony-rest-handler';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractReadonlyRestservice<T> extends BaseObject implements IReadonlyRestService<T> {\r\n\r\n  identifier: string;\r\n  public abstract url: string;\r\n  public readonly observer: ReadonlyRestServiceObserver<T>;\r\n  protected abstract http: HttpClient;\r\n\r\n  protected constructor(\r\n    restServiceObserver?: ReadonlyRestServiceObserver<T>\r\n  ) {\r\n    super();\r\n    this.observer = Util.isDefined(restServiceObserver) ? restServiceObserver :\r\n      new ReadonlyRestServiceObserver<T>();\r\n  }\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<T[]> {\r\n    return new ReadonlyRestHandler<T>(this.http, this.url, this.observer).all(searchParams, httpOptions);\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new ReadonlyRestHandler<T>(this.http, this.url, this.observer).show(id, getParams, httpOptions);\r\n  }\r\n\r\n}\r\n","import {ReadonlyRestServiceObserver} from './readonly-rest-service-observer';\r\nimport {Subject} from \"rxjs\";\r\n\r\n\r\nexport class RestServiceObserver<T> extends ReadonlyRestServiceObserver<T> {\r\n\r\n  public readonly onItemCreated: Subject<T> = new Subject();\r\n  public readonly onItemUpdated: Subject<T> = new Subject();\r\n  public readonly onItemDestroyed: Subject<T> = new Subject();\r\n  public readonly onItemPartialUpdated: Subject<T> = new Subject();\r\n  public readonly onItemSaved: Subject<T> = new Subject();\r\n\r\n  private isCreatingItem$: boolean;\r\n  private isUpdatingItem$: boolean;\r\n  private isDestoyingItem$: boolean;\r\n  private isPartiallyUpdatingItem$: boolean;\r\n  private isSavingItem$: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.isCreatingItem$ = false;\r\n    this.isUpdatingItem$ = false;\r\n    this.isDestoyingItem$ = false;\r\n    this.isPartiallyUpdatingItem$ = false;\r\n  }\r\n\r\n  public isActivate(): boolean {\r\n    return super.isActivate() &&\r\n      !this.isCreatingItem$ &&\r\n      !this.isUpdatingItem$ &&\r\n      !this.isDestoyingItem$ &&\r\n      !this.isPartiallyUpdatingItem$ &&\r\n      !this.isSavingItem$;\r\n  }\r\n\r\n  set isCreatingItem(isCreating: boolean) {\r\n    this.isCreatingItem$ = isCreating;\r\n  }\r\n\r\n  get isCreatingItem(): boolean {\r\n    return this.isCreatingItem$;\r\n  }\r\n\r\n  set isUpdatingItem(isUpdating: boolean) {\r\n    this.isUpdatingItem$ = isUpdating;\r\n  }\r\n\r\n  get isUpdatingItem(): boolean {\r\n    return this.isUpdatingItem$;\r\n  }\r\n\r\n  set isDestoyingItem(isDestroying: boolean) {\r\n    this.isDestoyingItem$ = isDestroying;\r\n  }\r\n\r\n  get isDestoyingItem(): boolean {\r\n    return this.isDestoyingItem$;\r\n  }\r\n\r\n  set isPartiallyUpdatingItem(isUpdating: boolean) {\r\n    this.isPartiallyUpdatingItem$ = isUpdating;\r\n  }\r\n\r\n  get isPartiallyUpdatingItem(): boolean {\r\n    return this.isPartiallyUpdatingItem$;\r\n  }\r\n\r\n  set isSavingItem(isSaving: boolean) {\r\n    this.isSavingItem$ = isSaving;\r\n  }\r\n\r\n  get isSavingItem(): boolean {\r\n    return this.isSavingItem$;\r\n  }\r\n\r\n\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AbstractReadonlyRestservice} from './abstract-readonly-restservice';\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\n\r\nexport abstract class AbstractRestservice<T> extends AbstractReadonlyRestservice<T> implements IWriteableRestService<T> {\r\n\r\n  public abstract identifier: string;\r\n  declare public readonly observer: RestServiceObserver<any>;\r\n  protected abstract http: HttpClient;\r\n\r\n  protected constructor() {\r\n    super(new RestServiceObserver<T>());\r\n  }\r\n\r\n  public create(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).create(model, getParams, httpOptions);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).destroy(id, getParams, httpOptions);\r\n  }\r\n\r\n  public partialUpdate(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions);\r\n  }\r\n\r\n  public save(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).save(model, getParams, httpOptions);\r\n  }\r\n\r\n  public update(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).update(model, getParams, httpOptions);\r\n  }\r\n\r\n}\r\n","import {ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport abstract class ValidatorCustom implements IValidator {\r\n  public abstract error: string;\r\n  public abstract hasError: boolean;\r\n  private value: any;\r\n\r\n  protected constructor() {\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return null;\r\n  }\r\n\r\n  public validate(): any {\r\n    return null;\r\n  }\r\n\r\n}\r\n","/** Hier werden alle von der Applikation genutzten REGEX gespeichert. */\r\nexport const REGEX = {\r\n  /** Regex für eine Zahl. Jede Zahl sollte damit erkannt werden */\r\n  NUMBER: /^-?[0-9]+([,.][0-9]+)?$/,\r\n  /** Die Representation einer (Gleitkomma)Zahl, die der Anwender eingeben darf */\r\n  INPUT_NUMBER: /^[0-9]+(,[0-9]+)?$/,\r\n  INTEGER: /^[0-9]+$/,\r\n  SIGNED_INTEGER: /^-?[0-9]+$/,\r\n  /** Offizieller RFC 5322 Standart regex */\r\n  EMAIL: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n  POSTAL_CODE: /^[0-9]{5}$/,\r\n  SPECIAL_CHARS_REGEX: /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\r\n  DATE: /^(\\d{1,2})[-\\/](\\d{1,2})[-\\/](\\d{4})$/\r\n};\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport class ValidatorEmail implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine gültige E-Mail ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n  public validate(): any {\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.EMAIL.test(this.value.toString())) {\r\n      this.hasError = false;\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidEmail: true};\r\n    }\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport class ValidatorFixedValue implements IValidator {\r\n\r\n  public hasError: boolean;\r\n  private value$: any;\r\n  constructor(\r\n    public comparator: any,\r\n    public error: string = null\r\n  ) {}\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (this.comparator === this.value$) {\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {validatorFixed: true};\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value$ = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {REGEX} from '../../enum/regex';\r\nimport {Util} from '../util/util';\r\n\r\n\r\nexport class ValidatorFloat implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine valide Zahl ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    private digitsBefore?: number,\r\n    private digitsAfter?: number\r\n  ) {}\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl): object | null => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    this.error = 'Bitte geben Sie eine valide Zahl ein';\r\n    let validAmountDisgitsBefore = false;\r\n    let validAmountDisgitsAfter = false;\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.INPUT_NUMBER.test(this.value.toString())) {\r\n      const numberSplitted = this.value.toString().split(',');\r\n      if (Util.isDefined(this.digitsBefore) && this.digitsAfter === 0 && numberSplitted.length === 2) {\r\n        this.hasError = true;\r\n        this.error = 'Es sind keine Nachkommastellen erlaubt';\r\n        return {invalidFloat: true};\r\n      }\r\n      if (numberSplitted.length !== 2) {\r\n        if (Util.isDefined(this.digitsBefore)) {\r\n          if (this.value.length > this.digitsBefore) {\r\n            this.error = `Bitte runden Sie die Zahl auf ${this.digitsBefore === 1 ? 'eine Stelle' : this.digitsBefore.toString() + ' Stellen'} vor dem Komma`;\r\n            this.hasError = true;\r\n            return {invalidFloat: true};\r\n          }\r\n        }\r\n        this.hasError = false;\r\n        return null;\r\n      }\r\n      if (Util.isDefined(this.digitsBefore) && this.digitsBefore > 0) {\r\n        validAmountDisgitsBefore = numberSplitted[0].length <= this.digitsBefore;\r\n        if (!validAmountDisgitsBefore) {\r\n          this.error = `Bitte runden Sie die Zahl auf ${this.digitsBefore === 1 ? 'eine Stelle' : this.digitsBefore.toString() + ' Stellen'} vor dem Komma`;\r\n        }\r\n      } else {\r\n        validAmountDisgitsBefore = true;\r\n      }\r\n      if (Util.isDefined(this.digitsAfter) && this.digitsAfter > 0) {\r\n        validAmountDisgitsAfter = numberSplitted[1].length <= this.digitsAfter;\r\n        if (!validAmountDisgitsAfter) {\r\n          this.error = `Bitte runden Sie die Zahl auf ${this.digitsAfter === 1 ? ' eine Stelle' : this.digitsAfter.toString() + ' Stellen'} nach dem Komma`;\r\n        }\r\n      } else {\r\n        validAmountDisgitsAfter = true;\r\n      }\r\n      this.hasError = !(validAmountDisgitsBefore && validAmountDisgitsAfter);\r\n      if (this.hasError) {\r\n        return {invalidFloat: true};\r\n      }\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidFloat: true};\r\n    }\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\n\r\n\r\nexport class ValidatorInteger implements IValidator {\r\n\r\n  public error = 'Bitte geben Sie eine ganze Zahl ein';\r\n  public hasError: boolean;\r\n\r\n  private value$: string;\r\n  private regex$: RegExp;\r\n\r\n\r\n  constructor(\r\n    private allowNegativeValues$: boolean = false\r\n  ) {\r\n    if (allowNegativeValues$) {\r\n      this.regex$ = REGEX.SIGNED_INTEGER;\r\n    } else {\r\n      this.regex$ = REGEX.INTEGER;\r\n    }\r\n  }\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (!this.value$) {\r\n      return null;\r\n    }\r\n    if (!this.regex$.test(this.value$)) {\r\n      this.hasError = true;\r\n      return {invalidInteger: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value$ = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport class ValidatorPostalCode implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine gültige Postleitzahl ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.POSTAL_CODE.test(this.value.toString())) {\r\n      this.hasError = false;\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidPostalCode: true};\r\n    }\r\n  }\r\n}\r\n","import moment from 'moment';\r\nimport * as _ from 'underscore';\r\nimport {Util} from './util';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport abstract class TypeConverter {\r\n\r\n  /** Versucht den Wert in eine Zahl zu konvertieren. */\r\n  public static toNumber(value: string | number): number | string {\r\n    // Falls null oder undefined übergeben wurde, brechen wir ab\r\n    if (!value) {\r\n      return value;\r\n    }\r\n    // Falls der Wert bereits eine Zahl ist, sind wir fertig\r\n    if (_.isNumber(value)) {\r\n      return value;\r\n    }\r\n    // Falls der Wert ein String ist, testen wir, ob er aussieht wie eine Zahl und versuchen ihn anschließend zu konvertieren\r\n    if (_.isString(value) && REGEX.NUMBER.test(value as string)) {\r\n      return TypeConverter.convertInputStringToNumber(value as string);\r\n    }\r\n    // Wir haben keine Regel für die Konvertierung gefunden\r\n    return value;\r\n  }\r\n\r\n  /** Nimmt eine Zahl und gibt eine deutsche Representation dieses Wertes zurück */\r\n  public static asGermanFloat(value: number | string, stellen?: number): string | undefined {\r\n    if (value === null || value === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    if (!_.isUndefined(stellen) && _.isNumber(value)) {\r\n      value = (value as number).toFixed(stellen);\r\n    }\r\n    return value.toString().replace('.', ',');\r\n  }\r\n\r\n  /** Erzeugt ein moment object und setzt dieses auf UTC, falls dies noch nicht geschehen ist. */\r\n  /*public static utcDate(...args: any[]): moment.Moment {\r\n    const isDefined = _.every(args, (arg: any) => Util.isDefined(arg));\r\n    if (!isDefined) {\r\n      return undefined;\r\n    }\r\n    const mObject = moment(...args);\r\n    if (mObject.isUTC()) {\r\n      return mObject;\r\n    } else {\r\n      return mObject.utc(true);\r\n    }\r\n  }*/\r\n  /** Konvertiert ein moment Object in die lokale Zeitzone (Entfernt UTC) */\r\n  /*public static toLocalDate(mObject: moment.Moment): moment.Moment {\r\n    if (!Util.isDefined(mObject)) {\r\n      return undefined;\r\n    }\r\n    const param = moment(mObject);\r\n    if (param.isUTC()) {\r\n      return param.local(true);\r\n    } else {\r\n      return param;\r\n    }\r\n  }*/\r\n\r\n  public static booleanNumberToSting(n: number): string {\r\n    return n === 1 ? 'Ja' : 'Nein';\r\n  }\r\n\r\n  /** Konvertiert ein Moment Object zu einem Date Object */\r\n  /*public static toJSDate(mObject: moment.Moment): Date {\r\n    const mDate = TypeConverter.utcDate(mObject);\r\n    if (!mDate) {\r\n      return undefined;\r\n    }\r\n    return mDate.toDate();\r\n  }*/\r\n\r\n  /** Kovertiert einen String in einen Regex um eine Volltextsuche zu ermöglichen */\r\n  public static asRegex(text: string): RegExp {\r\n    let builderString = '';\r\n    if (_.isEmpty(text)) {\r\n      return new RegExp(builderString);\r\n    }\r\n    _.each(text.split(''), (char) => {\r\n      builderString = builderString + `${char}`;\r\n    });\r\n    return new RegExp(builderString.replace(REGEX.SPECIAL_CHARS_REGEX, '\\\\$&'), 'i');\r\n  }\r\n\r\n  public static booleanToNumber(bool: boolean): number {\r\n    return bool === true ? 1 : 0;\r\n  }\r\n\r\n  public static numberToBoolean(digit: number): boolean {\r\n    return digit === 1;\r\n  }\r\n\r\n  /** Kovertiert einen String, der dem Regex einer Zahl entspricht, in eine Zahl */\r\n  private static convertInputStringToNumber(value: string): number {\r\n    if (value.includes('.')) {\r\n      return Number.parseFloat(value);\r\n    }\r\n    if (value.includes(',')) {\r\n      return Number.parseFloat(value.replace(',', '.'));\r\n    }\r\n    return Number.parseInt(value);\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {AccessableFormControl} from '../../abstract/validation/accessable-form-control';\r\nimport {TypeConverter} from '../util/type-converter';\r\nimport {Util} from '../util/util';\r\n\r\nexport abstract class AccessableControlFactory {\r\n\r\n  public static simpleControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = new AccessableFormControl();\r\n    control.initialize(formState, validators);\r\n    return control;\r\n  }\r\n\r\n  public static numberControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = TypeConverter.asGermanFloat;\r\n    control.convertTo = TypeConverter.toNumber;\r\n    control.setValue(formState);\r\n    return control;\r\n  }\r\n\r\n  public static numberBooleanControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = TypeConverter.numberToBoolean;\r\n    control.convertTo = TypeConverter.booleanToNumber;\r\n    control.setValue(formState);\r\n    return control;\r\n  }\r\n\r\n  public static dateControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    return control;\r\n  }\r\n\r\n  /** Schneides alle Whitespaces am Ende und Anfang weg */\r\n  public static trimControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = (str: string): string | undefined | null => {\r\n      if (Util.isDefined(str)) {\r\n        return str.trim();\r\n      }\r\n      return str;\r\n    };\r\n    control.convertTo = (str: string): string | undefined | null => {\r\n      if (Util.isDefined(str)) {\r\n        return str.trim();\r\n      }\r\n      return str;\r\n    };\r\n    return control;\r\n  }\r\n}\r\n","\r\nexport enum HttpStatusCodes {\r\n  OK = 200,\r\n  BAD_REQUEST = 400,\r\n  PRECONDITION_FAILED = 412,\r\n  CONFLICT = 409,\r\n  FORBIDDEN = 403,\r\n  NOT_FOUND = 404,\r\n  LOCKED = 423,\r\n  NOT_ACCEPTABLE = 406\r\n}\r\n","import {BaseObject} from './base-object';\r\nimport {ChangeDetectorRef, Component} from '@angular/core';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {SubscriptionHandler} from '../../impl/util/subscription-handler';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport abstract class BasePushStrategyObject extends BaseObject {\r\n\r\n  protected abstract cdr: ChangeDetectorRef;\r\n\r\n  protected markForCheckIf(subject: Observable<any>): Subscription {\r\n    return this.watch(subject, new SubscriptionHandler(this.cdr.markForCheck.bind(this.cdr)));\r\n  }\r\n\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport {Util} from \"./util\";\r\n\r\n/**\r\n * Diese Klasse kann verwendet werden um Werte zu speichern und die automatisch\r\n * überwachbar zu machen. Dadurch können UI Push Strategien leichter implementiert werden.\r\n */\r\nexport class ObservableValue<TValueType> {\r\n\r\n  private value$: TValueType;\r\n  public readonly changed: Subject<TValueType> = new Subject<TValueType>();\r\n\r\n  public constructor(\r\n    initialValue?: TValueType,\r\n    private readonly equals?: (current: TValueType, next: TValueType) => boolean\r\n  ) {\r\n    this.value$ = initialValue;\r\n    this.equals = Util.isDefined(this.equals) ? this.equals : this.defaultComparator;\r\n  }\r\n\r\n\r\n  public set value(value: TValueType) {\r\n    if (!this.equals(this.value$, value)) {\r\n      this.value$ = value;\r\n      this.changed.next(value);\r\n    }\r\n  }\r\n\r\n  public get value(): TValueType {\r\n    return this.value$;\r\n  }\r\n\r\n\r\n  private defaultComparator(current: TValueType, next: TValueType): boolean {\r\n    return current === next;\r\n  }\r\n\r\n}\r\n","import {BaseObject} from \"../ui/base-object\";\r\nimport {IReadonlyStoreRestService} from \"../../interface/http/i-readonly-stored-rest-service\";\r\nimport {ItemStore} from \"../../impl/util/item-store\";\r\nimport {ReadonlyRestServiceObserver} from \"../../impl/http/readonly-rest-service-observer\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {ReadonlyRestHandler} from \"../../impl/http/readony-rest-handler\";\r\nimport { tap } from 'rxjs/operators';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractStoredReadonlyRestservice<TModel> extends BaseObject\r\n  implements IReadonlyStoreRestService<TModel> {\r\n\r\n  public abstract url: string;\r\n  public abstract store: ItemStore<TModel>;\r\n  public abstract identifier: string;\r\n  protected abstract http: HttpClient;\r\n\r\n  public readonly observer: ReadonlyRestServiceObserver<TModel>;\r\n\r\n  protected constructor(\r\n    restServiceObserver?: ReadonlyRestServiceObserver<TModel>\r\n  ) {\r\n    super();\r\n    this.observer = Util.isDefined(restServiceObserver) ? restServiceObserver :\r\n      new ReadonlyRestServiceObserver<TModel>();\r\n  }\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<TModel[]> {\r\n    return new ReadonlyRestHandler<TModel>(this.http, this.url, this.observer).all(searchParams, httpOptions)\r\n      .pipe(\r\n        tap( (response: TModel[]) => {\r\n          this.store.updateItems(response);\r\n        })\r\n      );\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new ReadonlyRestHandler<TModel>(this.http, this.url, this.observer).show(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (response: TModel) => {\r\n          this.store.update(response);\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractStoredReadonlyRestservice} from \"./abstract-stored-readonly-restservice\";\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractStoredRestservice<TModel>\r\n  extends AbstractStoredReadonlyRestservice<TModel>\r\n  implements IWriteableRestService<TModel> {\r\n\r\n  declare public readonly observer: RestServiceObserver<TModel>;\r\n\r\n  protected constructor() {\r\n    super(new RestServiceObserver<TModel>());\r\n  }\r\n\r\n  public create(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .create(model, getParams, httpOptions)\r\n    return this.modifyCreateCall(request);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .destroy(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( () => {\r\n          this.store.removeByIdentifier(id);\r\n        })\r\n      );\r\n  }\r\n\r\n  public partialUpdate(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (result: TModel) => {\r\n          this.store.update(result);\r\n        })\r\n      );\r\n  }\r\n\r\n  public save(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .save(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public set(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .set(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public update(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .update(model, getParams, httpOptions);\r\n    request = this.modifyUpdateCall(request);\r\n    return request;\r\n  }\r\n\r\n  protected modifyCreateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.push(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected modifyUpdateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.update(result);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import {IDeactivate} from \"../../interface/util/i-deactivate\";\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport {SubscriptionManager} from \"./subscription-manager\";\r\nimport {SubscriptionHandler} from \"./subscription-handler\";\r\n\r\nexport class DeactivationHandler implements IDeactivate {\r\n\r\n  private deactivators$: { [name: string]: IDeactivate } = {};\r\n\r\n\r\n  public register(name: string, component: IDeactivate): void {\r\n    this.deactivators$[name] = component;\r\n  }\r\n\r\n  public remove(name: string): void {\r\n    delete this.deactivators$[name];\r\n  }\r\n\r\n  public canDeactivate(): Observable<boolean> {\r\n    return new Observable<boolean>(subscriber => {\r\n      this._deactivateComponent(0, subscriber);\r\n    });\r\n  }\r\n\r\n  private _deactivateComponent(index: number, observer: Subscriber<boolean>): void {\r\n    const component = Object.values(this.deactivators$)[index];\r\n    if (!component) {\r\n      observer.next(true);\r\n      observer.complete();\r\n    } else {\r\n      SubscriptionManager.subscribe(component.canDeactivate(), new SubscriptionHandler( (canDeactivate: boolean) => {\r\n        if (!canDeactivate) {\r\n          observer.next(false);\r\n          observer.complete();\r\n        } else {\r\n          this._deactivateComponent(index + 1, observer);\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, Subscriber, forkJoin } from 'rxjs';\r\nimport * as _ from 'underscore';\r\nimport {Util} from \"../../impl/util/util\";\r\nimport {SubscriptionManager} from \"../../impl/util/subscription-manager\";\r\nimport {SubscriptionHandler} from \"../../impl/util/subscription-handler\";\r\n\r\nexport abstract class AbstractActivationQueuedGuard implements CanActivate {\r\n\r\n  private readonly queue: CanActivate[][] = [];\r\n\r\n  private route: ActivatedRouteSnapshot;\r\n  private state: RouterStateSnapshot;\r\n\r\n  public canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    this.route = route;\r\n    this.state = state;\r\n    return new Observable((subscriber) => {\r\n      this.runQueueRecursive(0, subscriber);\r\n    });\r\n  }\r\n\r\n  protected sequence(step: CanActivate[] | CanActivate): AbstractActivationQueuedGuard {\r\n    if (_.isArray(step)) {\r\n      this.queue.push(step as CanActivate[]);\r\n    } else {\r\n      this.queue.push([step as CanActivate]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  private runQueueRecursive(level: number, subscriber: Subscriber<boolean | UrlTree>): void {\r\n    const currentQueueItems: CanActivate[] = this.queue[level];\r\n    if (!Util.isDefined(currentQueueItems)) {\r\n      subscriber.next(true);\r\n      subscriber.complete();\r\n      return;\r\n    }\r\n    const activators: CanActivate[] = _.map(currentQueueItems, (queueItem: CanActivate) => {\r\n      return queueItem.canActivate(this.route, this.state);\r\n    });\r\n    SubscriptionManager.subscribe(forkJoin(activators), new SubscriptionHandler(\r\n      (canActivateStates: boolean[]) => {\r\n        if (!_.all(canActivateStates)) {\r\n          subscriber.next(false);\r\n          subscriber.complete();\r\n        } else {\r\n          this.runQueueRecursive(level + 1, subscriber);\r\n        }\r\n      },\r\n      () => {\r\n        subscriber.next(false);\r\n        subscriber.complete();\r\n      }\r\n    ));\r\n  }\r\n\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport {AbstractRouteConfiguration} from \"./abstract-route-configuration\";\r\nimport {IRoutingData} from \"../../interface/routing/i-routing-configuration\";\r\n\r\n\r\nexport abstract class AbstractActivationGuard<TSuccessType, TRouteParams> implements CanActivate {\r\n\r\n  protected abstract onSuccess(result: TSuccessType): Observable<boolean>;\r\n  protected abstract onError(error: any): Observable<boolean>;\r\n  protected abstract onActivate(): Observable<TSuccessType>;\r\n\r\n  protected route: ActivatedRouteSnapshot;\r\n  protected state: RouterStateSnapshot;\r\n\r\n  public canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    this.route = route;\r\n    this.state = state;\r\n    return this.onActivate()\r\n      .pipe(\r\n        switchMap((result: TSuccessType): Observable<boolean> => {\r\n          return this.onSuccess(result);\r\n        }),\r\n        catchError((error): Observable<boolean> => {\r\n          return this.onError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  protected get routeConfiguration(): AbstractRouteConfiguration<TRouteParams> {\r\n    return (this.route.data as IRoutingData<TRouteParams>).routeConfiguration;\r\n  }\r\n\r\n}\r\n","import {Util} from \"../../impl/util/util\";\r\nimport * as _ from 'underscore';\r\n\r\nexport abstract class AbstractRouteConfiguration<TParams> {\r\n\r\n  protected constructor(\r\n    protected pathSegments: string[],\r\n    protected paramNames?: TParams,\r\n    protected parent?: AbstractRouteConfiguration<any>\r\n  ) {}\r\n\r\n  public get path(): string {\r\n    if (Util.isDefined(this.parent)) {\r\n      return `${this.parent.path}/${this.pathSegments.join('/')}`;\r\n    } else {\r\n      return this.pathSegments.join('/');\r\n    }\r\n  }\r\n\r\n  public get paramDefinition(): TParams {\r\n    return _.extend(\r\n      Util.isDefined(this.parent) ? this.parent.paramDefinition : {},\r\n      this.paramNames || {}\r\n    );\r\n  }\r\n\r\n  public buildNavigation(params?: TParams): any[] {\r\n    let navigationParams = Util.isDefined(this.parent) ?\r\n      this.parent.buildNavigation(params) : [];\r\n    if (!Util.isDefined(params)) {\r\n      return navigationParams.concat(this.pathSegments);\r\n    }\r\n    navigationParams = navigationParams.concat(_.map(this.pathSegments, (segment: string) => {\r\n      const segmentInParams = params[segment.replace(':', '')];\r\n      if (Util.isDefined(segmentInParams)) {\r\n        return segmentInParams;\r\n      }\r\n      return segment;\r\n    }));\r\n    return navigationParams;\r\n  }\r\n\r\n  public validate(): boolean {\r\n    for(const pathSnippet in this.pathSegments) {\r\n      if (!Util.isDefined(pathSnippet)) {\r\n        console.error('Creating a route without a path snippet is not allowed');\r\n        return false;\r\n      }\r\n      if (pathSnippet.startsWith('/')) {\r\n        console.error('Creating a route with a path snippet starting with a / is not allowed');\r\n        return false;\r\n      }\r\n      if (pathSnippet.endsWith('/')) {\r\n        console.error('Creating a route with a path snippet ending with a / is not allowed');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {AbstractRouteConfiguration} from \"./abstract-route-configuration\";\r\nimport {IRoutingData} from \"../../interface/routing/i-routing-configuration\";\r\n\r\nexport abstract class AbstractResolver<TData, TRouteParams> implements Resolve<TData> {\r\n\r\n  protected route: ActivatedRouteSnapshot;\r\n  protected state: RouterStateSnapshot;\r\n\r\n  protected abstract onResolve(): Observable<TData>;\r\n\r\n  public resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<TData> | Promise<TData> | TData {\r\n    this.route = route;\r\n    this.state = state;\r\n    return this.onResolve();\r\n  }\r\n\r\n  protected get routeConfiguration(): AbstractRouteConfiguration<TRouteParams> {\r\n    return (this.route.data as IRoutingData<TRouteParams>).routeConfiguration;\r\n  }\r\n\r\n}\r\n","import {IDeactivate} from \"../../interface/util/i-deactivate\";\r\nimport { Observable } from 'rxjs';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport {IEntitySelector} from \"../../interface/ui/i-entity-selector\";\r\nimport {SubscriptionHandler} from \"../../impl/util/subscription-handler\";\r\nimport * as _ from 'underscore';\r\nimport {AbstractEntityResolver} from \"../util/abstract-entity-resolver\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {BasePushStrategyObject} from \"./base-push-strategy-object\";\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport abstract class BaseRootComponent extends BasePushStrategyObject implements IDeactivate, OnDestroy {\r\n\r\n  public abstract canDeactivate(): Observable<boolean>;\r\n  protected abstract activatedRoute: ActivatedRoute;\r\n  protected observables: IEntitySelector<any>[] = [];\r\n\r\n  public listenTo(observable: IEntitySelector<any>, resolver: AbstractEntityResolver<any, any>): void {\r\n    this.observables.push(observable);\r\n    observable.isVisible.value = true;\r\n    this.watch(observable.nextRequested, new SubscriptionHandler((dataSet: any) => {\r\n      this.onNextRequested(observable, dataSet, resolver);\r\n    }));\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n    _.each(this.observables, (observable: IEntitySelector<any>) => observable.isVisible.value = false);\r\n  }\r\n\r\n  protected onNextRequested(\r\n    observable: IEntitySelector<any>,\r\n    dataSet: any,\r\n    resolver: AbstractEntityResolver<any, any>\r\n  ): void {\r\n    this.subscribe(this.canDeactivate(), new SubscriptionHandler((canDeactivate: boolean) => {\r\n      if (canDeactivate) {\r\n        // Maybe catch error\r\n        resolver.resolve(this.activatedRoute, dataSet, observable);\r\n      }\r\n    }));\r\n  }\r\n\r\n}\r\n","import {AbstractStoredReadonlyRestservice} from \"./abstract-stored-readonly-restservice\";\r\nimport { Observable, of } from 'rxjs';\r\nimport * as _ from 'underscore';\r\nimport {TimestampItemStore} from \"../../impl/util/timestamp-item-store\";\r\n\r\nexport abstract class AbstractReadonlyCachedRestservice<TModel>\r\n  extends AbstractStoredReadonlyRestservice<TModel> {\r\n\r\n  public abstract store: TimestampItemStore<TModel>;\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<TModel[]> {\r\n    if (this.store.isStoreValid()) {\r\n      return of(this.store.items);\r\n    } else {\r\n      return super.all(searchParams, httpOptions);\r\n    }\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    if (this.store.isItemValid(id)) {\r\n      const lookup = {} as TModel;\r\n      lookup[this.identifier] = id;\r\n      return of(_.find(this.store.items, lookup));\r\n    }\r\n    return super.show(id, getParams, httpOptions);\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractReadonlyCachedRestservice} from \"./abstract-readonly-cached-restservice\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\nimport {Util} from \"../../impl/util/util\";\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n\r\nexport abstract class AbstractCachedRestservice<TModel>\r\n  extends AbstractReadonlyCachedRestservice<TModel>\r\n  implements IWriteableRestService<TModel>{\r\n\r\n  public readonly observer: RestServiceObserver<TModel> = new RestServiceObserver();\r\n\r\n\r\n  public create(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .create(model, getParams, httpOptions);\r\n    return this.modifyCreateCall(request);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .destroy(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( () => {\r\n          this.store.removeByIdentifier(id);\r\n        })\r\n      );\r\n  }\r\n\r\n  public partialUpdate(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (result: TModel) => {\r\n          this.store.update(result);\r\n        })\r\n      );\r\n  }\r\n\r\n  public save(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .save(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public set(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .set(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public update(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .update(model, getParams, httpOptions);\r\n    request = this.modifyUpdateCall(request);\r\n    return request;\r\n  }\r\n\r\n  protected modifyCreateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.push(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected modifyUpdateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.update(result);\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractRouteConfiguration} from \"../routing/abstract-route-configuration\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as _ from 'underscore';\r\nimport {IEntitySelector} from \"../../interface/ui/i-entity-selector\";\r\n\r\nexport interface IEntityResolverConfiguration {\r\n  keepQueryParams: boolean;\r\n}\r\n\r\nexport abstract class AbstractEntityResolver<TRouteParams, TModel> {\r\n\r\n  public abstract resolve(\r\n    activatedRoute: ActivatedRoute,\r\n    model: TModel,\r\n    entitySelector: IEntitySelector<TModel>\r\n  ): Promise<boolean>;\r\n\r\n  protected constructor(\r\n    protected readonly router: Router,\r\n    protected readonly routeConfiguration: AbstractRouteConfiguration<TRouteParams>,\r\n    protected readonly configuration?: IEntityResolverConfiguration,\r\n  ) {\r\n    this.configuration = configuration || AbstractEntityResolver.generateDefaultConfiguration();\r\n  }\r\n\r\n  protected runResolver(activatedRoute: ActivatedRoute, params: object): Promise<boolean> {\r\n    const currentRouteParams = _.extend(_.clone(activatedRoute.snapshot.params), params);\r\n    if (this.configuration.keepQueryParams) {\r\n      return this.router.navigate(\r\n        this.routeConfiguration.buildNavigation(currentRouteParams),\r\n        {queryParams: activatedRoute.snapshot.queryParams}\r\n      );\r\n    } else {\r\n      return this.router.navigate(this.routeConfiguration.buildNavigation(currentRouteParams))\r\n    }\r\n  }\r\n\r\n  private static generateDefaultConfiguration(): IEntityResolverConfiguration {\r\n    return {\r\n      keepQueryParams: false\r\n    };\r\n  }\r\n\r\n}\r\n","import {ItemStore} from \"./item-store\";\r\nimport {Util} from \"./util\";\r\nimport * as _ from 'underscore';\r\n\r\nexport class TimestampItemStore<TModel> extends ItemStore<TModel> {\r\n\r\n  public static readonly ITEM_TIMESTAMP_KEY = '__timestamp__';\r\n\r\n  private wasFilled: boolean;\r\n\r\n  constructor(\r\n    identifier: any,\r\n    private itemLifetimeInSeconds: number,\r\n    transform?: (items: TModel[]) => TModel[]\r\n  ) {\r\n    super(identifier, transform);\r\n    this.wasFilled = false;\r\n  }\r\n\r\n  public updateItems(items: TModel[]): void {\r\n    super.updateItems(items);\r\n    _.each(this.items, (item) => this.trackItem(item));\r\n    this.wasFilled = true;\r\n  }\r\n\r\n  public clear(): void {\r\n    super.clear();\r\n    this.wasFilled = false;\r\n  }\r\n\r\n  public update(item: TModel): void {\r\n    super.update(item);\r\n    this.trackItem(item);\r\n  }\r\n\r\n  public push(item: TModel): void {\r\n    super.push(item);\r\n    this.trackItem(item);\r\n  }\r\n\r\n  public isItemValid(identifier: any): boolean {\r\n    let itemInStore = null;\r\n    for(const item of this.items) {\r\n      if (item[this.identifier] === identifier) {\r\n        itemInStore = item;\r\n        break;\r\n      }\r\n    }\r\n    if (!Util.isDefined(itemInStore)) {\r\n      return false;\r\n    }\r\n    const currentTimeStamp = Util.getCurrentUnixTimestamp();\r\n    return (currentTimeStamp - this.itemLifetimeInSeconds) < itemInStore[TimestampItemStore.ITEM_TIMESTAMP_KEY];\r\n  }\r\n\r\n  public isStoreValid(): boolean {\r\n    if (!this.wasFilled) {\r\n      return false;\r\n    }\r\n    if (_.isEmpty(this.items)) {\r\n      return false;\r\n    }\r\n    return _.all(this.items, (item) => this.isItemValid(item[this.identifier]));\r\n  }\r\n\r\n  private trackItem(item: TModel): void {\r\n    item[TimestampItemStore.ITEM_TIMESTAMP_KEY] = Util.getCurrentUnixTimestamp();\r\n  }\r\n\r\n}\r\n","/*\r\n * Public API Surface of mrd-core\r\n */\r\n\r\nexport * from './lib/interface/http/i-readonly-restservice';\r\nexport * from './lib/interface/http/i-readonly-stored-rest-service';\r\nexport * from './lib/interface/util/i-subscription-handler';\r\nexport * from './lib/impl/util/subscription-manager';\r\nexport * from './lib/impl/util/util';\r\nexport * from './lib/impl/util/item-store';\r\nexport * from './lib/impl/http/rest-handler';\r\nexport * from './lib/impl/util/subscription-handler';\r\nexport * from './lib/abstract/ui/base-object';\r\nexport * from './lib/abstract/validation/accessable-form-control';\r\nexport * from './lib/abstract/validation/accessable-form-group';\r\nexport * from './lib/abstract/validation/accessable-form-array';\r\nexport * from './lib/abstract/http/abstract-readonly-restservice';\r\nexport * from './lib/abstract/http/abstract-rest-service';\r\nexport * from './lib/impl/validation/validator-custom';\r\nexport * from './lib/impl/validation/validator-email';\r\nexport * from './lib/impl/validation/validator-fixed-value';\r\nexport * from './lib/impl/validation/validator-float';\r\nexport * from './lib/impl/validation/validator-integer';\r\nexport * from './lib/impl/validation/validator-required';\r\nexport * from './lib/impl/validation/validator-postal-code';\r\nexport * from './lib/impl/validation/accessable-control-factory';\r\nexport * from './lib/interface/validation/i-validator';\r\nexport * from './lib/enum/http-status-codes';\r\nexport * from './lib/abstract/ui/base-push-strategy-object';\r\nexport * from './lib/impl/util/observable-value';\r\nexport * from './lib/abstract/http/abstract-stored-readonly-restservice';\r\nexport * from './lib/abstract/http/abstract-stored-restservice';\r\nexport * from './lib/interface/util/i-deactivate';\r\nexport * from './lib/impl/util/deactivation-handler';\r\nexport * from './lib/impl/util/type-converter';\r\nexport * from './lib/abstract/routing/abstract-activation-queued-guard';\r\nexport * from './lib/abstract/routing/abstract-activation-guard';\r\nexport * from './lib/enum/regex';\r\nexport * from './lib/abstract/routing/abstract-route-configuration';\r\nexport * from './lib/interface/routing/i-routing-configuration';\r\nexport * from './lib/abstract/routing/abstract-resolver';\r\nexport * from './lib/interface/ui/i-entity-selector';\r\nexport * from './lib/abstract/ui/base-root-component';\r\nexport * from './lib/abstract/http/abstract-cached-restservice';\r\nexport * from './lib/abstract/http/abstract-readonly-cached-restservice';\r\nexport * from './lib/abstract/util/abstract-entity-resolver';\r\nexport * from './lib/impl/util/timestamp-item-store';\r\nexport * from './lib/impl/http/readony-rest-handler';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}