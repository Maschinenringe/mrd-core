{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://mrd-core/lib/impl/util/subscription-manager.ts","ng://mrd-core/lib/impl/util/util.ts","ng://mrd-core/lib/impl/util/item-store.ts","ng://mrd-core/lib/impl/http/rest-handler.ts","ng://mrd-core/lib/impl/util/subscription-handler.ts","ng://mrd-core/lib/abstract/ui/base-object.ts","ng://mrd-core/lib/impl/validation/validator-required.ts","ng://mrd-core/lib/abstract/validation/accessable-form-control.ts","ng://mrd-core/lib/abstract/validation/accessable-form-group.ts","ng://mrd-core/lib/abstract/validation/accessable-form-array.ts","ng://mrd-core/lib/impl/http/readonly-rest-service-observer.ts","ng://mrd-core/lib/impl/http/readony-rest-handler.ts","ng://mrd-core/lib/abstract/http/abstract-readonly-restservice.ts","ng://mrd-core/lib/impl/http/rest-service-observer.ts","ng://mrd-core/lib/abstract/http/abstract-rest-service.ts","ng://mrd-core/lib/impl/validation/validator-custom.ts","ng://mrd-core/lib/enum/regex.ts","ng://mrd-core/lib/impl/validation/validator-email.ts","ng://mrd-core/lib/impl/validation/validator-fixed-value.ts","ng://mrd-core/lib/impl/validation/validator-float.ts","ng://mrd-core/lib/impl/validation/validator-integer.ts","ng://mrd-core/lib/impl/validation/validator-postal-code.ts","ng://mrd-core/lib/impl/util/type-converter.ts","ng://mrd-core/lib/impl/validation/accessable-control-factory.ts","ng://mrd-core/lib/enum/http-status-codes.ts","ng://mrd-core/lib/abstract/ui/base-push-strategy-object.ts","ng://mrd-core/lib/impl/util/observable-value.ts","ng://mrd-core/lib/abstract/http/abstract-stored-readonly-restservice.ts","ng://mrd-core/lib/abstract/http/abstract-stored-restservice.ts","ng://mrd-core/lib/impl/util/deactivation-handler.ts","ng://mrd-core/lib/abstract/routing/abstract-activation-queued-guard.ts","ng://mrd-core/lib/abstract/routing/abstract-activation-guard.ts","ng://mrd-core/lib/abstract/routing/abstract-route-configuration.ts","ng://mrd-core/lib/abstract/routing/abstract-resolver.ts","ng://mrd-core/lib/abstract/ui/base-root-component.ts","ng://mrd-core/lib/abstract/http/abstract-readonly-cached-restservice.ts","ng://mrd-core/lib/abstract/http/abstract-cached-restservice.ts","ng://mrd-core/lib/abstract/util/abstract-entity-resolver.ts","ng://mrd-core/lib/impl/util/timestamp-item-store.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","SubscriptionManager","subscribeAs","name","observable","handler","_this","sub","pipe","take","finalize","args","_i","_.isFunction","onFinished","apply","deleteSubscription","subscribe","onSuccess","onError","pushSubscription","subscription","subscriptions","unsubscribe","Util","isDefined","obj","armUrlWithSearchParams","url","queryParams","_.isEmpty","_.each","key","querySelector","indexOf","createEntityUrl","id","getBrowser","tem","ua","navigator","userAgent","M","match","test","exec","slice","join","replace","appName","appVersion","splice","getCurrentUnixTimestamp","Math","round","Date","getTime","guid","s4","floor","random","toString","substring","transformUmlaute","sortAlpabetically","list","attribute","_.sortBy","item","toUpperCase","ItemStore","identifier","transform","onChanged","Subject","items$","transformedItems$","updateItems","items","clear","items_1","tslib_1.__values","items_1_1","internalTransform$","remove","removeByIdentifier","update","values","defineProperty","RestHandler","http","observer","model","getParams","httpOptions","isCreatingItem","post","tap","result","onItemCreated","destroy","isDestoyingItem","delete","onItemDestroyed","partialUpdate","isPartiallyUpdatingItem","patch","onItemPartialUpdated","save","isSavingItem","onItemSaved","set","isUpdatingItem","put","onItemUpdated","SubscriptionHandler","BaseObject","$unsubscribe","watch","takeUntil","ngOnDestroy","complete","ValidatorRequired","hasError","validator","input","validate","_.isDate","moment.isMoment","_.isNumber","_.isString","required","_.isBoolean","AccessableFormControl","initialize","formState","validators","control","FormControl","validateWith","setValue","validators$","setValidators","_.map","v","required$","updateValueAndValidity","showAs","reset","markAsUsed","markAsDirty","markAsTouched","markAsUnused","markAsPristine","markAsUntouched","disable","enable","blockControls","blocked$","unblockControls","disabled","_.find","convertTo","Observable","valueChanges","blocked","touched","dirty","AccessableFormGroup","changed$","fields","FormGroup","_.mapObject","field","fields$","propagateChanges","ret","valid","enabled","asObservable","AccessableFormArray","type","FormArray","entries$","entry","generateFormEntry","removeAt","index","_.reject","_b","_c","_.isArray","clearValidators","validation","_.compact","models","models_1","models_1_1","ReadonlyRestServiceObserver","onItemFetched","onItemsFetched","isFetchingItem$","isFetchingItems$","isActivate","isFetchingItem","isFetchingItems","fetching","ReadonlyRestHandler","all","searchParams","get","show","AbstractReadonlyRestservice","restServiceObserver","_super","tslib_1.__extends","RestServiceObserver","isCreatingItem$","isUpdatingItem$","isDestoyingItem$","isPartiallyUpdatingItem$","isSavingItem$","isCreating","isUpdating","isDestroying","isSaving","AbstractRestservice","ValidatorCustom","REGEX","NUMBER","INPUT_NUMBER","INTEGER","SIGNED_INTEGER","EMAIL","POSTAL_CODE","SPECIAL_CHARS_REGEX","DATE","ValidatorEmail","invalidEmail","ValidatorFixedValue","comparator","value$","validatorFixed","ValidatorFloat","digitsBefore","digitsAfter","validAmountDisgitsBefore","validAmountDisgitsAfter","numberSplitted","split","invalidFloat","ValidatorInteger","allowNegativeValues$","regex$","invalidInteger","ValidatorPostalCode","invalidPostalCode","TypeConverter","toNumber","convertInputStringToNumber","asGermanFloat","stellen","_.isUndefined","toFixed","booleanNumberToSting","asRegex","text","builderString","RegExp","char","booleanToNumber","bool","numberToBoolean","digit","includes","Number","parseFloat","parseInt","AccessableControlFactory","simpleControl","numberControl","numberBooleanControl","dateControl","trimControl","str","trim","HttpStatusCodes","OK","BAD_REQUEST","PRECONDITION_FAILED","CONFLICT","FORBIDDEN","NOT_FOUND","LOCKED","NOT_ACCEPTABLE","BasePushStrategyObject","markForCheckIf","subject","cdr","markForCheck","bind","ObservableValue","initialValue","equals","changed","defaultComparator","current","AbstractStoredReadonlyRestservice","response","store","AbstractStoredRestservice","request","modifyCreateCall","modifyUpdateCall","DeactivationHandler","deactivators$","register","component","canDeactivate","subscriber","_deactivateComponent","AbstractActivationQueuedGuard","queue","canActivate","route","state","runQueueRecursive","sequence","step","level","currentQueueItems","activators","queueItem","forkJoin","canActivateStates","_.all","AbstractActivationGuard","onActivate","switchMap","catchError","routeConfiguration","AbstractRouteConfiguration","pathSegments","paramNames","parent","path","_.extend","paramDefinition","buildNavigation","params","navigationParams","segment","segmentInParams","pathSnippet","console","startsWith","endsWith","AbstractResolver","resolve","onResolve","BaseRootComponent","observables","listenTo","resolver","isVisible","nextRequested","dataSet","onNextRequested","activatedRoute","AbstractReadonlyCachedRestservice","isStoreValid","of","isItemValid","lookup","AbstractCachedRestservice","AbstractEntityResolver","router","configuration","generateDefaultConfiguration","runResolver","currentRouteParams","_.clone","snapshot","keepQueryParams","navigate","TimestampItemStore","itemLifetimeInSeconds","wasFilled","trackItem","itemInStore","ITEM_TIMESTAMP_KEY"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {finalize, take} from 'rxjs/operators';\nimport {Observable, Subscription} from \"rxjs\";\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\nimport * as _ from 'underscore';\n\n/** Diese Klasse kÃ¼mmert sich um die Speicherverwaltung von Subscriptions.\n Diese erzeugen Memory-Leaks, wenn sie nicht sauber gelÃ¶scht werden. */\nexport abstract class SubscriptionManager {\n  // Alle benannten Subscriptions werden hier gecached\n  private static subscriptions: object = {};\n  /** Subscription mit einem Namen. Diese Funktion ist nÃ¼tzlich,\n   falls eine Subscription Ã¶fters aufgerufen wird und die vorherige, falls\n   noch nicht abgeschlossen, beendet werden soll (HTTP Aufrufe). */\n  public static subscribeAs<T>(\n    name: string,\n    observable: Observable<T>,\n    handler: ISubscriptionHandler\n  ): Subscription {\n    const sub = observable\n      .pipe(\n        take(1),\n        finalize((...args: any[]) => {\n          if (_.isFunction(handler.onFinished)) {\n            handler.onFinished(...args);\n            if (sub) {\n              this.deleteSubscription(name);\n            }\n          }\n        })\n      )\n      .subscribe(\n        (...args: any[]) => {\n          if (_.isFunction(handler.onSuccess)) {\n            handler.onSuccess(...args);\n          }\n        },\n        (...args: any[]) => {\n          if (_.isFunction(handler.onError)) {\n            handler.onError(...args);\n          }\n        }\n      );\n    this.pushSubscription(name, sub);\n    return sub;\n  }\n  /** Funktion fÃ¼r einmalige Subscriptions (z.B.: Initialisierungsaufrufe) */\n  public static subscribe<T>(\n    observable: Observable<T>,\n    handler: ISubscriptionHandler\n  ): Subscription {\n    const sub = observable\n      .pipe(\n        take(1),\n        finalize((...args: any[]) => {\n          if (_.isFunction(handler.onFinished)) {\n            handler.onFinished(...args);\n            if (sub) {\n              this.deleteSubscription(name);\n            }\n          }\n        })\n      )\n      .subscribe(\n        (...args: any[]) => {\n          if (_.isFunction(handler.onSuccess)) {\n            handler.onSuccess(...args);\n          }\n        },\n        (...args: any[]) => {\n          if (_.isFunction(handler.onError)) {\n            handler.onError(...args);\n          }\n        }\n      );\n    return sub;\n  }\n\n  private static pushSubscription(name: string, subscription: Subscription): void {\n    this.deleteSubscription(name);\n    SubscriptionManager.subscriptions[name] = subscription;\n  }\n\n  private static deleteSubscription(name: string): void {\n    const sub = SubscriptionManager.subscriptions[name];\n    if (sub) {\n      sub.unsubscribe();\n      delete SubscriptionManager.subscriptions[name];\n    }\n  }\n\n}\n\n","import * as _ from 'underscore';\n\nexport class Util {\n\n  public static isDefined(obj: any): boolean {\n    return obj !== null && obj !== undefined;\n  }\n\n  public static armUrlWithSearchParams(url: string, queryParams: object): string {\n    if (!queryParams || _.isEmpty(queryParams)) {\n      return url;\n    }\n    _.each(queryParams, (value: any, key: string) => {\n      const querySelector = url.indexOf('?') === -1 ? '?' : '&';\n      url = `${url}${querySelector}${key}=${value}`;\n    });\n    return url;\n  }\n\n  public static createEntityUrl(url: string, id: any): string {\n    return `${url}/${id}`;\n  }\n\n  public static getBrowser(): string {\n    const ua = navigator.userAgent;\n    let tem;\n    let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n    if (/trident/i.test(M[1])) {\n      tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n      return 'IE ' + (tem[1] || '');\n    }\n    if (M[1] === 'Chrome') {\n      tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n      if (tem != null) {\n        return tem.slice(1).join(' ').replace('OPR', 'Opera');\n      }\n    }\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n    tem = ua.match(/version\\/(\\d+)/i);\n    if (tem != null) {\n      M.splice(1, 1, tem[1]);\n    }\n    return M.join(' ');\n  }\n\n  public static getCurrentUnixTimestamp(): number {\n    return Math.round((new Date()).getTime() / 1000);\n  }\n\n  public static guid(): string {\n    const s4 = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n        .toString(16)\n        .substring(1);\n    };\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  }\n\n  private static transformUmlaute(value: string): string {\n    return value\n      .replace('Ã', 'Ae')\n      .replace('Ã¤', 'ae')\n      .replace('Ã', 'Oe')\n      .replace('Ã¶', 'oe')\n      .replace('Ã', 'Ue')\n      .replace('Ã¼', 'ue');\n  }\n\n  public static sortAlpabetically<TListType>(list: TListType[], attribute: string): TListType[] {\n    const resultList = _.sortBy(list, (item: TListType) => this.transformUmlaute(item[attribute]).toUpperCase());\n    return resultList;\n  }\n\n}\n","import {Subject} from 'rxjs';\nimport {Util} from \"./util\";\n\n\nexport class ItemStore<T> {\n\n  public readonly onChanged: Subject<T[]> = new Subject();\n\n  protected items$: object = {};\n  protected transformedItems$: T[] = [];\n\n  constructor(\n    public readonly identifier: any,\n    public readonly transform?: (items: T[]) => T[]\n  ) {}\n\n  public updateItems(items: T[]): void {\n    this.clear();\n    items = items || [];\n    for (const item of items) {\n      this.items$[item[this.identifier]] = item;\n    }\n    this.internalTransform$();\n  }\n\n  public clear(): void {\n    this.items$ = {};\n    this.transformedItems$ = [];\n  }\n\n  public remove(item: T): void {\n    if (item) {\n      delete this.items$[item[this.identifier]];\n      this.internalTransform$();\n    }\n  }\n\n  public removeByIdentifier(identifier: any): void {\n    if (Util.isDefined(identifier)) {\n      delete this.items$[identifier];\n      this.internalTransform$();\n    }\n  }\n\n  public update(item: T): void {\n    if (item) {\n      this.items$[item[this.identifier]] = item;\n      this.internalTransform$();\n    }\n  }\n\n  public push(item: T): void {\n    if (item) {\n      this.items$[item[this.identifier]] = item;\n      this.internalTransform$();\n    }\n  }\n\n  protected internalTransform$(): void {\n    this.transformedItems$ = Object.values(this.items$);\n    if (this.transform) {\n      this.transformedItems$ = this.transform(this.transformedItems$);\n    }\n    this.onChanged.next(this.transformedItems$);\n  }\n\n  get items(): T[] {\n    return this.transformedItems$;\n  }\n}\n","import {Observable} from 'rxjs';\nimport {finalize, tap} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\nimport {RestServiceObserver} from \"./rest-service-observer\";\nimport {Util} from \"../util/util\";\n\n\nexport class RestHandler<T> implements IWriteableRestService<T> {\n\n  constructor(\n    public readonly http: HttpClient,\n    public readonly url: string,\n    public readonly observer: RestServiceObserver<T>,\n    public readonly identifier: string\n  ) {}\n\n  public create(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    this.observer.isCreatingItem = true;\n    return this.http.post<T>(\n        Util.armUrlWithSearchParams(this.url, getParams), model, httpOptions)\n      .pipe(\n        tap((result: T) => {\n          this.observer.onItemCreated.next(result);\n        }),\n        finalize(() => {\n          this.observer.isCreatingItem = false;\n        })\n      );\n  }\n\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\n    this.observer.isDestoyingItem = true;\n    return this.http.delete<void>(\n      Util.armUrlWithSearchParams(\n        Util.createEntityUrl(this.url, id), getParams\n      ),\n      httpOptions\n    ).pipe(\n      tap(() => {\n        this.observer.onItemDestroyed.next(id);\n      }),\n      finalize(() => {\n        this.observer.isDestoyingItem = false;\n      })\n    );\n  }\n\n  public partialUpdate(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    this.observer.isPartiallyUpdatingItem = true;\n    return this.http.patch<T>(\n      Util.armUrlWithSearchParams(\n        Util.createEntityUrl(this.url, model[this.identifier]), getParams\n      ),\n      model,\n      httpOptions\n    ).pipe(\n      tap((result: T) => {\n        this.observer.onItemPartialUpdated.next(result);\n      }),\n      finalize(() => {\n        this.observer.isPartiallyUpdatingItem = false;\n      })\n    );\n  }\n\n  public save(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    this.observer.isSavingItem = true;\n    let observable: Observable<T>;\n    if (Util.isDefined(model[this.identifier])) {\n      observable = this.update(model, getParams, httpOptions);\n    } else {\n      observable = this.create(model, getParams, httpOptions);\n    }\n    return observable\n      .pipe(\n        tap((result: T) => {\n          this.observer.onItemSaved.next(result);\n        }),\n        finalize(() => {\n          this.observer.isSavingItem = false;\n        })\n      );\n  }\n\n  public set(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    this.observer.isSavingItem = true;\n    let observable: Observable<T>;\n    this.observer.isUpdatingItem = true;\n    observable = this.http.put<T>(\n      Util.armUrlWithSearchParams(\n        this.url, getParams\n      ),\n      model,\n      httpOptions\n    ).pipe(\n      tap((result: T) => {\n        this.observer.onItemUpdated.next(result);\n      }),\n      finalize(() => {\n        this.observer.isUpdatingItem = false;\n      })\n    );\n\n    return observable\n      .pipe(\n        tap((result: T) => {\n          this.observer.onItemSaved.next(result);\n        }),\n        finalize(() => {\n          this.observer.isSavingItem = false;\n        })\n      );\n  }\n\n  public update(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    this.observer.isUpdatingItem = true;\n    return this.http.put<T>(\n      Util.armUrlWithSearchParams(\n        Util.createEntityUrl(this.url, model[this.identifier]), getParams\n      ),\n      model,\n      httpOptions\n    ).pipe(\n      tap((result: T) => {\n        this.observer.onItemUpdated.next(result);\n      }),\n      finalize(() => {\n        this.observer.isUpdatingItem = false;\n      })\n    );\n  }\n\n\n}\n","/** Standart Implementierung zur Nutzung von Subscriptions\n *  Generell hat es wenig Sinn diese Klasse zu erzwingen,\n *  allerdings ergibt sich eine bessere Lesbarkeit des Codes daraus.\n */\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\n\nexport class SubscriptionHandler implements ISubscriptionHandler {\n  constructor(\n    public onSuccess?: (...args: any[]) => any,\n    public onError?: (...args: any[]) => any,\n    public onFinished?: (...args: any[]) => any\n  ) {}\n}\n\n","import {OnDestroy} from '@angular/core';\nimport {finalize, takeUntil} from 'rxjs/operators';\nimport {Observable, Subject, Subscription} from \"rxjs\";\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\nimport {SubscriptionManager} from \"../../impl/util/subscription-manager\";\n\n\n/** Abstracte Klasse von der alle Komponenten und Services erben. Sie stellt eine Speicherverwaltung fÃ¼r Observables bereit. */\nexport abstract class BaseObject implements OnDestroy {\n  /** Wird benutzt um Observables bei der ZerstÃ¶rung einer Komponente auszulÃ¶sen.\n   * Wird im ngOnDestroy ausgelÃ¶st.\n   */\n  protected $unsubscribe: Subject<void> = new Subject<void>();\n  /** Funktion zur dauerhaften Ãberwachung von Subscriptions. Speicher wird bei ZerstÃ¶rung der Komponente freigegeben. */\n  protected watch<T>(\n    observable: Observable<T>,\n    handler: ISubscriptionHandler\n  ): Subscription {\n    return observable\n      .pipe(\n        takeUntil(this.$unsubscribe),\n        finalize( (...args: any[]) => {\n          if (handler.onFinished) {\n            handler.onFinished(...args);\n          }\n        })\n      )\n      .subscribe(\n        (...args: any[]) => {\n          if (handler.onSuccess) {\n            handler.onSuccess(...args);\n          }\n        },\n        (...args: any[]) => {\n          if (handler.onError) {\n            handler.onError(...args);\n          }\n        }\n      );\n  }\n  /** Proxy fÃ¼r SubscriptionManager.subscribe */\n  protected subscribe<T>(\n    observable: Observable<T>,\n    handler: ISubscriptionHandler,\n  ): Subscription {\n    return SubscriptionManager.subscribe<T>(observable, handler);\n  }\n  /** Proxy fÃ¼r SubscriptionManager.subscribeAs */\n  protected subscribeAs<T>(\n    name: string,\n    observable: Observable<T>,\n    handler: ISubscriptionHandler\n  ): Subscription {\n    return SubscriptionManager.subscribeAs<T>(name, observable, handler);\n  }\n  /** Alle Observables die mit watch Ã¼berwacht werden, werden hier ausgelÃ¶st. Angular kÃ¼mmert sich im den Aufruf.\n   *  Falls das Kind auch das Interface 'OnDestroy' implementiert, nicht vergessen super.ngOnDestroy() auszurufen, oder der Speicher\n   *  wird nicht freigegeben.\n   */\n  public ngOnDestroy(): void {\n    this.$unsubscribe.next();\n    this.$unsubscribe.complete();\n  }\n\n}\n","import {FormControl, ValidatorFn} from '@angular/forms';\nimport * as _ from 'underscore';\nimport * as moment from 'moment';\nimport {IValidator} from '../../interface/validation/i-validator';\n\n\nexport class ValidatorRequired implements IValidator {\n\n  public hasError = false;\n  public error = 'Pflichtfeld';\n  private value: any;\n\n  constructor(\n    error?: string\n  ) {\n    if (error) {\n      this.error = error;\n    }\n  }\n\n  public validator(): ValidatorFn {\n    return (input: FormControl): object | null => {\n      this.value = input.value;\n      return this.validate();\n    };\n  }\n\n\n  public validate(): any {\n    if (_.isDate(this.value)) {\n      this.hasError = false;\n      return null;\n    }\n    if (moment.isMoment(this.value)) {\n      this.hasError = false;\n      return null;\n    }\n    if (_.isNumber(this.value)) {\n      this.hasError = false;\n      return null;\n    }\n    if (_.isString(this.value)) {\n      if (this.value.length > 0) {\n        this.hasError = false;\n        return null;\n      } else {\n        this.hasError = true;\n        return {required: true};\n      }\n    }\n    if (_.isBoolean(this.value)) {\n      this.hasError = false;\n      return null;\n    }\n    if (!this.value || _.isEmpty(this.value)) {\n      this.hasError = true;\n      return {required: true};\n    } else {\n      this.hasError = false;\n      return null;\n    }\n  }\n\n}\n","import {IValidator} from '../../interface/validation/i-validator';\nimport {FormControl} from '@angular/forms';\nimport * as _ from 'underscore';\nimport {ValidatorRequired} from '../../impl/validation/validator-required';\nimport {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\nimport { Observable, Observer } from 'rxjs';\n\n\nexport class AccessableFormControl<TType = any>\n  implements IAccessableFormControl<AccessableFormControl<TType>, TType> {\n\n  public control: FormControl;\n  public showAs: (value: any) => any;\n  public convertTo: (value: any) => any;\n  private required$: boolean;\n  private validators$: IValidator[];\n  private blocked$: boolean;\n\n  public initialize(\n    formState?: any,\n    validators?: IValidator[]\n  ) {\n    this.control = new FormControl(formState, null, null);\n    this.validateWith(validators);\n    this.setValue(formState);\n  }\n\n  public validateWith(validators: IValidator[] = []): AccessableFormControl {\n    this.validators$ = validators;\n    this.control.setValidators(_.map(validators, (v: IValidator) => {\n      return v.validator();\n    }));\n    this.required$ = false;\n    _.each(this.validators$, (v: IValidator) => {\n      if (v instanceof ValidatorRequired) {\n        this.required$ = true;\n      }\n    });\n    this.control.updateValueAndValidity();\n    return this;\n  }\n\n  public setValue(value: any): AccessableFormControl {\n    if (this.showAs) {\n      this.control.setValue(this.showAs(value));\n    } else {\n      this.control.setValue(value);\n    }\n    return this;\n  }\n\n  public reset(value: TType): AccessableFormControl {\n    if (this.showAs) {\n      this.control.reset(this.showAs(value));\n    } else {\n      this.control.reset(value);\n    }\n    return this;\n  }\n\n  public markAsUsed(): AccessableFormControl {\n    this.control.markAsDirty();\n    this.control.markAsTouched();\n    this.control.updateValueAndValidity();\n    return this;\n  }\n\n  public markAsUnused(): AccessableFormControl {\n    _.each(this.validators$, (validator: IValidator) => validator.hasError = false );\n    this.control.updateValueAndValidity();\n    this.control.markAsPristine();\n    this.control.markAsUntouched();\n    return this;\n  }\n\n  public markAsDirty(): AccessableFormControl {\n    this.control.markAsDirty();\n    return this;\n  }\n\n  public markAsTouched(): AccessableFormControl {\n    this.control.markAsTouched();\n    return this;\n  }\n\n  public disable(): AccessableFormControl {\n    this.control.disable();\n    return this;\n  }\n\n  public enable(): AccessableFormControl {\n    this.control.enable();\n    return this;\n  }\n\n  public blockControls(): void {\n    this.blocked$ = true;\n  }\n\n  public unblockControls(): void {\n    this.blocked$ = false;\n  }\n\n  get disabled(): boolean {\n    return this.control.disabled;\n  }\n\n  get valid(): boolean {\n    if (this.control.disabled) {\n      return true;\n    }\n    return !this.error;\n  }\n\n  get validators(): IValidator[] {\n    return this.validators$;\n  }\n\n  get error(): IValidator {\n    return _.find(this.validators$, (v: IValidator) => v.hasError );\n  }\n\n  get value(): any {\n    if (this.convertTo) {\n      return this.convertTo(this.control.value);\n    } else {\n      return this.control.value;\n    }\n  }\n\n  set value(value: any) {\n    this.setValue(value);\n  }\n\n  get valueChanges(): Observable<any> {\n    return Observable.create( (observer: Observer<any>) => {\n      const sub = this.control.valueChanges\n        .subscribe(\n          () => {\n            if (!this.blocked) {\n              observer.next(this.value);\n            }\n          },\n          null,\n          () => {\n            sub.unsubscribe();\n          }\n        );\n    });\n  }\n\n  get required(): boolean {\n    return this.required$;\n  }\n\n  get touched(): boolean {\n    return this.control.touched;\n  }\n\n  get dirty(): boolean {\n    return this.control.dirty;\n  }\n\n  get blocked(): boolean {\n    return this.blocked$;\n  }\n\n}\n","import {FormGroup} from '@angular/forms';\nimport * as _ from 'underscore';\nimport {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\nimport {Util} from '../../impl/util/util';\nimport { Subject, Observable } from 'rxjs';\n\nexport abstract class AccessableFormGroup<TFields, TModel extends object>\n  implements IAccessableFormControl<AccessableFormGroup<TFields, TModel>, TModel> {\n\n  public control: FormGroup;\n  private fields$: TFields;\n  private changed$: Subject<any> = new Subject();\n\n  public initialize(\n    fields: TFields\n  ): void {\n    this.control = new FormGroup(\n      _.mapObject(fields, (field) => {\n        return field.control;\n      })\n    );\n    this.fields$ = fields;\n  }\n\n  public markAsUsed(): AccessableFormGroup<TFields, TModel> {\n    _.each(this.fields$, (field) => field.markAsUsed() );\n    return this;\n  }\n\n  public markAsUnused(): AccessableFormGroup<TFields, TModel> {\n    _.each(this.fields$, (field) => field.markAsUnused() );\n    return this;\n  }\n\n  public markAsDirty(): AccessableFormGroup<TFields, TModel> {\n    _.each(this.fields$, (field) => field.markAsDirty() );\n    return this;\n  }\n\n  public markAsTouched(): AccessableFormGroup<TFields, TModel> {\n    _.each(this.fields$, (field) => field.markAsTouched() );\n    return this;\n  }\n\n  public reset(model: TModel, propagateChanges: boolean = true): AccessableFormGroup<TFields, TModel> {\n    if (!Util.isDefined(model)) {\n      model = {} as TModel;\n    }\n    _.each(this.fields$, (field: IAccessableFormControl<any, any>, key: string) => field.reset(model[key]));\n\n    if (propagateChanges) {\n      this.changed$.next();\n    }\n    return this;\n  }\n\n  get fields(): TFields {\n    return this.fields$;\n  }\n\n\n  get value(): TModel {\n    const ret = {} as TModel;\n    _.each(this.fields$, (field: IAccessableFormControl<any, any>, key: string) => ret[key] = field.value);\n    return ret;\n  }\n\n  get dirty(): boolean {\n    return this.control.dirty;\n  }\n\n  get valid(): boolean {\n    return this.control.valid;\n  }\n\n  get touched(): boolean {\n    return this.control.touched;\n  }\n\n  disable(): AccessableFormGroup<TFields, TModel> {\n    this.control.disable();\n    return this;\n  }\n\n  enable(): AccessableFormGroup<TFields, TModel> {\n    this.control.enable();\n    return this;\n  }\n\n  get disabled(): boolean {\n    return this.control.disabled;\n  }\n\n  get enabled(): boolean {\n    return this.control.enabled;\n  }\n\n  get changed(): Observable<void> {\n    return this.changed$.asObservable();\n  }\n\n}\n","import { IAccessableFormControl } from '../../interface/validation/i-accessable-form-control';\nimport { FormArray } from '@angular/forms';\nimport { Type } from '@angular/core';\nimport * as _ from 'underscore';\nimport { Util } from '../../impl/util/util';\nimport { IValidator } from '../../interface/validation/i-validator';\nimport { ValidatorRequired } from '../../impl/validation/validator-required';\n\nexport abstract class AccessableFormArray<TModel>\n  implements IAccessableFormControl<AccessableFormArray<TModel>, TModel[]> {\n\n  private validators$: IValidator[] = [];\n  public control: FormArray;\n  public type: Type<IAccessableFormControl<any, any>>;\n  private required$: boolean = false;\n\n  private entries$: IAccessableFormControl<any, TModel>[];\n\n  public initialize(type: Type<IAccessableFormControl<any, any>>): void {\n    this.control = new FormArray([]);\n    this.type = type;\n    this.entries$ = [];\n  }\n\n  public push(entry: TModel): IAccessableFormControl<any, TModel> {\n    const item = this.generateFormEntry(entry);\n    this.control.push(item.control);\n    this.entries$.push(item);\n    return item;\n  }\n\n  public removeAt(index: number): void {\n    this.control.removeAt(index);\n    this.entries$ = _.reject(this.entries$, (e, round: number) => {\n      return round === index;\n    });\n    let markAsUsed = false;\n    for (const entry of this.entries$) {\n      markAsUsed = markAsUsed || entry.dirty;\n    }\n    markAsUsed ? this.markAsUsed() : this.markAsUnused();\n  }\n\n  public validateWith(validators: IValidator[]): AccessableFormArray<TModel> {\n    if (!Util.isDefined(validators)) {\n      validators = [];\n    }\n    if (_.isArray(validators)) {\n      this.validators$ = validators;\n    }\n    this.control.setValidators(_.map(validators, (v: IValidator) => v.validator()));\n    this.required$ = false;\n    _.each(this.validators$, (v: IValidator) => {\n      if (v instanceof ValidatorRequired) {\n        this.required$ = true;\n      }\n    });\n    this.control.updateValueAndValidity();\n    return this;\n  }\n\n  public clearValidators(): void {\n    this.validators$ = [];\n  }\n\n  public generateFormEntry(value: any): IAccessableFormControl<any, TModel> {\n    const validation = new this.type();\n    validation.reset(value);\n    return validation;\n  }\n\n  public get errors(): string[] {\n    return _.compact(_.map(this.validators$, (e: IValidator) => {\n      if (e.hasError) {\n        return e.error;\n      }\n      return null;\n    }));\n  }\n\n  public get error(): IValidator {\n    return _.find(this.validators$, (v) => {\n      return v.hasError;\n    });\n  }\n\n  public get validators(): IValidator[] {\n    return this.validators$;\n  }\n\n  get required(): boolean {\n    return this.required$;\n  }\n\n  get dirty(): boolean {\n    return this.control.dirty;\n  }\n\n  get touched(): boolean {\n    return this.control.touched;\n  }\n\n  get valid(): boolean {\n    return this.control.valid;\n  }\n\n  get value(): TModel[] {\n    const ret: TModel[] = [];\n    for (const entry of this.entries$) {\n      ret.push(entry.value);\n    }\n    return ret;\n  }\n\n  get entries(): IAccessableFormControl<any, TModel>[] {\n    return this.entries$;\n  }\n\n  public disable(): AccessableFormArray<TModel> {\n    this.control.disable();\n    return this;\n  }\n\n  public enable(): AccessableFormArray<TModel> {\n    this.control.enable();\n    for (const entry of this.entries$) {\n      entry.enable();\n    }\n    return this;\n  }\n\n  public markAsDirty(): AccessableFormArray<TModel> {\n    this.control.markAsDirty();\n    for (const entry of this.entries$) {\n      entry.markAsDirty();\n    }\n    return this;\n  }\n\n  public markAsTouched(): AccessableFormArray<TModel> {\n    this.control.markAsTouched();\n    for (const entry of this.entries$) {\n      entry.markAsTouched();\n    }\n    return this;\n  }\n\n  public markAsUnused(): AccessableFormArray<TModel> {\n    this.control.markAsUntouched();\n    this.control.markAsPristine();\n    for (const entry of this.entries$) {\n      entry.markAsUnused();\n    }\n    return this;\n  }\n\n  public markAsUsed(): AccessableFormArray<TModel> {\n    this.control.markAsTouched();\n    this.control.markAsDirty();\n    for (const entry of this.entries$) {\n      entry.markAsUsed();\n    }\n    return this;\n  }\n\n  public reset(models: TModel[]): AccessableFormArray<TModel> {\n    this.entries$ = [];\n    this.control.reset([]);\n    if (Util.isDefined(models) && _.isArray(models)) {\n      for (const model of models) {\n        this.push(model);\n      }\n    }\n\n    return this;\n  }\n\n}\n","import {EventEmitter} from '@angular/core';\nimport {Subject} from \"rxjs\";\n\n\nexport class ReadonlyRestServiceObserver<T> {\n\n  public readonly onItemFetched: Subject<T> = new Subject();\n  public readonly onItemsFetched: Subject<T[]> = new Subject();\n\n  private isFetchingItem$: boolean;\n  private isFetchingItems$: boolean;\n\n  constructor() {\n    this.isFetchingItem$ = false;\n    this.isFetchingItems$ = false;\n  }\n\n  public isActivate(): boolean {\n    return !this.isFetchingItem && !this.isFetchingItems;\n  }\n\n  set isFetchingItems(fetching: boolean) {\n    this.isFetchingItems$ = fetching;\n  }\n\n  get isFetchingItems(): boolean {\n    return this.isFetchingItems$;\n  }\n\n  set isFetchingItem(fetching: boolean) {\n    this.isFetchingItem$ = fetching;\n  }\n\n  get isFetchingItem(): boolean {\n    return this.isFetchingItem$;\n  }\n}\n","import {Observable} from 'rxjs';\nimport {finalize, tap} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {IReadonlyRestService} from \"../../interface/http/i-readonly-restservice\";\nimport {ReadonlyRestServiceObserver} from \"./readonly-rest-service-observer\";\nimport {Util} from \"../util/util\";\n\n\nexport class ReadonlyRestHandler<T> implements IReadonlyRestService<T> {\n\n  identifier: string;\n\n  constructor(\n    public readonly http: HttpClient,\n    public readonly url: string,\n    public readonly observer: ReadonlyRestServiceObserver<T>\n  ) {}\n\n  public all(searchParams?: object, httpOptions?: object): Observable<T[]> {\n    this.observer.isFetchingItems = true;\n    return this.http.get<T[]>(Util.armUrlWithSearchParams(this.url, searchParams), httpOptions)\n      .pipe(\n        tap( (result: T[]): void => {\n          this.observer.onItemsFetched.next(result);\n        }),\n        // catchError( _.bind(this.serviceErrorHandler.catchError, this.serviceErrorHandler) as (error: any) => Observable<any> ),\n        finalize( (): void => {\n          this.observer.isFetchingItems = false;\n        })\n      );\n  }\n\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<T> {\n    this.observer.isFetchingItem = true;\n    return this.http.get<T>(\n        Util.armUrlWithSearchParams(Util.createEntityUrl(this.url, id), getParams), httpOptions)\n      .pipe(\n        tap( (result: T): void => {\n          this.observer.onItemFetched.next(result);\n        }),\n        finalize( (): void => {\n          this.observer.isFetchingItem = false;\n        })\n      );\n  }\n\n\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {BaseObject} from '../ui/base-object';\nimport {IReadonlyRestService} from '../../interface/http/i-readonly-restservice';\nimport {ReadonlyRestServiceObserver} from '../../impl/http/readonly-rest-service-observer';\nimport {ReadonlyRestHandler} from '../../impl/http/readony-rest-handler';\nimport {Util} from \"../../impl/util/util\";\n\nexport abstract class AbstractReadonlyRestservice<T> extends BaseObject implements IReadonlyRestService<T> {\n\n  identifier: string;\n  public abstract url: string;\n  public readonly observer: ReadonlyRestServiceObserver<T>;\n  protected abstract http: HttpClient;\n\n  protected constructor(\n    restServiceObserver?: ReadonlyRestServiceObserver<T>\n  ) {\n    super();\n    this.observer = Util.isDefined(restServiceObserver) ? restServiceObserver :\n      new ReadonlyRestServiceObserver<T>();\n  }\n\n  public all(searchParams?: object, httpOptions?: object): Observable<T[]> {\n    return new ReadonlyRestHandler<T>(this.http, this.url, this.observer).all(searchParams, httpOptions);\n  }\n\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<T> {\n    return new ReadonlyRestHandler<T>(this.http, this.url, this.observer).show(id, getParams, httpOptions);\n  }\n\n}\n","import {ReadonlyRestServiceObserver} from './readonly-rest-service-observer';\nimport {Subject} from \"rxjs\";\n\n\nexport class RestServiceObserver<T> extends ReadonlyRestServiceObserver<T> {\n\n  public readonly onItemCreated: Subject<T> = new Subject();\n  public readonly onItemUpdated: Subject<T> = new Subject();\n  public readonly onItemDestroyed: Subject<T> = new Subject();\n  public readonly onItemPartialUpdated: Subject<T> = new Subject();\n  public readonly onItemSaved: Subject<T> = new Subject();\n\n  private isCreatingItem$: boolean;\n  private isUpdatingItem$: boolean;\n  private isDestoyingItem$: boolean;\n  private isPartiallyUpdatingItem$: boolean;\n  private isSavingItem$: boolean;\n\n  constructor() {\n    super();\n    this.isCreatingItem$ = false;\n    this.isUpdatingItem$ = false;\n    this.isDestoyingItem$ = false;\n    this.isPartiallyUpdatingItem$ = false;\n  }\n\n  public isActivate(): boolean {\n    return super.isActivate() &&\n      !this.isCreatingItem$ &&\n      !this.isUpdatingItem$ &&\n      !this.isDestoyingItem$ &&\n      !this.isPartiallyUpdatingItem$ &&\n      !this.isSavingItem$;\n  }\n\n  set isCreatingItem(isCreating: boolean) {\n    this.isCreatingItem$ = isCreating;\n  }\n\n  get isCreatingItem(): boolean {\n    return this.isCreatingItem$;\n  }\n\n  set isUpdatingItem(isUpdating: boolean) {\n    this.isUpdatingItem$ = isUpdating;\n  }\n\n  get isUpdatingItem(): boolean {\n    return this.isUpdatingItem$;\n  }\n\n  set isDestoyingItem(isDestroying: boolean) {\n    this.isDestoyingItem$ = isDestroying;\n  }\n\n  get isDestoyingItem(): boolean {\n    return this.isDestoyingItem$;\n  }\n\n  set isPartiallyUpdatingItem(isUpdating: boolean) {\n    this.isPartiallyUpdatingItem$ = isUpdating;\n  }\n\n  get isPartiallyUpdatingItem(): boolean {\n    return this.isPartiallyUpdatingItem$;\n  }\n\n  set isSavingItem(isSaving: boolean) {\n    this.isSavingItem$ = isSaving;\n  }\n\n  get isSavingItem(): boolean {\n    return this.isSavingItem$;\n  }\n\n\n}\n","import {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {AbstractReadonlyRestservice} from './abstract-readonly-restservice';\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\nimport {RestHandler} from \"../../impl/http/rest-handler\";\n\nexport abstract class AbstractRestservice<T> extends AbstractReadonlyRestservice<T> implements IWriteableRestService<T> {\n\n  public abstract identifier: string;\n  public readonly observer: RestServiceObserver<any>;\n  protected abstract http: HttpClient;\n\n  protected constructor() {\n    super(new RestServiceObserver<T>());\n  }\n\n  public create(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).create(model, getParams, httpOptions);\n  }\n\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).destroy(id, getParams, httpOptions);\n  }\n\n  public partialUpdate(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .partialUpdate(model, getParams, httpOptions);\n  }\n\n  public save(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).save(model, getParams, httpOptions);\n  }\n\n  public update(model: T, getParams?: object, httpOptions?: object): Observable<T> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).update(model, getParams, httpOptions);\n  }\n\n}\n","import {ValidatorFn} from '@angular/forms';\nimport {IValidator} from '../../interface/validation/i-validator';\n\n\nexport abstract class ValidatorCustom implements IValidator {\n  public abstract error: string;\n  public abstract hasError = false;\n  private value: any;\n\n  protected constructor() {\n  }\n\n  public validator(): ValidatorFn {\n    return null;\n  }\n\n  public validate(): any {\n    return null;\n  }\n\n}\n","/** Hier werden alle von der Applikation genutzten REGEX gespeichert. */\nexport const REGEX = {\n  /** Regex fÃ¼r eine Zahl. Jede Zahl sollte damit erkannt werden */\n  NUMBER: /^-?[0-9]+([,.][0-9]+)?$/,\n  /** Die Representation einer (Gleitkomma)Zahl, die der Anwender eingeben darf */\n  INPUT_NUMBER: /^[0-9]+(,[0-9]+)?$/,\n  INTEGER: /^[0-9]+$/,\n  SIGNED_INTEGER: /^-?[0-9]+$/,\n  /** Offizieller RFC 5322 Standart regex */\n  EMAIL: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  POSTAL_CODE: /^[0-9]{5}$/,\n  SPECIAL_CHARS_REGEX: /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n  DATE: /^(\\d{1,2})[-\\/](\\d{1,2})[-\\/](\\d{4})$/\n};\n","import {FormControl, ValidatorFn} from '@angular/forms';\nimport {IValidator} from '../../interface/validation/i-validator';\nimport {REGEX} from '../../enum/regex';\n\n\nexport class ValidatorEmail implements IValidator {\n\n  public hasError = false;\n  public error = 'Bitte geben Sie eine gÃ¼ltige E-Mail ein';\n  private value: any;\n\n  constructor(\n    error?: string\n  ) {\n    if (error) {\n      this.error = error;\n    }\n  }\n\n  public validator(): ValidatorFn {\n    return (input: FormControl) => {\n      this.value = input.value;\n      return this.validate();\n    };\n  }\n\n  public validate(): any {\n    if (!this.value) {\n      return null;\n    }\n    if (this.value && REGEX.EMAIL.test(this.value.toString())) {\n      this.hasError = false;\n      return null;\n    } else {\n      this.hasError = true;\n      return {invalidEmail: true};\n    }\n  }\n\n}\n","import {FormControl, ValidatorFn} from '@angular/forms';\nimport {IValidator} from '../../interface/validation/i-validator';\n\n\nexport class ValidatorFixedValue implements IValidator {\n\n  public hasError: boolean;\n  private value$: any;\n  constructor(\n    public comparator: any,\n    public error: string = null\n  ) {}\n\n  public validate(): any {\n    this.hasError = false;\n    if (this.comparator === this.value$) {\n      return null;\n    } else {\n      this.hasError = true;\n      return {validatorFixed: true};\n    }\n  }\n\n  public validator(): ValidatorFn {\n    return (input: FormControl) => {\n      this.value$ = input.value;\n      return this.validate();\n    };\n  }\n\n}\n","import {IValidator} from '../../interface/validation/i-validator';\nimport {FormControl, ValidatorFn} from '@angular/forms';\nimport {REGEX} from '../../enum/regex';\nimport {Util} from '../util/util';\n\n\nexport class ValidatorFloat implements IValidator {\n\n  public hasError = false;\n  public error = 'Bitte geben Sie eine valide Zahl ein';\n  private value: any;\n\n  constructor(\n    private digitsBefore?: number,\n    private digitsAfter?: number\n  ) {}\n\n  public validator(): ValidatorFn {\n    return (input: FormControl): object | null => {\n      this.value = input.value;\n      return this.validate();\n    };\n  }\n\n\n  public validate(): any {\n    this.hasError = false;\n    this.error = 'Bitte geben Sie eine valide Zahl ein';\n    let validAmountDisgitsBefore = false;\n    let validAmountDisgitsAfter = false;\n    if (!this.value) {\n      return null;\n    }\n    if (this.value && REGEX.INPUT_NUMBER.test(this.value.toString())) {\n      const numberSplitted = this.value.toString().split(',');\n      if (Util.isDefined(this.digitsBefore) && this.digitsAfter === 0 && numberSplitted.length === 2) {\n        this.hasError = true;\n        this.error = 'Es sind keine Nachkommastellen erlaubt';\n        return {invalidFloat: true};\n      }\n      if (numberSplitted.length !== 2) {\n        if (Util.isDefined(this.digitsBefore)) {\n          if (this.value.length > this.digitsBefore) {\n            this.error = `Bitte runden Sie die Zahl auf ${this.digitsBefore === 1 ? 'eine Stelle' : this.digitsBefore.toString() + ' Stellen'} vor dem Komma`;\n            this.hasError = true;\n            return {invalidFloat: true};\n          }\n        }\n        this.hasError = false;\n        return null;\n      }\n      if (Util.isDefined(this.digitsBefore) && this.digitsBefore > 0) {\n        validAmountDisgitsBefore = numberSplitted[0].length <= this.digitsBefore;\n        if (!validAmountDisgitsBefore) {\n          this.error = `Bitte runden Sie die Zahl auf ${this.digitsBefore === 1 ? 'eine Stelle' : this.digitsBefore.toString() + ' Stellen'} vor dem Komma`;\n        }\n      } else {\n        validAmountDisgitsBefore = true;\n      }\n      if (Util.isDefined(this.digitsAfter) && this.digitsAfter > 0) {\n        validAmountDisgitsAfter = numberSplitted[1].length <= this.digitsAfter;\n        if (!validAmountDisgitsAfter) {\n          this.error = `Bitte runden Sie die Zahl auf ${this.digitsAfter === 1 ? ' eine Stelle' : this.digitsAfter.toString() + ' Stellen'} nach dem Komma`;\n        }\n      } else {\n        validAmountDisgitsAfter = true;\n      }\n      this.hasError = !(validAmountDisgitsBefore && validAmountDisgitsAfter);\n      if (this.hasError) {\n        return {invalidFloat: true};\n      }\n      return null;\n    } else {\n      this.hasError = true;\n      return {invalidFloat: true};\n    }\n  }\n\n}\n","import {IValidator} from '../../interface/validation/i-validator';\nimport {REGEX} from '../../enum/regex';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n\nexport class ValidatorInteger implements IValidator {\n\n  public error = 'Bitte geben Sie eine ganze Zahl ein';\n  public hasError: boolean;\n\n  private value$: string;\n  private regex$: RegExp;\n\n\n  constructor(\n    private allowNegativeValues$: boolean = false\n  ) {\n    if (allowNegativeValues$) {\n      this.regex$ = REGEX.SIGNED_INTEGER;\n    } else {\n      this.regex$ = REGEX.INTEGER;\n    }\n  }\n\n  public validate(): any {\n    this.hasError = false;\n    if (!this.value$) {\n      return null;\n    }\n    if (!this.regex$.test(this.value$)) {\n      this.hasError = true;\n      return {invalidInteger: true};\n    }\n    return null;\n  }\n\n  public validator(): ValidatorFn {\n    return (input: FormControl) => {\n      this.value$ = input.value;\n      return this.validate();\n    };\n  }\n\n}\n","import {FormControl, ValidatorFn} from '@angular/forms';\nimport {IValidator} from '../../interface/validation/i-validator';\nimport {REGEX} from '../../enum/regex';\n\n\nexport class ValidatorPostalCode implements IValidator {\n\n  public hasError = false;\n  public error = 'Bitte geben Sie eine gÃ¼ltige Postleitzahl ein';\n  private value: any;\n\n  constructor(\n    error?: string\n  ) {\n    if (error) {\n      this.error = error;\n    }\n  }\n\n  public validator(): ValidatorFn {\n    return (input: FormControl) => {\n      this.value = input.value;\n      return this.validate();\n    };\n  }\n\n  public validate(): any {\n    this.hasError = false;\n    if (!this.value) {\n      return null;\n    }\n    if (this.value && REGEX.POSTAL_CODE.test(this.value.toString())) {\n      this.hasError = false;\n      return null;\n    } else {\n      this.hasError = true;\n      return {invalidPostalCode: true};\n    }\n  }\n}\n","import moment from 'moment';\nimport * as _ from 'underscore';\nimport {Util} from './util';\nimport {REGEX} from '../../enum/regex';\n\n\nexport abstract class TypeConverter {\n\n  /** Versucht den Wert in eine Zahl zu konvertieren. */\n  public static toNumber(value: string | number): number | string {\n    // Falls null oder undefined Ã¼bergeben wurde, brechen wir ab\n    if (!value) {\n      return value;\n    }\n    // Falls der Wert bereits eine Zahl ist, sind wir fertig\n    if (_.isNumber(value)) {\n      return value;\n    }\n    // Falls der Wert ein String ist, testen wir, ob er aussieht wie eine Zahl und versuchen ihn anschlieÃend zu konvertieren\n    if (_.isString(value) && REGEX.NUMBER.test(value as string)) {\n      return TypeConverter.convertInputStringToNumber(value as string);\n    }\n    // Wir haben keine Regel fÃ¼r die Konvertierung gefunden\n    return value;\n  }\n\n  /** Nimmt eine Zahl und gibt eine deutsche Representation dieses Wertes zurÃ¼ck */\n  public static asGermanFloat(value: number | string, stellen?: number): string | undefined {\n    if (value === null || value === undefined) {\n      return undefined;\n    }\n\n    if (!_.isUndefined(stellen) && _.isNumber(value)) {\n      value = (value as number).toFixed(stellen);\n    }\n    return value.toString().replace('.', ',');\n  }\n\n  /** Erzeugt ein moment object und setzt dieses auf UTC, falls dies noch nicht geschehen ist. */\n  /*public static utcDate(...args: any[]): moment.Moment {\n    const isDefined = _.every(args, (arg: any) => Util.isDefined(arg));\n    if (!isDefined) {\n      return undefined;\n    }\n    const mObject = moment(...args);\n    if (mObject.isUTC()) {\n      return mObject;\n    } else {\n      return mObject.utc(true);\n    }\n  }*/\n  /** Konvertiert ein moment Object in die lokale Zeitzone (Entfernt UTC) */\n  /*public static toLocalDate(mObject: moment.Moment): moment.Moment {\n    if (!Util.isDefined(mObject)) {\n      return undefined;\n    }\n    const param = moment(mObject);\n    if (param.isUTC()) {\n      return param.local(true);\n    } else {\n      return param;\n    }\n  }*/\n\n  public static booleanNumberToSting(n: number): string {\n    return n === 1 ? 'Ja' : 'Nein';\n  }\n\n  /** Konvertiert ein Moment Object zu einem Date Object */\n  /*public static toJSDate(mObject: moment.Moment): Date {\n    const mDate = TypeConverter.utcDate(mObject);\n    if (!mDate) {\n      return undefined;\n    }\n    return mDate.toDate();\n  }*/\n\n  /** Kovertiert einen String in einen Regex um eine Volltextsuche zu ermÃ¶glichen */\n  public static asRegex(text: string): RegExp {\n    let builderString = '';\n    if (_.isEmpty(text)) {\n      return new RegExp(builderString);\n    }\n    _.each(text.split(''), (char) => {\n      builderString = builderString + `${char}`;\n    });\n    return new RegExp(builderString.replace(REGEX.SPECIAL_CHARS_REGEX, '\\\\$&'), 'i');\n  }\n\n  public static booleanToNumber(bool: boolean): number {\n    return bool === true ? 1 : 0;\n  }\n\n  public static numberToBoolean(digit: number): boolean {\n    return digit === 1;\n  }\n\n  /** Kovertiert einen String, der dem Regex einer Zahl entspricht, in eine Zahl */\n  private static convertInputStringToNumber(value: string): number {\n    if (value.includes('.')) {\n      return Number.parseFloat(value);\n    }\n    if (value.includes(',')) {\n      return Number.parseFloat(value.replace(',', '.'));\n    }\n    return Number.parseInt(value);\n  }\n\n}\n","import {IValidator} from '../../interface/validation/i-validator';\nimport {AccessableFormControl} from '../../abstract/validation/accessable-form-control';\nimport {TypeConverter} from '../util/type-converter';\nimport {Util} from '../util/util';\n\nexport abstract class AccessableControlFactory {\n\n  public static simpleControl(\n    formState: any = null,\n    validators: IValidator[]\n  ): AccessableFormControl {\n    const control = new AccessableFormControl();\n    control.initialize(formState, validators);\n    return control;\n  }\n\n  public static numberControl(\n    formState: any = null,\n    validators: IValidator[]\n  ): AccessableFormControl {\n    const control = AccessableControlFactory.simpleControl(formState, validators);\n    control.showAs = TypeConverter.asGermanFloat;\n    control.convertTo = TypeConverter.toNumber;\n    control.setValue(formState);\n    return control;\n  }\n\n  public static numberBooleanControl(\n    formState: any = null,\n    validators: IValidator[]\n  ): AccessableFormControl {\n    const control = AccessableControlFactory.simpleControl(formState, validators);\n    control.showAs = TypeConverter.numberToBoolean;\n    control.convertTo = TypeConverter.booleanToNumber;\n    control.setValue(formState);\n    return control;\n  }\n\n  public static dateControl(\n    formState: any = null,\n    validators: IValidator[]\n  ): AccessableFormControl {\n    const control = AccessableControlFactory.simpleControl(formState, validators);\n    return control;\n  }\n\n  /** Schneides alle Whitespaces am Ende und Anfang weg */\n  public static trimControl(\n    formState: any = null,\n    validators: IValidator[]\n  ): AccessableFormControl {\n    const control = AccessableControlFactory.simpleControl(formState, validators);\n    control.showAs = (str: string): string | undefined | null => {\n      if (Util.isDefined(str)) {\n        return str.trim();\n      }\n      return str;\n    };\n    control.convertTo = (str: string): string | undefined | null => {\n      if (Util.isDefined(str)) {\n        return str.trim();\n      }\n      return str;\n    };\n    return control;\n  }\n}\n","\nexport enum HttpStatusCodes {\n  OK = 200,\n  BAD_REQUEST = 400,\n  PRECONDITION_FAILED = 412,\n  CONFLICT = 409,\n  FORBIDDEN = 403,\n  NOT_FOUND = 404,\n  LOCKED = 423,\n  NOT_ACCEPTABLE = 406\n}\n","import {BaseObject} from './base-object';\nimport {ChangeDetectorRef} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {SubscriptionHandler} from '../../impl/util/subscription-handler';\n\n\nexport abstract class BasePushStrategyObject extends BaseObject {\n\n  protected abstract cdr: ChangeDetectorRef;\n\n  protected markForCheckIf(subject: Observable<any>): Subscription {\n    return this.watch(subject, new SubscriptionHandler(this.cdr.markForCheck.bind(this.cdr)));\n  }\n\n}\n","import { Subject } from 'rxjs';\nimport {Util} from \"./util\";\n\n/**\n * Diese Klasse kann verwendet werden um Werte zu speichern und die automatisch\n * Ã¼berwachbar zu machen. Dadurch kÃ¶nnen UI Push Strategien leichter implementiert werden.\n */\nexport class ObservableValue<TValueType> {\n\n  private value$: TValueType;\n  public readonly changed: Subject<TValueType> = new Subject<TValueType>();\n\n  public constructor(\n    initialValue?: TValueType,\n    private readonly equals?: (current: TValueType, next: TValueType) => boolean\n  ) {\n    this.value$ = initialValue;\n    this.equals = Util.isDefined(this.equals) ? this.equals : this.defaultComparator;\n  }\n\n\n  public set value(value: TValueType) {\n    if (!this.equals(this.value$, value)) {\n      this.value$ = value;\n      this.changed.next(value);\n    }\n  }\n\n  public get value(): TValueType {\n    return this.value$;\n  }\n\n\n  private defaultComparator(current: TValueType, next: TValueType): boolean {\n    return current === next;\n  }\n\n}\n","import {BaseObject} from \"../ui/base-object\";\nimport {IReadonlyStoreRestService} from \"../../interface/http/i-readonly-stored-rest-service\";\nimport {ItemStore} from \"../../impl/util/item-store\";\nimport {ReadonlyRestServiceObserver} from \"../../impl/http/readonly-rest-service-observer\";\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {ReadonlyRestHandler} from \"../../impl/http/readony-rest-handler\";\nimport { tap } from 'rxjs/operators';\nimport {Util} from \"../../impl/util/util\";\n\nexport abstract class AbstractStoredReadonlyRestservice<TModel> extends BaseObject\n  implements IReadonlyStoreRestService<TModel> {\n\n  public abstract url: string;\n  public abstract store: ItemStore<TModel>;\n  public abstract identifier: string;\n  protected abstract http: HttpClient;\n\n  public readonly observer: ReadonlyRestServiceObserver<TModel>;\n\n  protected constructor(\n    restServiceObserver?: ReadonlyRestServiceObserver<TModel>\n  ) {\n    super();\n    this.observer = Util.isDefined(restServiceObserver) ? restServiceObserver :\n      new ReadonlyRestServiceObserver<TModel>();\n  }\n\n  public all(searchParams?: object, httpOptions?: object): Observable<TModel[]> {\n    return new ReadonlyRestHandler<TModel>(this.http, this.url, this.observer).all(searchParams, httpOptions)\n      .pipe(\n        tap( (response: TModel[]) => {\n          this.store.updateItems(response);\n        })\n      );\n  }\n\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<TModel> {\n    return new ReadonlyRestHandler<TModel>(this.http, this.url, this.observer).show(id, getParams, httpOptions)\n      .pipe(\n        tap( (response: TModel) => {\n          this.store.update(response);\n        })\n      );\n  }\n\n\n}\n","import {AbstractStoredReadonlyRestservice} from \"./abstract-stored-readonly-restservice\";\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\nimport {RestHandler} from \"../../impl/http/rest-handler\";\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport {Util} from \"../../impl/util/util\";\n\nexport abstract class AbstractStoredRestservice<TModel>\n  extends AbstractStoredReadonlyRestservice<TModel>\n  implements IWriteableRestService<TModel> {\n\n  public readonly observer: RestServiceObserver<TModel>;\n\n  protected constructor() {\n    super(new RestServiceObserver<TModel>());\n  }\n\n  public create(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .create(model, getParams, httpOptions)\n    return this.modifyCreateCall(request);\n  }\n\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .destroy(id, getParams, httpOptions)\n      .pipe(\n        tap( () => {\n          this.store.removeByIdentifier(id);\n        })\n      );\n  }\n\n  public partialUpdate(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .partialUpdate(model, getParams, httpOptions)\n      .pipe(\n        tap( (result: TModel) => {\n          this.store.update(result);\n        })\n      );\n  }\n\n  public save(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .save(model, getParams, httpOptions);\n    if (Util.isDefined(model[this.identifier])) {\n      request = this.modifyUpdateCall(request);\n    } else {\n      request = this.modifyCreateCall(request);\n    }\n    return request;\n  }\n\n  public set(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .set(model, getParams, httpOptions);\n    if (Util.isDefined(model[this.identifier])) {\n      request = this.modifyUpdateCall(request);\n    } else {\n      request = this.modifyCreateCall(request);\n    }\n    return request;\n  }\n\n  public update(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .update(model, getParams, httpOptions);\n    request = this.modifyUpdateCall(request);\n    return request;\n  }\n\n  protected modifyCreateCall(observable: Observable<TModel>): Observable<TModel> {\n    return observable.pipe(\n      tap( (result: TModel) => {\n        this.store.push(result);\n      })\n    );\n  }\n\n  protected modifyUpdateCall(observable: Observable<TModel>): Observable<TModel> {\n    return observable.pipe(\n      tap( (result: TModel) => {\n        this.store.update(result);\n      })\n    );\n  }\n\n}\n","import {IDeactivate} from \"../../interface/util/i-deactivate\";\nimport { Observable, Subscriber } from 'rxjs';\nimport {SubscriptionManager} from \"./subscription-manager\";\nimport {SubscriptionHandler} from \"./subscription-handler\";\n\nexport class DeactivationHandler implements IDeactivate {\n\n  private deactivators$: { [name: string]: IDeactivate } = {};\n\n\n  public register(name: string, component: IDeactivate): void {\n    this.deactivators$[name] = component;\n  }\n\n  public remove(name: string): void {\n    delete this.deactivators$[name];\n  }\n\n  public canDeactivate(): Observable<boolean> {\n    return new Observable<boolean>(subscriber => {\n      this._deactivateComponent(0, subscriber);\n    });\n  }\n\n  private _deactivateComponent(index: number, observer: Subscriber<boolean>): void {\n    const component = Object.values(this.deactivators$)[index];\n    if (!component) {\n      observer.next(true);\n      observer.complete();\n    } else {\n      SubscriptionManager.subscribe(component.canDeactivate(), new SubscriptionHandler( (canDeactivate: boolean) => {\n        if (!canDeactivate) {\n          observer.next(false);\n          observer.complete();\n        } else {\n          this._deactivateComponent(index + 1, observer);\n        }\n      }));\n    }\n  }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, Subscriber, forkJoin } from 'rxjs';\nimport * as _ from 'underscore';\nimport {Util} from \"../../impl/util/util\";\nimport {SubscriptionManager} from \"../../impl/util/subscription-manager\";\nimport {SubscriptionHandler} from \"../../impl/util/subscription-handler\";\n\nexport abstract class AbstractActivationQueuedGuard implements CanActivate {\n\n  private readonly queue: CanActivate[][] = [];\n\n  private route: ActivatedRouteSnapshot;\n  private state: RouterStateSnapshot;\n\n  public canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    this.route = route;\n    this.state = state;\n    return new Observable((subscriber) => {\n      this.runQueueRecursive(0, subscriber);\n    });\n  }\n\n  protected sequence(step: CanActivate[] | CanActivate): AbstractActivationQueuedGuard {\n    if (_.isArray(step)) {\n      this.queue.push(step as CanActivate[]);\n    } else {\n      this.queue.push([step as CanActivate]);\n    }\n    return this;\n  }\n\n  private runQueueRecursive(level: number, subscriber: Subscriber<boolean | UrlTree>): void {\n    const currentQueueItems: CanActivate[] = this.queue[level];\n    if (!Util.isDefined(currentQueueItems)) {\n      subscriber.next(true);\n      subscriber.complete();\n      return;\n    }\n    const activators: CanActivate[] = _.map(currentQueueItems, (queueItem: CanActivate) => {\n      return queueItem.canActivate(this.route, this.state);\n    });\n    SubscriptionManager.subscribe(forkJoin(activators), new SubscriptionHandler(\n      (canActivateStates: boolean[]) => {\n        if (!_.all(canActivateStates)) {\n          subscriber.next(false);\n          subscriber.complete();\n        } else {\n          this.runQueueRecursive(level + 1, subscriber);\n        }\n      },\n      () => {\n        subscriber.next(false);\n        subscriber.complete();\n      }\n    ));\n  }\n\n}\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport {AbstractRouteConfiguration} from \"./abstract-route-configuration\";\nimport {IRoutingData} from \"../../interface/routing/i-routing-configuration\";\n\n\nexport abstract class AbstractActivationGuard<TSuccessType, TRouteParams> implements CanActivate {\n\n  protected abstract onSuccess(result: TSuccessType): Observable<boolean>;\n  protected abstract onError(error: any): Observable<boolean>;\n  protected abstract onActivate(): Observable<TSuccessType>;\n\n  protected route: ActivatedRouteSnapshot;\n  protected state: RouterStateSnapshot;\n\n  public canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    this.route = route;\n    this.state = state;\n    return this.onActivate()\n      .pipe(\n        switchMap((result: TSuccessType): Observable<boolean> => {\n          return this.onSuccess(result);\n        }),\n        catchError((error): Observable<boolean> => {\n          return this.onError(error);\n        })\n      );\n  }\n\n  protected get routeConfiguration(): AbstractRouteConfiguration<TRouteParams> {\n    return (this.route.data as IRoutingData<TRouteParams>).routeConfiguration;\n  }\n\n}\n","import {Util} from \"../../impl/util/util\";\nimport * as _ from 'underscore';\n\nexport abstract class AbstractRouteConfiguration<TParams> {\n\n  protected constructor(\n    protected pathSegments: string[],\n    protected paramNames?: TParams,\n    protected parent?: AbstractRouteConfiguration<any>\n  ) {}\n\n  public get path(): string {\n    if (Util.isDefined(this.parent)) {\n      return `${this.parent.path}/${this.pathSegments.join('/')}`;\n    } else {\n      return this.pathSegments.join('/');\n    }\n  }\n\n  public get paramDefinition(): TParams {\n    return _.extend(\n      Util.isDefined(this.parent) ? this.parent.paramDefinition : {},\n      this.paramNames || {}\n    );\n  }\n\n  public buildNavigation(params?: TParams): any[] {\n    let navigationParams = Util.isDefined(this.parent) ?\n      this.parent.buildNavigation(params) : [];\n    if (!Util.isDefined(params)) {\n      return navigationParams.concat(this.pathSegments);\n    }\n    navigationParams = navigationParams.concat(_.map(this.pathSegments, (segment: string) => {\n      const segmentInParams = params[segment.replace(':', '')];\n      if (Util.isDefined(segmentInParams)) {\n        return segmentInParams;\n      }\n      return segment;\n    }));\n    return navigationParams;\n  }\n\n  public validate(): boolean {\n    for(const pathSnippet in this.pathSegments) {\n      if (!Util.isDefined(pathSnippet)) {\n        console.error('Creating a route without a path snippet is not allowed');\n        return false;\n      }\n      if (pathSnippet.startsWith('/')) {\n        console.error('Creating a route with a path snippet starting with a / is not allowed');\n        return false;\n      }\n      if (pathSnippet.endsWith('/')) {\n        console.error('Creating a route with a path snippet ending with a / is not allowed');\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AbstractRouteConfiguration} from \"./abstract-route-configuration\";\nimport {IRoutingData} from \"../../interface/routing/i-routing-configuration\";\n\nexport abstract class AbstractResolver<TData, TRouteParams> implements Resolve<TData> {\n\n  protected route: ActivatedRouteSnapshot;\n  protected state: RouterStateSnapshot;\n\n  protected abstract onResolve(): Observable<TData>;\n\n  public resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<TData> | Promise<TData> | TData {\n    this.route = route;\n    this.state = state;\n    return this.onResolve();\n  }\n\n  protected get routeConfiguration(): AbstractRouteConfiguration<TRouteParams> {\n    return (this.route.data as IRoutingData<TRouteParams>).routeConfiguration;\n  }\n\n}\n","import {IDeactivate} from \"../../interface/util/i-deactivate\";\nimport { Observable } from 'rxjs';\nimport { OnDestroy } from '@angular/core';\nimport {IEntitySelector} from \"../../interface/ui/i-entity-selector\";\nimport {SubscriptionHandler} from \"../../impl/util/subscription-handler\";\nimport * as _ from 'underscore';\nimport {AbstractEntityResolver} from \"../util/abstract-entity-resolver\";\nimport { ActivatedRoute } from '@angular/router';\nimport {BasePushStrategyObject} from \"./base-push-strategy-object\";\n\nexport abstract class BaseRootComponent extends BasePushStrategyObject implements IDeactivate, OnDestroy {\n\n  public abstract canDeactivate(): Observable<boolean>;\n  protected abstract activatedRoute: ActivatedRoute;\n  protected observables: IEntitySelector<any>[] = [];\n\n  public listenTo(observable: IEntitySelector<any>, resolver: AbstractEntityResolver<any, any>): void {\n    this.observables.push(observable);\n    observable.isVisible.value = true;\n    this.watch(observable.nextRequested, new SubscriptionHandler((dataSet: any) => {\n      this.onNextRequested(observable, dataSet, resolver);\n    }));\n  }\n\n  public ngOnDestroy(): void {\n    super.ngOnDestroy();\n    _.each(this.observables, (observable: IEntitySelector<any>) => observable.isVisible.value = false);\n  }\n\n  protected onNextRequested(\n    observable: IEntitySelector<any>,\n    dataSet: any,\n    resolver: AbstractEntityResolver<any, any>\n  ): void {\n    this.subscribe(this.canDeactivate(), new SubscriptionHandler((canDeactivate: boolean) => {\n      if (canDeactivate) {\n        // Maybe catch error\n        resolver.resolve(this.activatedRoute, dataSet, observable);\n      }\n    }));\n  }\n\n}\n","import {AbstractStoredReadonlyRestservice} from \"./abstract-stored-readonly-restservice\";\nimport { Observable, of } from 'rxjs';\nimport * as _ from 'underscore';\nimport {TimestampItemStore} from \"../../impl/util/timestamp-item-store\";\n\nexport abstract class AbstractReadonlyCachedRestservice<TModel>\n  extends AbstractStoredReadonlyRestservice<TModel> {\n\n  public abstract store: TimestampItemStore<TModel>;\n\n  public all(searchParams?: object, httpOptions?: object): Observable<TModel[]> {\n    if (this.store.isStoreValid()) {\n      return of(this.store.items);\n    } else {\n      return super.all(searchParams, httpOptions);\n    }\n  }\n\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<TModel> {\n    if (this.store.isItemValid(id)) {\n      const lookup = {} as TModel;\n      lookup[this.identifier] = id;\n      return of(_.find(this.store.items, lookup));\n    }\n    return super.show(id, getParams, httpOptions);\n  }\n\n\n}\n","import {AbstractReadonlyCachedRestservice} from \"./abstract-readonly-cached-restservice\";\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\nimport {RestHandler} from \"../../impl/http/rest-handler\";\nimport {Util} from \"../../impl/util/util\";\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n\nexport abstract class AbstractCachedRestservice<TModel>\n  extends AbstractReadonlyCachedRestservice<TModel>\n  implements IWriteableRestService<TModel>{\n\n  public readonly observer: RestServiceObserver<TModel> = new RestServiceObserver();\n\n\n  public create(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .create(model, getParams, httpOptions);\n    return this.modifyCreateCall(request);\n  }\n\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .destroy(id, getParams, httpOptions)\n      .pipe(\n        tap( () => {\n          this.store.removeByIdentifier(id);\n        })\n      );\n  }\n\n  public partialUpdate(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .partialUpdate(model, getParams, httpOptions)\n      .pipe(\n        tap( (result: TModel) => {\n          this.store.update(result);\n        })\n      );\n  }\n\n  public save(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .save(model, getParams, httpOptions);\n    if (Util.isDefined(model[this.identifier])) {\n      request = this.modifyUpdateCall(request);\n    } else {\n      request = this.modifyCreateCall(request);\n    }\n    return request;\n  }\n\n  public set(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .set(model, getParams, httpOptions);\n    if (Util.isDefined(model[this.identifier])) {\n      request = this.modifyUpdateCall(request);\n    } else {\n      request = this.modifyCreateCall(request);\n    }\n    return request;\n  }\n\n  public update(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\n      .update(model, getParams, httpOptions);\n    request = this.modifyUpdateCall(request);\n    return request;\n  }\n\n  protected modifyCreateCall(observable: Observable<TModel>): Observable<TModel> {\n    return observable.pipe(\n      tap( (result: TModel) => {\n        this.store.push(result);\n      })\n    );\n  }\n\n  protected modifyUpdateCall(observable: Observable<TModel>): Observable<TModel> {\n    return observable.pipe(\n      tap( (result: TModel) => {\n        this.store.update(result);\n      })\n    );\n  }\n\n\n}\n","import {AbstractRouteConfiguration} from \"../routing/abstract-route-configuration\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as _ from 'underscore';\nimport {IEntitySelector} from \"../../interface/ui/i-entity-selector\";\n\nexport interface IEntityResolverConfiguration {\n  keepQueryParams: boolean;\n}\n\nexport abstract class AbstractEntityResolver<TRouteParams, TModel> {\n\n  public abstract resolve(\n    activatedRoute: ActivatedRoute,\n    model: TModel,\n    entitySelector: IEntitySelector<TModel>\n  ): Promise<boolean>;\n\n  protected constructor(\n    protected readonly router: Router,\n    protected readonly routeConfiguration: AbstractRouteConfiguration<TRouteParams>,\n    protected readonly configuration?: IEntityResolverConfiguration,\n  ) {\n    this.configuration = configuration || AbstractEntityResolver.generateDefaultConfiguration();\n  }\n\n  protected runResolver(activatedRoute: ActivatedRoute, params: object): Promise<boolean> {\n    const currentRouteParams = _.extend(_.clone(activatedRoute.snapshot.params), params);\n    if (this.configuration.keepQueryParams) {\n      return this.router.navigate(\n        this.routeConfiguration.buildNavigation(currentRouteParams),\n        {queryParams: activatedRoute.snapshot.queryParams}\n      );\n    } else {\n      return this.router.navigate(this.routeConfiguration.buildNavigation(currentRouteParams))\n    }\n  }\n\n  private static generateDefaultConfiguration(): IEntityResolverConfiguration {\n    return {\n      keepQueryParams: false\n    };\n  }\n\n}\n","import {ItemStore} from \"./item-store\";\nimport {Util} from \"./util\";\nimport * as _ from 'underscore';\n\nexport class TimestampItemStore<TModel> extends ItemStore<TModel> {\n\n  public static readonly ITEM_TIMESTAMP_KEY = '__timestamp__';\n\n  private wasFilled: boolean;\n\n  constructor(\n    identifier: any,\n    private itemLifetimeInSeconds: number,\n    transform?: (items: TModel[]) => TModel[]\n  ) {\n    super(identifier, transform);\n    this.wasFilled = false;\n  }\n\n  public updateItems(items: TModel[]): void {\n    super.updateItems(items);\n    _.each(this.items, (item) => this.trackItem(item));\n    this.wasFilled = true;\n  }\n\n  public clear(): void {\n    super.clear();\n    this.wasFilled = false;\n  }\n\n  public update(item: TModel): void {\n    super.update(item);\n    this.trackItem(item);\n  }\n\n  public push(item: TModel): void {\n    super.push(item);\n    this.trackItem(item);\n  }\n\n  public isItemValid(identifier: any): boolean {\n    let itemInStore = null;\n    for(const item of this.items) {\n      if (item[this.identifier] === identifier) {\n        itemInStore = item;\n        break;\n      }\n    }\n    if (!Util.isDefined(itemInStore)) {\n      return false;\n    }\n    const currentTimeStamp = Util.getCurrentUnixTimestamp();\n    return (currentTimeStamp - this.itemLifetimeInSeconds) < itemInStore[TimestampItemStore.ITEM_TIMESTAMP_KEY];\n  }\n\n  public isStoreValid(): boolean {\n    if (!this.wasFilled) {\n      return false;\n    }\n    if (_.isEmpty(this.items)) {\n      return false;\n    }\n    return _.all(this.items, (item) => this.isItemValid(item[this.identifier]));\n  }\n\n  private trackItem(item: TModel): void {\n    item[TimestampItemStore.ITEM_TIMESTAMP_KEY] = Util.getCurrentUnixTimestamp();\n  }\n\n}\n"]}