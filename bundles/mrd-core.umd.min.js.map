{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://mrd-core/lib/impl/util/subscription-manager.ts","ng://mrd-core/lib/impl/util/util.ts","ng://mrd-core/lib/impl/util/item-store.ts","ng://mrd-core/lib/impl/http/rest-handler.ts","ng://mrd-core/lib/impl/util/subscription-handler.ts","ng://mrd-core/lib/abstract/ui/base-object.ts","ng://mrd-core/lib/impl/validation/validator-required.ts","ng://mrd-core/lib/abstract/validation/accessable-form-control.ts","ng://mrd-core/lib/abstract/validation/accessable-form-group.ts","ng://mrd-core/lib/abstract/validation/accessable-form-array.ts","ng://mrd-core/lib/impl/http/readonly-rest-service-observer.ts","ng://mrd-core/lib/impl/http/readony-rest-handler.ts","ng://mrd-core/lib/abstract/http/abstract-readonly-restservice.ts","ng://mrd-core/lib/impl/http/rest-service-observer.ts","ng://mrd-core/lib/abstract/http/abstract-rest-service.ts","ng://mrd-core/lib/impl/validation/validator-custom.ts","ng://mrd-core/lib/enum/regex.ts","ng://mrd-core/lib/impl/validation/validator-email.ts","ng://mrd-core/lib/impl/validation/validator-fixed-value.ts","ng://mrd-core/lib/impl/validation/validator-float.ts","ng://mrd-core/lib/impl/validation/validator-integer.ts","ng://mrd-core/lib/impl/validation/validator-postal-code.ts","ng://mrd-core/lib/impl/util/type-converter.ts","ng://mrd-core/lib/impl/validation/accessable-control-factory.ts","ng://mrd-core/lib/enum/http-status-codes.ts","ng://mrd-core/lib/abstract/ui/base-push-strategy-object.ts","ng://mrd-core/lib/impl/util/observable-value.ts","ng://mrd-core/lib/abstract/http/abstract-stored-readonly-restservice.ts","ng://mrd-core/lib/abstract/http/abstract-stored-restservice.ts","ng://mrd-core/lib/impl/util/deactivation-handler.ts","ng://mrd-core/lib/abstract/routing/abstract-activation-queued-guard.ts","ng://mrd-core/lib/abstract/routing/abstract-activation-guard.ts","ng://mrd-core/lib/abstract/routing/abstract-route-configuration.ts","ng://mrd-core/lib/abstract/routing/abstract-resolver.ts","ng://mrd-core/lib/abstract/ui/base-root-component.ts","ng://mrd-core/lib/abstract/http/abstract-readonly-cached-restservice.ts","ng://mrd-core/lib/abstract/http/abstract-cached-restservice.ts","ng://mrd-core/lib/abstract/util/abstract-entity-resolver.ts","ng://mrd-core/lib/impl/util/timestamp-item-store.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","SubscriptionManager","subscribeAs","name","observable","handler","_this","sub","pipe","take","finalize","args","_i","_.isFunction","onFinished","apply","deleteSubscription","subscribe","onSuccess","onError","pushSubscription","subscription","subscriptions","unsubscribe","Util","isDefined","obj","armUrlWithSearchParams","url","queryParams","_.isEmpty","_.each","key","querySelector","indexOf","createEntityUrl","id","getBrowser","tem","ua","navigator","userAgent","M","match","test","exec","slice","join","replace","appName","appVersion","splice","getCurrentUnixTimestamp","Math","round","Date","getTime","guid","s4","floor","random","toString","substring","transformUmlaute","sortAlpabetically","list","attribute","_.sortBy","item","toUpperCase","ItemStore","identifier","transform","onChanged","Subject","items$","transformedItems$","updateItems","items","clear","items_1","tslib_1.__values","items_1_1","internalTransform$","remove","removeByIdentifier","update","values","defineProperty","RestHandler","http","observer","model","getParams","httpOptions","isCreatingItem","post","tap","result","onItemCreated","destroy","isDestoyingItem","delete","onItemDestroyed","partialUpdate","isPartiallyUpdatingItem","patch","onItemPartialUpdated","save","isSavingItem","onItemSaved","set","isUpdatingItem","put","onItemUpdated","SubscriptionHandler","BaseObject","$unsubscribe","watch","takeUntil","ngOnDestroy","complete","ValidatorRequired","hasError","validator","input","validate","_.isDate","moment.isMoment","_.isNumber","_.isString","required","_.isBoolean","AccessableFormControl","initialize","formState","validators","control","FormControl","validateWith","setValue","validators$","setValidators","_.map","v","required$","updateValueAndValidity","showAs","reset","markAsUsed","markAsDirty","markAsTouched","markAsUnused","markAsPristine","markAsUntouched","disable","enable","disabled","_.find","convertTo","touched","dirty","AccessableFormGroup","fields","FormGroup","_.mapObject","field","fields$","ret","valid","AccessableFormArray","type","FormArray","entries$","entry","generateFormEntry","removeAt","index","_.reject","_b","_c","validation","models","models_1","models_1_1","ReadonlyRestServiceObserver","onItemFetched","onItemsFetched","isFetchingItem$","isFetchingItems$","isActivate","isFetchingItem","isFetchingItems","fetching","ReadonlyRestHandler","all","searchParams","get","show","AbstractReadonlyRestservice","restServiceObserver","_super","tslib_1.__extends","RestServiceObserver","isCreatingItem$","isUpdatingItem$","isDestoyingItem$","isPartiallyUpdatingItem$","isSavingItem$","isCreating","isUpdating","isDestroying","isSaving","AbstractRestservice","ValidatorCustom","REGEX","NUMBER","INPUT_NUMBER","INTEGER","SIGNED_INTEGER","EMAIL","POSTAL_CODE","SPECIAL_CHARS_REGEX","DATE","ValidatorEmail","invalidEmail","ValidatorFixedValue","comparator","value$","validatorFixed","ValidatorFloat","digitsBefore","digitsAfter","validAmountDisgitsBefore","validAmountDisgitsAfter","numberSplitted","split","invalidFloat","ValidatorInteger","allowNegativeValues$","regex$","invalidInteger","ValidatorPostalCode","invalidPostalCode","TypeConverter","toNumber","convertInputStringToNumber","asGermanFloat","stellen","_.isUndefined","toFixed","booleanNumberToSting","asRegex","text","builderString","RegExp","char","booleanToNumber","bool","numberToBoolean","digit","includes","Number","parseFloat","parseInt","AccessableControlFactory","simpleControl","numberControl","numberBooleanControl","dateControl","trimControl","str","trim","HttpStatusCodes","OK","BAD_REQUEST","PRECONDITION_FAILED","CONFLICT","FORBIDDEN","NOT_FOUND","LOCKED","NOT_ACCEPTABLE","BasePushStrategyObject","markForCheckIf","subject","cdr","markForCheck","bind","ObservableValue","initialValue","equals","changed","defaultComparator","current","AbstractStoredReadonlyRestservice","response","store","AbstractStoredRestservice","request","modifyCreateCall","modifyUpdateCall","DeactivationHandler","deactivators$","register","component","canDeactivate","Observable","subscriber","_deactivateComponent","AbstractActivationQueuedGuard","queue","canActivate","route","state","runQueueRecursive","sequence","step","_.isArray","level","currentQueueItems","activators","queueItem","forkJoin","canActivateStates","_.all","AbstractActivationGuard","onActivate","switchMap","catchError","routeConfiguration","AbstractRouteConfiguration","pathSegments","paramNames","parent","path","_.extend","paramDefinition","buildNavigation","params","navigationParams","segment","segmentInParams","pathSnippet","console","startsWith","endsWith","AbstractResolver","resolve","onResolve","BaseRootComponent","observables","listenTo","resolver","isVisible","nextRequested","dataSet","onNextRequested","activatedRoute","AbstractReadonlyCachedRestservice","isStoreValid","of","isItemValid","lookup","AbstractCachedRestservice","AbstractEntityResolver","router","configuration","generateDefaultConfiguration","runResolver","currentRouteParams","_.clone","snapshot","keepQueryParams","navigate","TimestampItemStore","itemLifetimeInSeconds","wasFilled","trackItem","itemInStore","ITEM_TIMESTAMP_KEY"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {finalize, take} from 'rxjs/operators';\r\nimport {Observable, Subscription} from \"rxjs\";\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\nimport * as _ from 'underscore';\r\n\r\n/** Diese Klasse kÃ¼mmert sich um die Speicherverwaltung von Subscriptions.\r\n Diese erzeugen Memory-Leaks, wenn sie nicht sauber gelÃ¶scht werden. */\r\nexport abstract class SubscriptionManager {\r\n  // Alle benannten Subscriptions werden hier gecached\r\n  private static subscriptions: object = {};\r\n  /** Subscription mit einem Namen. Diese Funktion ist nÃ¼tzlich,\r\n   falls eine Subscription Ã¶fters aufgerufen wird und die vorherige, falls\r\n   noch nicht abgeschlossen, beendet werden soll (HTTP Aufrufe). */\r\n  public static subscribeAs<T>(\r\n    name: string,\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    const sub = observable\r\n      .pipe(\r\n        take(1),\r\n        finalize((...args: any[]) => {\r\n          if (_.isFunction(handler.onFinished)) {\r\n            handler.onFinished(...args);\r\n            if (sub) {\r\n              this.deleteSubscription(name);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onSuccess)) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onError)) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n    this.pushSubscription(name, sub);\r\n    return sub;\r\n  }\r\n  /** Funktion fÃ¼r einmalige Subscriptions (z.B.: Initialisierungsaufrufe) */\r\n  public static subscribe<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    const sub = observable\r\n      .pipe(\r\n        take(1),\r\n        finalize((...args: any[]) => {\r\n          if (_.isFunction(handler.onFinished)) {\r\n            handler.onFinished(...args);\r\n            if (sub) {\r\n              this.deleteSubscription(name);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onSuccess)) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onError)) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n    return sub;\r\n  }\r\n\r\n  private static pushSubscription(name: string, subscription: Subscription): void {\r\n    this.deleteSubscription(name);\r\n    SubscriptionManager.subscriptions[name] = subscription;\r\n  }\r\n\r\n  private static deleteSubscription(name: string): void {\r\n    const sub = SubscriptionManager.subscriptions[name];\r\n    if (sub) {\r\n      sub.unsubscribe();\r\n      delete SubscriptionManager.subscriptions[name];\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import * as _ from 'underscore';\r\n\r\nexport class Util {\r\n\r\n  public static isDefined(obj: any): boolean {\r\n    return obj !== null && obj !== undefined;\r\n  }\r\n\r\n  public static armUrlWithSearchParams(url: string, queryParams: object): string {\r\n    if (!queryParams || _.isEmpty(queryParams)) {\r\n      return url;\r\n    }\r\n    _.each(queryParams, (value: any, key: string) => {\r\n      const querySelector = url.indexOf('?') === -1 ? '?' : '&';\r\n      url = `${url}${querySelector}${key}=${value}`;\r\n    });\r\n    return url;\r\n  }\r\n\r\n  public static createEntityUrl(url: string, id: any): string {\r\n    return `${url}/${id}`;\r\n  }\r\n\r\n  public static getBrowser(): string {\r\n    const ua = navigator.userAgent;\r\n    let tem;\r\n    let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\r\n    if (/trident/i.test(M[1])) {\r\n      tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\r\n      return 'IE ' + (tem[1] || '');\r\n    }\r\n    if (M[1] === 'Chrome') {\r\n      tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\r\n      if (tem != null) {\r\n        return tem.slice(1).join(' ').replace('OPR', 'Opera');\r\n      }\r\n    }\r\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\r\n    tem = ua.match(/version\\/(\\d+)/i);\r\n    if (tem != null) {\r\n      M.splice(1, 1, tem[1]);\r\n    }\r\n    return M.join(' ');\r\n  }\r\n\r\n  public static getCurrentUnixTimestamp(): number {\r\n    return Math.round((new Date()).getTime() / 1000);\r\n  }\r\n\r\n  public static guid(): string {\r\n    const s4 = () => {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    };\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  private static transformUmlaute(value: string): string {\r\n    return value\r\n      .replace('Ã', 'Ae')\r\n      .replace('Ã¤', 'ae')\r\n      .replace('Ã', 'Oe')\r\n      .replace('Ã¶', 'oe')\r\n      .replace('Ã', 'Ue')\r\n      .replace('Ã¼', 'ue');\r\n  }\r\n\r\n  public static sortAlpabetically<TListType>(list: TListType[], attribute: string): TListType[] {\r\n    const resultList = _.sortBy(list, (item: TListType) => this.transformUmlaute(item[attribute]).toUpperCase());\r\n    return resultList;\r\n  }\r\n\r\n}\r\n","import {Subject} from 'rxjs';\r\nimport {Util} from \"./util\";\r\n\r\n\r\nexport class ItemStore<T> {\r\n\r\n  public readonly onChanged: Subject<T[]> = new Subject();\r\n\r\n  protected items$: object = {};\r\n  protected transformedItems$: T[] = [];\r\n\r\n  constructor(\r\n    public readonly identifier: any,\r\n    public readonly transform?: (items: T[]) => T[]\r\n  ) {}\r\n\r\n  public updateItems(items: T[]): void {\r\n    this.clear();\r\n    items = items || [];\r\n    for (const item of items) {\r\n      this.items$[item[this.identifier]] = item;\r\n    }\r\n    this.internalTransform$();\r\n  }\r\n\r\n  public clear(): void {\r\n    this.items$ = {};\r\n    this.transformedItems$ = [];\r\n  }\r\n\r\n  public remove(item: T): void {\r\n    if (item) {\r\n      delete this.items$[item[this.identifier]];\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public removeByIdentifier(identifier: any): void {\r\n    if (Util.isDefined(identifier)) {\r\n      delete this.items$[identifier];\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public update(item: T): void {\r\n    if (item) {\r\n      this.items$[item[this.identifier]] = item;\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public push(item: T): void {\r\n    if (item) {\r\n      this.items$[item[this.identifier]] = item;\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  protected internalTransform$(): void {\r\n    this.transformedItems$ = Object.values(this.items$);\r\n    if (this.transform) {\r\n      this.transformedItems$ = this.transform(this.transformedItems$);\r\n    }\r\n    this.onChanged.next(this.transformedItems$);\r\n  }\r\n\r\n  get items(): T[] {\r\n    return this.transformedItems$;\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {finalize, tap} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"./rest-service-observer\";\r\nimport {Util} from \"../util/util\";\r\n\r\n\r\nexport class RestHandler<T> implements IWriteableRestService<T> {\r\n\r\n  constructor(\r\n    public readonly http: HttpClient,\r\n    public readonly url: string,\r\n    public readonly observer: RestServiceObserver<T>,\r\n    public readonly identifier: string\r\n  ) {}\r\n\r\n  public create(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isCreatingItem = true;\r\n    return this.http.post<T>(\r\n        Util.armUrlWithSearchParams(this.url, getParams), model, httpOptions)\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemCreated.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isCreatingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    this.observer.isDestoyingItem = true;\r\n    return this.http.delete<void>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, id), getParams\r\n      ),\r\n      httpOptions\r\n    ).pipe(\r\n      tap(() => {\r\n        this.observer.onItemDestroyed.next(id);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isDestoyingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  public partialUpdate(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isPartiallyUpdatingItem = true;\r\n    return this.http.patch<T>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, model[this.identifier]), getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemPartialUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isPartiallyUpdatingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  public save(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isSavingItem = true;\r\n    let observable: Observable<T>;\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      observable = this.update(model, getParams, httpOptions);\r\n    } else {\r\n      observable = this.create(model, getParams, httpOptions);\r\n    }\r\n    return observable\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemSaved.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isSavingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public set(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isSavingItem = true;\r\n    let observable: Observable<T>;\r\n    this.observer.isUpdatingItem = true;\r\n    observable = this.http.put<T>(\r\n      Util.armUrlWithSearchParams(\r\n        this.url, getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isUpdatingItem = false;\r\n      })\r\n    );\r\n\r\n    return observable\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemSaved.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isSavingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public update(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isUpdatingItem = true;\r\n    return this.http.put<T>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, model[this.identifier]), getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isUpdatingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","/** Standart Implementierung zur Nutzung von Subscriptions\r\n *  Generell hat es wenig Sinn diese Klasse zu erzwingen,\r\n *  allerdings ergibt sich eine bessere Lesbarkeit des Codes daraus.\r\n */\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\n\r\nexport class SubscriptionHandler implements ISubscriptionHandler {\r\n  constructor(\r\n    public onSuccess?: (...args: any[]) => any,\r\n    public onError?: (...args: any[]) => any,\r\n    public onFinished?: (...args: any[]) => any\r\n  ) {}\r\n}\r\n\r\n","import {OnDestroy} from '@angular/core';\r\nimport {finalize, takeUntil} from 'rxjs/operators';\r\nimport {Observable, Subject, Subscription} from \"rxjs\";\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\nimport {SubscriptionManager} from \"../../impl/util/subscription-manager\";\r\n\r\n\r\n/** Abstracte Klasse von der alle Komponenten und Services erben. Sie stellt eine Speicherverwaltung fÃ¼r Observables bereit. */\r\nexport abstract class BaseObject implements OnDestroy {\r\n  /** Wird benutzt um Observables bei der ZerstÃ¶rung einer Komponente auszulÃ¶sen.\r\n   * Wird im ngOnDestroy ausgelÃ¶st.\r\n   */\r\n  protected $unsubscribe: Subject<void> = new Subject<void>();\r\n  /** Funktion zur dauerhaften Ãberwachung von Subscriptions. Speicher wird bei ZerstÃ¶rung der Komponente freigegeben. */\r\n  protected watch<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    return observable\r\n      .pipe(\r\n        takeUntil(this.$unsubscribe),\r\n        finalize( (...args: any[]) => {\r\n          if (handler.onFinished) {\r\n            handler.onFinished(...args);\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (handler.onSuccess) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (handler.onError) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n  }\r\n  /** Proxy fÃ¼r SubscriptionManager.subscribe */\r\n  protected subscribe<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler,\r\n  ): Subscription {\r\n    return SubscriptionManager.subscribe<T>(observable, handler);\r\n  }\r\n  /** Proxy fÃ¼r SubscriptionManager.subscribeAs */\r\n  protected subscribeAs<T>(\r\n    name: string,\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    return SubscriptionManager.subscribeAs<T>(name, observable, handler);\r\n  }\r\n  /** Alle Observables die mit watch Ã¼berwacht werden, werden hier ausgelÃ¶st. Angular kÃ¼mmert sich im den Aufruf.\r\n   *  Falls das Kind auch das Interface 'OnDestroy' implementiert, nicht vergessen super.ngOnDestroy() auszurufen, oder der Speicher\r\n   *  wird nicht freigegeben.\r\n   */\r\n  public ngOnDestroy(): void {\r\n    this.$unsubscribe.next();\r\n    this.$unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport * as moment from 'moment';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport class ValidatorRequired implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Pflichtfeld';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl): object | null => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n\r\n  public validate(): any {\r\n    if (_.isDate(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (moment.isMoment(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (_.isNumber(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (_.isString(this.value)) {\r\n      if (this.value.length > 0) {\r\n        this.hasError = false;\r\n        return null;\r\n      } else {\r\n        this.hasError = true;\r\n        return {required: true};\r\n      }\r\n    }\r\n    if (_.isBoolean(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (!this.value || _.isEmpty(this.value)) {\r\n      this.hasError = true;\r\n      return {required: true};\r\n    } else {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {FormControl} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport {ValidatorRequired} from '../../impl/validation/validator-required';\r\nimport {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\r\n\r\n\r\nexport class AccessableFormControl<TType = any>\r\n  implements IAccessableFormControl<AccessableFormControl<TType>, TType> {\r\n\r\n  public control: FormControl;\r\n  public showAs: (value: any) => any;\r\n  public convertTo: (value: any) => any;\r\n  private required$: boolean;\r\n  private validators$: IValidator[];\r\n\r\n  public initialize(\r\n    formState?: any,\r\n    validators?: IValidator[]\r\n  ) {\r\n    this.control = new FormControl(formState, null, null);\r\n    this.validateWith(validators);\r\n    this.setValue(formState);\r\n  }\r\n\r\n  public validateWith(validators: IValidator[] = []): AccessableFormControl {\r\n    this.validators$ = validators;\r\n    this.control.setValidators(_.map(validators, (v: IValidator) => {\r\n      return v.validator();\r\n    }));\r\n    this.required$ = false;\r\n    _.each(this.validators$, (v: IValidator) => {\r\n      if (v instanceof ValidatorRequired) {\r\n        this.required$ = true;\r\n      }\r\n    });\r\n    this.control.updateValueAndValidity();\r\n    return this;\r\n  }\r\n\r\n  public setValue(value: any): AccessableFormControl {\r\n    if (this.showAs) {\r\n      this.control.setValue(this.showAs(value));\r\n    } else {\r\n      this.control.setValue(value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public reset(value: TType): AccessableFormControl {\r\n    if (this.showAs) {\r\n      this.control.reset(this.showAs(value));\r\n    } else {\r\n      this.control.reset(value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormControl {\r\n    this.control.markAsDirty();\r\n    this.control.markAsTouched();\r\n    this.control.updateValueAndValidity();\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormControl {\r\n    _.each(this.validators$, (validator: IValidator) => validator.hasError = false );\r\n    this.control.updateValueAndValidity();\r\n    this.control.markAsPristine();\r\n    this.control.markAsUntouched();\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormControl {\r\n    this.control.markAsDirty();\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormControl {\r\n    this.control.markAsTouched();\r\n    return this;\r\n  }\r\n\r\n  public disable(): AccessableFormControl {\r\n    this.control.disable();\r\n    return this;\r\n  }\r\n\r\n  public enable(): AccessableFormControl {\r\n    this.control.enable();\r\n    return this;\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.control.disabled;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    if (this.control.disabled) {\r\n      return true;\r\n    }\r\n    return !this.error;\r\n  }\r\n\r\n  get validators(): IValidator[] {\r\n    return this.validators$;\r\n  }\r\n\r\n  get error(): IValidator {\r\n    return _.find(this.validators$, (v: IValidator) => v.hasError );\r\n  }\r\n\r\n  get value(): any {\r\n    if (this.convertTo) {\r\n      return this.convertTo(this.control.value);\r\n    } else {\r\n      return this.control.value;\r\n    }\r\n  }\r\n\r\n  set value(value: any) {\r\n    this.setValue(value);\r\n  }\r\n\r\n  get required(): boolean {\r\n    return this.required$;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n}\r\n","import {FormGroup} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\r\nimport {Util} from '../../impl/util/util';\r\n\r\nexport abstract class AccessableFormGroup<TFields, TModel extends object>\r\n  implements IAccessableFormControl<AccessableFormGroup<TFields, TModel>, TModel> {\r\n\r\n  public control: FormGroup;\r\n  private fields$: TFields;\r\n\r\n  public initialize(\r\n    fields: TFields\r\n  ): void {\r\n    this.control = new FormGroup(\r\n      _.mapObject(fields, (field) => {\r\n        return field.control;\r\n      })\r\n    );\r\n    this.fields$ = fields;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsUsed() );\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsUnused() );\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsDirty() );\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsTouched() );\r\n    return this;\r\n  }\r\n\r\n  public reset(model: TModel): AccessableFormGroup<TFields, TModel> {\r\n    if (!Util.isDefined(model)) {\r\n      model = {} as TModel;\r\n    }\r\n    _.each(this.fields$, (field: IAccessableFormControl<any, any>, key: string) => field.reset(model[key]));\r\n    return this;\r\n  }\r\n\r\n  get fields(): TFields {\r\n    return this.fields$;\r\n  }\r\n\r\n\r\n  get value(): TModel {\r\n    const ret = {} as TModel;\r\n    _.each(this.fields$, (field: IAccessableFormControl<any, any>, key: string) => ret[key] = field.value);\r\n    return ret;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.control.valid;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  disable(): AccessableFormGroup<TFields, TModel> {\r\n    return undefined;\r\n  }\r\n\r\n  enable(): AccessableFormGroup<TFields, TModel> {\r\n    return undefined;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\r\nimport {FormArray} from '@angular/forms';\r\nimport {Type} from '@angular/core';\r\nimport * as _ from 'underscore';\r\n\r\nexport abstract class AccessableFormArray<TModel>\r\n  implements IAccessableFormControl<AccessableFormArray<TModel>, TModel[]> {\r\n\r\n  public control: FormArray;\r\n  public type: Type<IAccessableFormControl<any, any>>;\r\n\r\n  private entries$: IAccessableFormControl<any, TModel>[];\r\n\r\n  public initialize(type: Type<IAccessableFormControl<any, any>>): void {\r\n    this.control = new FormArray([]);\r\n    this.type = type;\r\n    this.entries$ = [];\r\n  }\r\n\r\n  public push(entry: TModel): IAccessableFormControl<any, TModel> {\r\n    const item = this.generateFormEntry(entry);\r\n    this.control.push(item.control);\r\n    this.entries$.push(item);\r\n    return item;\r\n  }\r\n\r\n  public removeAt(index: number): void {\r\n    this.control.removeAt(index);\r\n    this.entries$ = _.reject(this.entries$, (e, round: number) => {\r\n      return round === index;\r\n    });\r\n    let markAsUsed = false;\r\n    for (const entry of this.entries$) {\r\n      markAsUsed = markAsUsed || entry.dirty;\r\n    }\r\n    markAsUsed ? this.markAsUsed() : this.markAsUnused();\r\n  }\r\n\r\n  public generateFormEntry(value: any): IAccessableFormControl<any, TModel> {\r\n    const validation = new this.type();\r\n    validation.reset(value);\r\n    return validation;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.control.valid;\r\n  }\r\n\r\n  get value(): TModel[] {\r\n    const ret: TModel[] = [];\r\n    for (const entry of this.entries$) {\r\n      ret.push(entry.value);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  public disable(): AccessableFormArray<TModel> {\r\n    this.control.disable();\r\n    return this;\r\n  }\r\n\r\n  public enable(): AccessableFormArray<TModel> {\r\n    this.control.enable();\r\n    for (const entry of this.entries$) {\r\n      entry.enable();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormArray<TModel> {\r\n    this.control.markAsDirty();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsDirty();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormArray<TModel> {\r\n    this.control.markAsTouched();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsTouched();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormArray<TModel> {\r\n    this.control.markAsUntouched();\r\n    this.control.markAsPristine();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsUnused();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormArray<TModel> {\r\n    this.control.markAsTouched();\r\n    this.control.markAsDirty();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsUsed();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public reset(models: TModel[]): AccessableFormArray<TModel> {\r\n    this.entries$ = [];\r\n    this.control.reset([]);\r\n    for (const model of models) {\r\n      this.push(model);\r\n    }\r\n    return this;\r\n  }\r\n\r\n}\r\n","import {EventEmitter} from '@angular/core';\r\nimport {Subject} from \"rxjs\";\r\n\r\n\r\nexport class ReadonlyRestServiceObserver<T> {\r\n\r\n  public readonly onItemFetched: Subject<T> = new Subject();\r\n  public readonly onItemsFetched: Subject<T[]> = new Subject();\r\n\r\n  private isFetchingItem$: boolean;\r\n  private isFetchingItems$: boolean;\r\n\r\n  constructor() {\r\n    this.isFetchingItem$ = false;\r\n    this.isFetchingItems$ = false;\r\n  }\r\n\r\n  public isActivate(): boolean {\r\n    return !this.isFetchingItem && !this.isFetchingItems;\r\n  }\r\n\r\n  set isFetchingItems(fetching: boolean) {\r\n    this.isFetchingItems$ = fetching;\r\n  }\r\n\r\n  get isFetchingItems(): boolean {\r\n    return this.isFetchingItems$;\r\n  }\r\n\r\n  set isFetchingItem(fetching: boolean) {\r\n    this.isFetchingItem$ = fetching;\r\n  }\r\n\r\n  get isFetchingItem(): boolean {\r\n    return this.isFetchingItem$;\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {finalize, tap} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IReadonlyRestService} from \"../../interface/http/i-readonly-restservice\";\r\nimport {ReadonlyRestServiceObserver} from \"./readonly-rest-service-observer\";\r\nimport {Util} from \"../util/util\";\r\n\r\n\r\nexport class ReadonlyRestHandler<T> implements IReadonlyRestService<T> {\r\n\r\n  identifier: string;\r\n\r\n  constructor(\r\n    public readonly http: HttpClient,\r\n    public readonly url: string,\r\n    public readonly observer: ReadonlyRestServiceObserver<T>\r\n  ) {}\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<T[]> {\r\n    this.observer.isFetchingItems = true;\r\n    return this.http.get<T[]>(Util.armUrlWithSearchParams(this.url, searchParams), httpOptions)\r\n      .pipe(\r\n        tap( (result: T[]): void => {\r\n          this.observer.onItemsFetched.next(result);\r\n        }),\r\n        // catchError( _.bind(this.serviceErrorHandler.catchError, this.serviceErrorHandler) as (error: any) => Observable<any> ),\r\n        finalize( (): void => {\r\n          this.observer.isFetchingItems = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isFetchingItem = true;\r\n    return this.http.get<T>(\r\n        Util.armUrlWithSearchParams(Util.createEntityUrl(this.url, id), getParams), httpOptions)\r\n      .pipe(\r\n        tap( (result: T): void => {\r\n          this.observer.onItemFetched.next(result);\r\n        }),\r\n        finalize( (): void => {\r\n          this.observer.isFetchingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {BaseObject} from '../ui/base-object';\r\nimport {IReadonlyRestService} from '../../interface/http/i-readonly-restservice';\r\nimport {ReadonlyRestServiceObserver} from '../../impl/http/readonly-rest-service-observer';\r\nimport {ReadonlyRestHandler} from '../../impl/http/readony-rest-handler';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractReadonlyRestservice<T> extends BaseObject implements IReadonlyRestService<T> {\r\n\r\n  identifier: string;\r\n  public abstract url: string;\r\n  public readonly observer: ReadonlyRestServiceObserver<T>;\r\n  protected abstract http: HttpClient;\r\n\r\n  protected constructor(\r\n    restServiceObserver?: ReadonlyRestServiceObserver<T>\r\n  ) {\r\n    super();\r\n    this.observer = Util.isDefined(restServiceObserver) ? restServiceObserver :\r\n      new ReadonlyRestServiceObserver<T>();\r\n  }\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<T[]> {\r\n    return new ReadonlyRestHandler<T>(this.http, this.url, this.observer).all(searchParams, httpOptions);\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new ReadonlyRestHandler<T>(this.http, this.url, this.observer).show(id, getParams, httpOptions);\r\n  }\r\n\r\n}\r\n","import {ReadonlyRestServiceObserver} from './readonly-rest-service-observer';\r\nimport {Subject} from \"rxjs\";\r\n\r\n\r\nexport class RestServiceObserver<T> extends ReadonlyRestServiceObserver<T> {\r\n\r\n  public readonly onItemCreated: Subject<T> = new Subject();\r\n  public readonly onItemUpdated: Subject<T> = new Subject();\r\n  public readonly onItemDestroyed: Subject<T> = new Subject();\r\n  public readonly onItemPartialUpdated: Subject<T> = new Subject();\r\n  public readonly onItemSaved: Subject<T> = new Subject();\r\n\r\n  private isCreatingItem$: boolean;\r\n  private isUpdatingItem$: boolean;\r\n  private isDestoyingItem$: boolean;\r\n  private isPartiallyUpdatingItem$: boolean;\r\n  private isSavingItem$: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.isCreatingItem$ = false;\r\n    this.isUpdatingItem$ = false;\r\n    this.isDestoyingItem$ = false;\r\n    this.isPartiallyUpdatingItem$ = false;\r\n  }\r\n\r\n  public isActivate(): boolean {\r\n    return super.isActivate() &&\r\n      !this.isCreatingItem$ &&\r\n      !this.isUpdatingItem$ &&\r\n      !this.isDestoyingItem$ &&\r\n      !this.isPartiallyUpdatingItem$ &&\r\n      !this.isSavingItem$;\r\n  }\r\n\r\n  set isCreatingItem(isCreating: boolean) {\r\n    this.isCreatingItem$ = isCreating;\r\n  }\r\n\r\n  get isCreatingItem(): boolean {\r\n    return this.isCreatingItem$;\r\n  }\r\n\r\n  set isUpdatingItem(isUpdating: boolean) {\r\n    this.isUpdatingItem$ = isUpdating;\r\n  }\r\n\r\n  get isUpdatingItem(): boolean {\r\n    return this.isUpdatingItem$;\r\n  }\r\n\r\n  set isDestoyingItem(isDestroying: boolean) {\r\n    this.isDestoyingItem$ = isDestroying;\r\n  }\r\n\r\n  get isDestoyingItem(): boolean {\r\n    return this.isDestoyingItem$;\r\n  }\r\n\r\n  set isPartiallyUpdatingItem(isUpdating: boolean) {\r\n    this.isPartiallyUpdatingItem$ = isUpdating;\r\n  }\r\n\r\n  get isPartiallyUpdatingItem(): boolean {\r\n    return this.isPartiallyUpdatingItem$;\r\n  }\r\n\r\n  set isSavingItem(isSaving: boolean) {\r\n    this.isSavingItem$ = isSaving;\r\n  }\r\n\r\n  get isSavingItem(): boolean {\r\n    return this.isSavingItem$;\r\n  }\r\n\r\n\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AbstractReadonlyRestservice} from './abstract-readonly-restservice';\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\n\r\nexport abstract class AbstractRestservice<T> extends AbstractReadonlyRestservice<T> implements IWriteableRestService<T> {\r\n\r\n  public abstract identifier: string;\r\n  public readonly observer: RestServiceObserver<any>;\r\n  protected abstract http: HttpClient;\r\n\r\n  protected constructor() {\r\n    super(new RestServiceObserver<T>());\r\n  }\r\n\r\n  public create(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).create(model, getParams, httpOptions);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).destroy(id, getParams, httpOptions);\r\n  }\r\n\r\n  public partialUpdate(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions);\r\n  }\r\n\r\n  public save(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).save(model, getParams, httpOptions);\r\n  }\r\n\r\n  public update(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).update(model, getParams, httpOptions);\r\n  }\r\n\r\n}\r\n","import {ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport abstract class ValidatorCustom implements IValidator {\r\n  public abstract error: string;\r\n  public abstract hasError = false;\r\n  private value: any;\r\n\r\n  protected constructor() {\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return null;\r\n  }\r\n\r\n  public validate(): any {\r\n    return null;\r\n  }\r\n\r\n}\r\n","/** Hier werden alle von der Applikation genutzten REGEX gespeichert. */\r\nexport const REGEX = {\r\n  /** Regex fÃ¼r eine Zahl. Jede Zahl sollte damit erkannt werden */\r\n  NUMBER: /^-?[0-9]+([,.][0-9]+)?$/,\r\n  /** Die Representation einer (Gleitkomma)Zahl, die der Anwender eingeben darf */\r\n  INPUT_NUMBER: /^[0-9]+(,[0-9]+)?$/,\r\n  INTEGER: /^[0-9]+$/,\r\n  SIGNED_INTEGER: /^-?[0-9]+$/,\r\n  /** Offizieller RFC 5322 Standart regex */\r\n  EMAIL: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n  POSTAL_CODE: /^[0-9]{5}$/,\r\n  SPECIAL_CHARS_REGEX: /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\r\n  DATE: /^(\\d{1,2})[-\\/](\\d{1,2})[-\\/](\\d{4})$/\r\n};\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport class ValidatorEmail implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine gÃ¼ltige E-Mail ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n  public validate(): any {\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.EMAIL.test(this.value.toString())) {\r\n      this.hasError = false;\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidEmail: true};\r\n    }\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport class ValidatorFixedValue implements IValidator {\r\n\r\n  public hasError: boolean;\r\n  private value$: any;\r\n  constructor(\r\n    public comparator: any,\r\n    public error: string = null\r\n  ) {}\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (this.comparator === this.value$) {\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {validatorFixed: true};\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value$ = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {REGEX} from '../../enum/regex';\r\nimport {Util} from '../util/util';\r\n\r\n\r\nexport class ValidatorFloat implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine valide Zahl ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    private digitsBefore?: number,\r\n    private digitsAfter?: number\r\n  ) {}\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl): object | null => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    this.error = 'Bitte geben Sie eine valide Zahl ein';\r\n    let validAmountDisgitsBefore = false;\r\n    let validAmountDisgitsAfter = false;\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.INPUT_NUMBER.test(this.value.toString())) {\r\n      const numberSplitted = this.value.toString().split(',');\r\n      if (Util.isDefined(this.digitsBefore) && this.digitsAfter === 0 && numberSplitted.length === 2) {\r\n        this.hasError = true;\r\n        this.error = 'Es sind keine Nachkommastellen erlaubt';\r\n        return {invalidFloat: true};\r\n      }\r\n      if (numberSplitted.length !== 2) {\r\n        if (Util.isDefined(this.digitsBefore)) {\r\n          if (this.value.length > this.digitsBefore) {\r\n            this.error = `Bitte runden Sie die Zahl auf ${this.digitsBefore === 1 ? 'eine Stelle' : this.digitsBefore.toString() + ' Stellen'} vor dem Komma`;\r\n            this.hasError = true;\r\n            return {invalidFloat: true};\r\n          }\r\n        }\r\n        this.hasError = false;\r\n        return null;\r\n      }\r\n      if (Util.isDefined(this.digitsBefore) && this.digitsBefore > 0) {\r\n        validAmountDisgitsBefore = numberSplitted[0].length <= this.digitsBefore;\r\n        if (!validAmountDisgitsBefore) {\r\n          this.error = `Bitte runden Sie die Zahl auf ${this.digitsBefore === 1 ? 'eine Stelle' : this.digitsBefore.toString() + ' Stellen'} vor dem Komma`;\r\n        }\r\n      } else {\r\n        validAmountDisgitsBefore = true;\r\n      }\r\n      if (Util.isDefined(this.digitsAfter) && this.digitsAfter > 0) {\r\n        validAmountDisgitsAfter = numberSplitted[1].length <= this.digitsAfter;\r\n        if (!validAmountDisgitsAfter) {\r\n          this.error = `Bitte runden Sie die Zahl auf ${this.digitsAfter === 1 ? ' eine Stelle' : this.digitsAfter.toString() + ' Stellen'} nach dem Komma`;\r\n        }\r\n      } else {\r\n        validAmountDisgitsAfter = true;\r\n      }\r\n      this.hasError = !(validAmountDisgitsBefore && validAmountDisgitsAfter);\r\n      if (this.hasError) {\r\n        return {invalidFloat: true};\r\n      }\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidFloat: true};\r\n    }\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\n\r\n\r\nexport class ValidatorInteger implements IValidator {\r\n\r\n  public error = 'Bitte geben Sie eine ganze Zahl ein';\r\n  public hasError: boolean;\r\n\r\n  private value$: string;\r\n  private regex$: RegExp;\r\n\r\n\r\n  constructor(\r\n    private allowNegativeValues$: boolean = false\r\n  ) {\r\n    if (allowNegativeValues$) {\r\n      this.regex$ = REGEX.SIGNED_INTEGER;\r\n    } else {\r\n      this.regex$ = REGEX.INTEGER;\r\n    }\r\n  }\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (!this.value$) {\r\n      return null;\r\n    }\r\n    if (!this.regex$.test(this.value$)) {\r\n      this.hasError = true;\r\n      return {invalidInteger: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value$ = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport class ValidatorPostalCode implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine gÃ¼ltige Postleitzahl ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.POSTAL_CODE.test(this.value.toString())) {\r\n      this.hasError = false;\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidPostalCode: true};\r\n    }\r\n  }\r\n}\r\n","import moment from 'moment';\r\nimport * as _ from 'underscore';\r\nimport {Util} from './util';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport abstract class TypeConverter {\r\n\r\n  /** Versucht den Wert in eine Zahl zu konvertieren. */\r\n  public static toNumber(value: string | number): number | string {\r\n    // Falls null oder undefined Ã¼bergeben wurde, brechen wir ab\r\n    if (!value) {\r\n      return value;\r\n    }\r\n    // Falls der Wert bereits eine Zahl ist, sind wir fertig\r\n    if (_.isNumber(value)) {\r\n      return value;\r\n    }\r\n    // Falls der Wert ein String ist, testen wir, ob er aussieht wie eine Zahl und versuchen ihn anschlieÃend zu konvertieren\r\n    if (_.isString(value) && REGEX.NUMBER.test(value as string)) {\r\n      return TypeConverter.convertInputStringToNumber(value as string);\r\n    }\r\n    // Wir haben keine Regel fÃ¼r die Konvertierung gefunden\r\n    return value;\r\n  }\r\n\r\n  /** Nimmt eine Zahl und gibt eine deutsche Representation dieses Wertes zurÃ¼ck */\r\n  public static asGermanFloat(value: number | string, stellen?: number): string | undefined {\r\n    if (value === null || value === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    if (!_.isUndefined(stellen) && _.isNumber(value)) {\r\n      value = (value as number).toFixed(stellen);\r\n    }\r\n    return value.toString().replace('.', ',');\r\n  }\r\n\r\n  /** Erzeugt ein moment object und setzt dieses auf UTC, falls dies noch nicht geschehen ist. */\r\n  /*public static utcDate(...args: any[]): moment.Moment {\r\n    const isDefined = _.every(args, (arg: any) => Util.isDefined(arg));\r\n    if (!isDefined) {\r\n      return undefined;\r\n    }\r\n    const mObject = moment(...args);\r\n    if (mObject.isUTC()) {\r\n      return mObject;\r\n    } else {\r\n      return mObject.utc(true);\r\n    }\r\n  }*/\r\n  /** Konvertiert ein moment Object in die lokale Zeitzone (Entfernt UTC) */\r\n  /*public static toLocalDate(mObject: moment.Moment): moment.Moment {\r\n    if (!Util.isDefined(mObject)) {\r\n      return undefined;\r\n    }\r\n    const param = moment(mObject);\r\n    if (param.isUTC()) {\r\n      return param.local(true);\r\n    } else {\r\n      return param;\r\n    }\r\n  }*/\r\n\r\n  public static booleanNumberToSting(n: number): string {\r\n    return n === 1 ? 'Ja' : 'Nein';\r\n  }\r\n\r\n  /** Konvertiert ein Moment Object zu einem Date Object */\r\n  /*public static toJSDate(mObject: moment.Moment): Date {\r\n    const mDate = TypeConverter.utcDate(mObject);\r\n    if (!mDate) {\r\n      return undefined;\r\n    }\r\n    return mDate.toDate();\r\n  }*/\r\n\r\n  /** Kovertiert einen String in einen Regex um eine Volltextsuche zu ermÃ¶glichen */\r\n  public static asRegex(text: string): RegExp {\r\n    let builderString = '';\r\n    if (_.isEmpty(text)) {\r\n      return new RegExp(builderString);\r\n    }\r\n    _.each(text.split(''), (char) => {\r\n      builderString = builderString + `${char}`;\r\n    });\r\n    return new RegExp(builderString.replace(REGEX.SPECIAL_CHARS_REGEX, '\\\\$&'), 'i');\r\n  }\r\n\r\n  public static booleanToNumber(bool: boolean): number {\r\n    return bool === true ? 1 : 0;\r\n  }\r\n\r\n  public static numberToBoolean(digit: number): boolean {\r\n    return digit === 1;\r\n  }\r\n\r\n  /** Kovertiert einen String, der dem Regex einer Zahl entspricht, in eine Zahl */\r\n  private static convertInputStringToNumber(value: string): number {\r\n    if (value.includes('.')) {\r\n      return Number.parseFloat(value);\r\n    }\r\n    if (value.includes(',')) {\r\n      return Number.parseFloat(value.replace(',', '.'));\r\n    }\r\n    return Number.parseInt(value);\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {AccessableFormControl} from '../../abstract/validation/accessable-form-control';\r\nimport {TypeConverter} from '../util/type-converter';\r\nimport {Util} from '../util/util';\r\n\r\nexport abstract class AccessableControlFactory {\r\n\r\n  public static simpleControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = new AccessableFormControl();\r\n    control.initialize(formState, validators);\r\n    return control;\r\n  }\r\n\r\n  public static numberControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = TypeConverter.asGermanFloat;\r\n    control.convertTo = TypeConverter.toNumber;\r\n    control.setValue(formState);\r\n    return control;\r\n  }\r\n\r\n  public static numberBooleanControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = TypeConverter.numberToBoolean;\r\n    control.convertTo = TypeConverter.booleanToNumber;\r\n    control.setValue(formState);\r\n    return control;\r\n  }\r\n\r\n  public static dateControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    return control;\r\n  }\r\n\r\n  /** Schneides alle Whitespaces am Ende und Anfang weg */\r\n  public static trimControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = (str: string): string | undefined | null => {\r\n      if (Util.isDefined(str)) {\r\n        return str.trim();\r\n      }\r\n      return str;\r\n    };\r\n    control.convertTo = (str: string): string | undefined | null => {\r\n      if (Util.isDefined(str)) {\r\n        return str.trim();\r\n      }\r\n      return str;\r\n    };\r\n    return control;\r\n  }\r\n}\r\n","\r\nexport enum HttpStatusCodes {\r\n  OK = 200,\r\n  BAD_REQUEST = 400,\r\n  PRECONDITION_FAILED = 412,\r\n  CONFLICT = 409,\r\n  FORBIDDEN = 403,\r\n  NOT_FOUND = 404,\r\n  LOCKED = 423,\r\n  NOT_ACCEPTABLE = 406\r\n}\r\n","import {BaseObject} from './base-object';\r\nimport {ChangeDetectorRef} from '@angular/core';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {SubscriptionHandler} from '../../impl/util/subscription-handler';\r\n\r\n\r\nexport abstract class BasePushStrategyObject extends BaseObject {\r\n\r\n  protected abstract cdr: ChangeDetectorRef;\r\n\r\n  protected markForCheckIf(subject: Observable<any>): Subscription {\r\n    return this.watch(subject, new SubscriptionHandler(this.cdr.markForCheck.bind(this.cdr)));\r\n  }\r\n\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport {Util} from \"./util\";\r\n\r\n/**\r\n * Diese Klasse kann verwendet werden um Werte zu speichern und die automatisch\r\n * Ã¼berwachbar zu machen. Dadurch kÃ¶nnen UI Push Strategien leichter implementiert werden.\r\n */\r\nexport class ObservableValue<TValueType> {\r\n\r\n  private value$: TValueType;\r\n  public readonly changed: Subject<TValueType> = new Subject<TValueType>();\r\n\r\n  public constructor(\r\n    initialValue?: TValueType,\r\n    private readonly equals?: (current: TValueType, next: TValueType) => boolean\r\n  ) {\r\n    this.value$ = initialValue;\r\n    this.equals = Util.isDefined(this.equals) ? this.equals : this.defaultComparator;\r\n  }\r\n\r\n\r\n  public set value(value: TValueType) {\r\n    if (!this.equals(this.value$, value)) {\r\n      this.value$ = value;\r\n      this.changed.next(value);\r\n    }\r\n  }\r\n\r\n  public get value(): TValueType {\r\n    return this.value$;\r\n  }\r\n\r\n\r\n  private defaultComparator(current: TValueType, next: TValueType): boolean {\r\n    return current === next;\r\n  }\r\n\r\n}\r\n","import {BaseObject} from \"../ui/base-object\";\r\nimport {IReadonlyStoreRestService} from \"../../interface/http/i-readonly-stored-rest-service\";\r\nimport {ItemStore} from \"../../impl/util/item-store\";\r\nimport {ReadonlyRestServiceObserver} from \"../../impl/http/readonly-rest-service-observer\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {ReadonlyRestHandler} from \"../../impl/http/readony-rest-handler\";\r\nimport { tap } from 'rxjs/operators';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractStoredReadonlyRestservice<TModel> extends BaseObject\r\n  implements IReadonlyStoreRestService<TModel> {\r\n\r\n  public abstract url: string;\r\n  public abstract store: ItemStore<TModel>;\r\n  public abstract identifier: string;\r\n  protected abstract http: HttpClient;\r\n\r\n  public readonly observer: ReadonlyRestServiceObserver<TModel>;\r\n\r\n  protected constructor(\r\n    restServiceObserver?: ReadonlyRestServiceObserver<TModel>\r\n  ) {\r\n    super();\r\n    this.observer = Util.isDefined(restServiceObserver) ? restServiceObserver :\r\n      new ReadonlyRestServiceObserver<TModel>();\r\n  }\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<TModel[]> {\r\n    return new ReadonlyRestHandler<TModel>(this.http, this.url, this.observer).all(searchParams, httpOptions)\r\n      .pipe(\r\n        tap( (response: TModel[]) => {\r\n          this.store.updateItems(response);\r\n        })\r\n      );\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new ReadonlyRestHandler<TModel>(this.http, this.url, this.observer).show(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (response: TModel) => {\r\n          this.store.update(response);\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractStoredReadonlyRestservice} from \"./abstract-stored-readonly-restservice\";\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractStoredRestservice<TModel>\r\n  extends AbstractStoredReadonlyRestservice<TModel>\r\n  implements IWriteableRestService<TModel> {\r\n\r\n  public readonly observer: RestServiceObserver<TModel>;\r\n\r\n  protected constructor() {\r\n    super(new RestServiceObserver<TModel>());\r\n  }\r\n\r\n  public create(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .create(model, getParams, httpOptions)\r\n    return this.modifyCreateCall(request);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .destroy(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( () => {\r\n          this.store.removeByIdentifier(id);\r\n        })\r\n      );\r\n  }\r\n\r\n  public partialUpdate(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (result: TModel) => {\r\n          this.store.update(result);\r\n        })\r\n      );\r\n  }\r\n\r\n  public save(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .save(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public set(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .set(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public update(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .update(model, getParams, httpOptions);\r\n    request = this.modifyUpdateCall(request);\r\n    return request;\r\n  }\r\n\r\n  protected modifyCreateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.push(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected modifyUpdateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.update(result);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import {IDeactivate} from \"../../interface/util/i-deactivate\";\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport {SubscriptionManager} from \"./subscription-manager\";\r\nimport {SubscriptionHandler} from \"./subscription-handler\";\r\n\r\nexport class DeactivationHandler implements IDeactivate {\r\n\r\n  private deactivators$: { [name: string]: IDeactivate } = {};\r\n\r\n\r\n  public register(name: string, component: IDeactivate): void {\r\n    this.deactivators$[name] = component;\r\n  }\r\n\r\n  public remove(name: string): void {\r\n    delete this.deactivators$[name];\r\n  }\r\n\r\n  public canDeactivate(): Observable<boolean> {\r\n    return new Observable<boolean>(subscriber => {\r\n      this._deactivateComponent(0, subscriber);\r\n    });\r\n  }\r\n\r\n  private _deactivateComponent(index: number, observer: Subscriber<boolean>): void {\r\n    const component = Object.values(this.deactivators$)[index];\r\n    if (!component) {\r\n      observer.next(true);\r\n      observer.complete();\r\n    } else {\r\n      SubscriptionManager.subscribe(component.canDeactivate(), new SubscriptionHandler( (canDeactivate: boolean) => {\r\n        if (!canDeactivate) {\r\n          observer.next(false);\r\n          observer.complete();\r\n        } else {\r\n          this._deactivateComponent(index + 1, observer);\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, Subscriber, forkJoin } from 'rxjs';\r\nimport * as _ from 'underscore';\r\nimport {Util} from \"../../impl/util/util\";\r\nimport {SubscriptionManager} from \"../../impl/util/subscription-manager\";\r\nimport {SubscriptionHandler} from \"../../impl/util/subscription-handler\";\r\n\r\nexport abstract class AbstractActivationQueuedGuard implements CanActivate {\r\n\r\n  private readonly queue: CanActivate[][] = [];\r\n\r\n  private route: ActivatedRouteSnapshot;\r\n  private state: RouterStateSnapshot;\r\n\r\n  public canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    this.route = route;\r\n    this.state = state;\r\n    return new Observable((subscriber) => {\r\n      this.runQueueRecursive(0, subscriber);\r\n    });\r\n  }\r\n\r\n  protected sequence(step: CanActivate[] | CanActivate): AbstractActivationQueuedGuard {\r\n    if (_.isArray(step)) {\r\n      this.queue.push(step as CanActivate[]);\r\n    } else {\r\n      this.queue.push([step as CanActivate]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  private runQueueRecursive(level: number, subscriber: Subscriber<boolean | UrlTree>): void {\r\n    const currentQueueItems: CanActivate[] = this.queue[level];\r\n    if (!Util.isDefined(currentQueueItems)) {\r\n      subscriber.next(true);\r\n      subscriber.complete();\r\n      return;\r\n    }\r\n    const activators: CanActivate[] = _.map(currentQueueItems, (queueItem: CanActivate) => {\r\n      return queueItem.canActivate(this.route, this.state);\r\n    });\r\n    SubscriptionManager.subscribe(forkJoin(activators), new SubscriptionHandler(\r\n      (canActivateStates: boolean[]) => {\r\n        if (!_.all(canActivateStates)) {\r\n          subscriber.next(false);\r\n          subscriber.complete();\r\n        } else {\r\n          this.runQueueRecursive(level + 1, subscriber);\r\n        }\r\n      },\r\n      () => {\r\n        subscriber.next(false);\r\n        subscriber.complete();\r\n      }\r\n    ));\r\n  }\r\n\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport {AbstractRouteConfiguration} from \"./abstract-route-configuration\";\r\nimport {IRoutingData} from \"../../interface/routing/i-routing-configuration\";\r\n\r\n\r\nexport abstract class AbstractActivationGuard<TSuccessType, TRouteParams> implements CanActivate {\r\n\r\n  protected abstract onSuccess(result: TSuccessType): Observable<boolean>;\r\n  protected abstract onError(error: any): Observable<boolean>;\r\n  protected abstract onActivate(): Observable<TSuccessType>;\r\n\r\n  protected route: ActivatedRouteSnapshot;\r\n  protected state: RouterStateSnapshot;\r\n\r\n  public canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    this.route = route;\r\n    this.state = state;\r\n    return this.onActivate()\r\n      .pipe(\r\n        switchMap((result: TSuccessType): Observable<boolean> => {\r\n          return this.onSuccess(result);\r\n        }),\r\n        catchError((error): Observable<boolean> => {\r\n          return this.onError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  protected get routeConfiguration(): AbstractRouteConfiguration<TRouteParams> {\r\n    return (this.route.data as IRoutingData<TRouteParams>).routeConfiguration;\r\n  }\r\n\r\n}\r\n","import {Util} from \"../../impl/util/util\";\r\nimport * as _ from 'underscore';\r\n\r\nexport abstract class AbstractRouteConfiguration<TParams> {\r\n\r\n  protected constructor(\r\n    protected pathSegments: string[],\r\n    protected paramNames?: TParams,\r\n    protected parent?: AbstractRouteConfiguration<any>\r\n  ) {}\r\n\r\n  public get path(): string {\r\n    if (Util.isDefined(this.parent)) {\r\n      return `${this.parent.path}/${this.pathSegments.join('/')}`;\r\n    } else {\r\n      return this.pathSegments.join('/');\r\n    }\r\n  }\r\n\r\n  public get paramDefinition(): TParams {\r\n    return _.extend(\r\n      Util.isDefined(this.parent) ? this.parent.paramDefinition : {},\r\n      this.paramNames || {}\r\n    );\r\n  }\r\n\r\n  public buildNavigation(params?: TParams): any[] {\r\n    let navigationParams = Util.isDefined(this.parent) ?\r\n      this.parent.buildNavigation(params) : [];\r\n    if (!Util.isDefined(params)) {\r\n      return navigationParams.concat(this.pathSegments);\r\n    }\r\n    navigationParams = navigationParams.concat(_.map(this.pathSegments, (segment: string) => {\r\n      const segmentInParams = params[segment.replace(':', '')];\r\n      if (Util.isDefined(segmentInParams)) {\r\n        return segmentInParams;\r\n      }\r\n      return segment;\r\n    }));\r\n    return navigationParams;\r\n  }\r\n\r\n  public validate(): boolean {\r\n    for(const pathSnippet in this.pathSegments) {\r\n      if (!Util.isDefined(pathSnippet)) {\r\n        console.error('Creating a route without a path snippet is not allowed');\r\n        return false;\r\n      }\r\n      if (pathSnippet.startsWith('/')) {\r\n        console.error('Creating a route with a path snippet starting with a / is not allowed');\r\n        return false;\r\n      }\r\n      if (pathSnippet.endsWith('/')) {\r\n        console.error('Creating a route with a path snippet ending with a / is not allowed');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {AbstractRouteConfiguration} from \"./abstract-route-configuration\";\r\nimport {IRoutingData} from \"../../interface/routing/i-routing-configuration\";\r\n\r\nexport abstract class AbstractResolver<TData, TRouteParams> implements Resolve<TData> {\r\n\r\n  protected route: ActivatedRouteSnapshot;\r\n  protected state: RouterStateSnapshot;\r\n\r\n  protected abstract onResolve(): Observable<TData>;\r\n\r\n  public resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<TData> | Promise<TData> | TData {\r\n    this.route = route;\r\n    this.state = state;\r\n    return this.onResolve();\r\n  }\r\n\r\n  protected get routeConfiguration(): AbstractRouteConfiguration<TRouteParams> {\r\n    return (this.route.data as IRoutingData<TRouteParams>).routeConfiguration;\r\n  }\r\n\r\n}\r\n","import {IDeactivate} from \"../../interface/util/i-deactivate\";\r\nimport { Observable } from 'rxjs';\r\nimport { OnDestroy } from '@angular/core';\r\nimport {IEntitySelector} from \"../../interface/ui/i-entity-selector\";\r\nimport {SubscriptionHandler} from \"../../impl/util/subscription-handler\";\r\nimport * as _ from 'underscore';\r\nimport {AbstractEntityResolver} from \"../util/abstract-entity-resolver\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {BasePushStrategyObject} from \"./base-push-strategy-object\";\r\n\r\nexport abstract class BaseRootComponent extends BasePushStrategyObject implements IDeactivate, OnDestroy {\r\n\r\n  public abstract canDeactivate(): Observable<boolean>;\r\n  protected abstract activatedRoute: ActivatedRoute;\r\n  protected observables: IEntitySelector<any>[] = [];\r\n\r\n  public listenTo(observable: IEntitySelector<any>, resolver: AbstractEntityResolver<any, any>): void {\r\n    this.observables.push(observable);\r\n    observable.isVisible.value = true;\r\n    this.watch(observable.nextRequested, new SubscriptionHandler((dataSet: any) => {\r\n      this.onNextRequested(observable, dataSet, resolver);\r\n    }));\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n    _.each(this.observables, (observable: IEntitySelector<any>) => observable.isVisible.value = false);\r\n  }\r\n\r\n  protected onNextRequested(\r\n    observable: IEntitySelector<any>,\r\n    dataSet: any,\r\n    resolver: AbstractEntityResolver<any, any>\r\n  ): void {\r\n    this.subscribe(this.canDeactivate(), new SubscriptionHandler((canDeactivate: boolean) => {\r\n      if (canDeactivate) {\r\n        // Maybe catch error\r\n        resolver.resolve(this.activatedRoute, dataSet, observable);\r\n      }\r\n    }));\r\n  }\r\n\r\n}\r\n","import {AbstractStoredReadonlyRestservice} from \"./abstract-stored-readonly-restservice\";\r\nimport { Observable, of } from 'rxjs';\r\nimport * as _ from 'underscore';\r\nimport {TimestampItemStore} from \"../../impl/util/timestamp-item-store\";\r\n\r\nexport abstract class AbstractReadonlyCachedRestservice<TModel>\r\n  extends AbstractStoredReadonlyRestservice<TModel> {\r\n\r\n  public abstract store: TimestampItemStore<TModel>;\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<TModel[]> {\r\n    if (this.store.isStoreValid()) {\r\n      return of(this.store.items);\r\n    } else {\r\n      return super.all(searchParams, httpOptions);\r\n    }\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    if (this.store.isItemValid(id)) {\r\n      const lookup = {} as TModel;\r\n      lookup[this.identifier] = id;\r\n      return of(_.find(this.store.items, lookup));\r\n    }\r\n    return super.show(id, getParams, httpOptions);\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractReadonlyCachedRestservice} from \"./abstract-readonly-cached-restservice\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\nimport {Util} from \"../../impl/util/util\";\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n\r\nexport abstract class AbstractCachedRestservice<TModel>\r\n  extends AbstractReadonlyCachedRestservice<TModel>\r\n  implements IWriteableRestService<TModel>{\r\n\r\n  public readonly observer: RestServiceObserver<TModel> = new RestServiceObserver();\r\n\r\n\r\n  public create(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .create(model, getParams, httpOptions);\r\n    return this.modifyCreateCall(request);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .destroy(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( () => {\r\n          this.store.removeByIdentifier(id);\r\n        })\r\n      );\r\n  }\r\n\r\n  public partialUpdate(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (result: TModel) => {\r\n          this.store.update(result);\r\n        })\r\n      );\r\n  }\r\n\r\n  public save(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .save(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public set(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .set(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public update(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .update(model, getParams, httpOptions);\r\n    request = this.modifyUpdateCall(request);\r\n    return request;\r\n  }\r\n\r\n  protected modifyCreateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.push(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected modifyUpdateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.update(result);\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractRouteConfiguration} from \"../routing/abstract-route-configuration\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as _ from 'underscore';\r\nimport {IEntitySelector} from \"../../interface/ui/i-entity-selector\";\r\n\r\nexport interface IEntityResolverConfiguration {\r\n  keepQueryParams: boolean;\r\n}\r\n\r\nexport abstract class AbstractEntityResolver<TRouteParams, TModel> {\r\n\r\n  public abstract resolve(\r\n    activatedRoute: ActivatedRoute,\r\n    model: TModel,\r\n    entitySelector: IEntitySelector<TModel>\r\n  ): Promise<boolean>;\r\n\r\n  protected constructor(\r\n    protected readonly router: Router,\r\n    protected readonly routeConfiguration: AbstractRouteConfiguration<TRouteParams>,\r\n    protected readonly configuration?: IEntityResolverConfiguration,\r\n  ) {\r\n    this.configuration = configuration || AbstractEntityResolver.generateDefaultConfiguration();\r\n  }\r\n\r\n  protected runResolver(activatedRoute: ActivatedRoute, params: object): Promise<boolean> {\r\n    const currentRouteParams = _.extend(_.clone(activatedRoute.snapshot.params), params);\r\n    if (this.configuration.keepQueryParams) {\r\n      return this.router.navigate(\r\n        this.routeConfiguration.buildNavigation(currentRouteParams),\r\n        {queryParams: activatedRoute.snapshot.queryParams}\r\n      );\r\n    } else {\r\n      return this.router.navigate(this.routeConfiguration.buildNavigation(currentRouteParams))\r\n    }\r\n  }\r\n\r\n  private static generateDefaultConfiguration(): IEntityResolverConfiguration {\r\n    return {\r\n      keepQueryParams: false\r\n    };\r\n  }\r\n\r\n}\r\n","import {ItemStore} from \"./item-store\";\r\nimport {Util} from \"./util\";\r\nimport * as _ from 'underscore';\r\n\r\nexport class TimestampItemStore<TModel> extends ItemStore<TModel> {\r\n\r\n  public static readonly ITEM_TIMESTAMP_KEY = '__timestamp__';\r\n\r\n  private wasFilled: boolean;\r\n\r\n  constructor(\r\n    identifier: any,\r\n    private itemLifetimeInSeconds: number,\r\n    transform?: (items: TModel[]) => TModel[]\r\n  ) {\r\n    super(identifier, transform);\r\n    this.wasFilled = false;\r\n  }\r\n\r\n  public updateItems(items: TModel[]): void {\r\n    super.updateItems(items);\r\n    _.each(this.items, (item) => this.trackItem(item));\r\n    this.wasFilled = true;\r\n  }\r\n\r\n  public clear(): void {\r\n    super.clear();\r\n    this.wasFilled = false;\r\n  }\r\n\r\n  public update(item: TModel): void {\r\n    super.update(item);\r\n    this.trackItem(item);\r\n  }\r\n\r\n  public push(item: TModel): void {\r\n    super.push(item);\r\n    this.trackItem(item);\r\n  }\r\n\r\n  public isItemValid(identifier: any): boolean {\r\n    let itemInStore = null;\r\n    for(const item of this.items) {\r\n      if (item[this.identifier] === identifier) {\r\n        itemInStore = item;\r\n        break;\r\n      }\r\n    }\r\n    if (!Util.isDefined(itemInStore)) {\r\n      return false;\r\n    }\r\n    const currentTimeStamp = Util.getCurrentUnixTimestamp();\r\n    return (currentTimeStamp - this.itemLifetimeInSeconds) < itemInStore[TimestampItemStore.ITEM_TIMESTAMP_KEY];\r\n  }\r\n\r\n  public isStoreValid(): boolean {\r\n    if (!this.wasFilled) {\r\n      return false;\r\n    }\r\n    if (_.isEmpty(this.items)) {\r\n      return false;\r\n    }\r\n    return _.all(this.items, (item) => this.isItemValid(item[this.identifier]));\r\n  }\r\n\r\n  private trackItem(item: TModel): void {\r\n    item[TimestampItemStore.ITEM_TIMESTAMP_KEY] = Util.getCurrentUnixTimestamp();\r\n  }\r\n\r\n}\r\n"]}