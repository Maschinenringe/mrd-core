{"version":3,"file":"mrd-core.js","sources":["ng://mrd-core/lib/interface/http/i-readonly-restservice.ts","ng://mrd-core/lib/interface/http/i-readonly-stored-rest-service.ts","ng://mrd-core/lib/interface/util/i-subscription-handler.ts","ng://mrd-core/lib/impl/util/subscription-manager.ts","ng://mrd-core/lib/impl/util/util.ts","ng://mrd-core/lib/impl/util/item-store.ts","ng://mrd-core/lib/impl/http/rest-handler.ts","ng://mrd-core/lib/impl/util/subscription-handler.ts","ng://mrd-core/lib/abstract/ui/base-object.ts","ng://mrd-core/lib/impl/validation/validator-required.ts","ng://mrd-core/lib/abstract/validation/accessable-form-control.ts","ng://mrd-core/lib/abstract/validation/accessable-form-group.ts","ng://mrd-core/lib/abstract/validation/accessable-form-array.ts","ng://mrd-core/lib/impl/http/readonly-rest-service-observer.ts","ng://mrd-core/lib/impl/http/readony-rest-handler.ts","ng://mrd-core/lib/abstract/http/abstract-readonly-restservice.ts","ng://mrd-core/lib/impl/http/rest-service-observer.ts","ng://mrd-core/lib/abstract/http/abstract-rest-service.ts","ng://mrd-core/lib/impl/validation/validator-custom.ts","ng://mrd-core/lib/enum/regex.ts","ng://mrd-core/lib/impl/validation/validator-email.ts","ng://mrd-core/lib/impl/validation/validator-fixed-value.ts","ng://mrd-core/lib/impl/validation/validator-float.ts","ng://mrd-core/lib/impl/validation/validator-integer.ts","ng://mrd-core/lib/impl/validation/validator-postal-code.ts","ng://mrd-core/lib/impl/util/type-converter.ts","ng://mrd-core/lib/impl/validation/accessable-control-factory.ts","ng://mrd-core/lib/interface/validation/i-validator.ts","ng://mrd-core/lib/enum/http-status-codes.ts","ng://mrd-core/lib/abstract/ui/base-push-strategy-object.ts","ng://mrd-core/lib/impl/util/observable-value.ts","ng://mrd-core/lib/abstract/http/abstract-stored-readonly-restservice.ts","ng://mrd-core/lib/abstract/http/abstract-stored-restservice.ts","ng://mrd-core/lib/interface/util/i-deactivate.ts","ng://mrd-core/lib/impl/util/deactivation-handler.ts","ng://mrd-core/lib/abstract/routing/abstract-activation-queued-guard.ts","ng://mrd-core/lib/abstract/routing/abstract-activation-guard.ts","ng://mrd-core/lib/abstract/routing/abstract-route-configuration.ts","ng://mrd-core/lib/interface/routing/i-routing-configuration.ts","ng://mrd-core/lib/abstract/routing/abstract-resolver.ts","ng://mrd-core/lib/interface/ui/i-entity-selector.ts","ng://mrd-core/lib/abstract/ui/base-root-component.ts","ng://mrd-core/lib/abstract/http/abstract-readonly-cached-restservice.ts","ng://mrd-core/lib/abstract/http/abstract-cached-restservice.ts","ng://mrd-core/lib/abstract/util/abstract-entity-resolver.ts","ng://mrd-core/lib/impl/util/timestamp-item-store.ts"],"sourcesContent":["import {Observable} from 'rxjs';\r\n\r\n/** Basis Interface um einen Restservice mit Lesezugriff zu implementieren. */\r\nexport interface IReadonlyRestService<T> {\r\n  /** Der Key Parameter um zu testen ob ein Object neu angelegt, oder geladen wurde. Z.B.: ID */\r\n  identifier: string;\r\n  /** Holt alle EntitÃ¤ten ab */\r\n  all(searchParams?: object, httpOptions?: object): Observable<T[]>;\r\n  /** Holt eine EntitÃ¤t anhand einer ID ab */\r\n  show(id: any, getParams?: object, httpOptions?: object): Observable<T>;\r\n}\r\n","import {IReadonlyRestService} from \"./i-readonly-restservice\";\r\nimport {ItemStore} from \"../../impl/util/item-store\";\r\n\r\n/** Basis Interface um einen Restservice mit Lesezugriff zu implementieren. */\r\nexport interface IReadonlyStoreRestService<T> extends IReadonlyRestService<T> {\r\n  store: ItemStore<T>;\r\n}\r\n","export interface ISubscriptionHandler {\r\n  onSuccess?: (...args: any[]) => any;\r\n  onError?: (...args: any[]) => any;\r\n  onFinished?: (...args: any[]) => any;\r\n}\r\n","import {finalize, take} from 'rxjs/operators';\r\nimport {Observable, Subscription} from \"rxjs\";\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\nimport * as _ from 'underscore';\r\n\r\n/** Diese Klasse kÃ¼mmert sich um die Speicherverwaltung von Subscriptions.\r\n Diese erzeugen Memory-Leaks, wenn sie nicht sauber gelÃ¶scht werden. */\r\nexport abstract class SubscriptionManager {\r\n  // Alle benannten Subscriptions werden hier gecached\r\n  private static subscriptions: object = {};\r\n  /** Subscription mit einem Namen. Diese Funktion ist nÃ¼tzlich,\r\n   falls eine Subscription Ã¶fters aufgerufen wird und die vorherige, falls\r\n   noch nicht abgeschlossen, beendet werden soll (HTTP Aufrufe). */\r\n  public static subscribeAs<T>(\r\n    name: string,\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    const sub = observable\r\n      .pipe(\r\n        take(1),\r\n        finalize((...args: any[]) => {\r\n          if (_.isFunction(handler.onFinished)) {\r\n            handler.onFinished(...args);\r\n            if (sub) {\r\n              this.deleteSubscription(name);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onSuccess)) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onError)) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n    this.pushSubscription(name, sub);\r\n    return sub;\r\n  }\r\n  /** Funktion fÃ¼r einmalige Subscriptions (z.B.: Initialisierungsaufrufe) */\r\n  public static subscribe<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    const sub = observable\r\n      .pipe(\r\n        take(1),\r\n        finalize((...args: any[]) => {\r\n          if (_.isFunction(handler.onFinished)) {\r\n            handler.onFinished(...args);\r\n            if (sub) {\r\n              this.deleteSubscription(name);\r\n            }\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onSuccess)) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (_.isFunction(handler.onError)) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n    return sub;\r\n  }\r\n\r\n  private static pushSubscription(name: string, subscription: Subscription): void {\r\n    this.deleteSubscription(name);\r\n    SubscriptionManager.subscriptions[name] = subscription;\r\n  }\r\n\r\n  private static deleteSubscription(name: string): void {\r\n    const sub = SubscriptionManager.subscriptions[name];\r\n    if (sub) {\r\n      sub.unsubscribe();\r\n      delete SubscriptionManager.subscriptions[name];\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import * as _ from 'underscore';\r\n\r\nexport class Util {\r\n\r\n  public static isDefined(obj: any): boolean {\r\n    return obj !== null && obj !== undefined;\r\n  }\r\n\r\n  public static armUrlWithSearchParams(url: string, queryParams: object): string {\r\n    if (!queryParams || _.isEmpty(queryParams)) {\r\n      return url;\r\n    }\r\n    _.each(queryParams, (value: any, key: string) => {\r\n      const querySelector = url.indexOf('?') === -1 ? '?' : '&';\r\n      url = `${url}${querySelector}${key}=${value}`;\r\n    });\r\n    return url;\r\n  }\r\n\r\n  public static createEntityUrl(url: string, id: any): string {\r\n    return `${url}/${id}`;\r\n  }\r\n\r\n  public static getBrowser(): string {\r\n    const ua = navigator.userAgent;\r\n    let tem;\r\n    let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\r\n    if (/trident/i.test(M[1])) {\r\n      tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\r\n      return 'IE ' + (tem[1] || '');\r\n    }\r\n    if (M[1] === 'Chrome') {\r\n      tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\r\n      if (tem != null) {\r\n        return tem.slice(1).join(' ').replace('OPR', 'Opera');\r\n      }\r\n    }\r\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\r\n    tem = ua.match(/version\\/(\\d+)/i);\r\n    if (tem != null) {\r\n      M.splice(1, 1, tem[1]);\r\n    }\r\n    return M.join(' ');\r\n  }\r\n\r\n  public static getCurrentUnixTimestamp(): number {\r\n    return Math.round((new Date()).getTime() / 1000);\r\n  }\r\n\r\n  public static guid(): string {\r\n    const s4 = () => {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    };\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  private static transformUmlaute(value: string): string {\r\n    return value\r\n      .replace('Ã', 'Ae')\r\n      .replace('Ã¤', 'ae')\r\n      .replace('Ã', 'Oe')\r\n      .replace('Ã¶', 'oe')\r\n      .replace('Ã', 'Ue')\r\n      .replace('Ã¼', 'ue');\r\n  }\r\n\r\n  public static sortAlpabetically<TListType>(list: TListType[], attribute: string): TListType[] {\r\n    const resultList = _.sortBy(list, (item: TListType) => this.transformUmlaute(item[attribute]).toUpperCase());\r\n    return resultList;\r\n  }\r\n\r\n}\r\n","import {Subject} from 'rxjs';\r\nimport {Util} from \"./util\";\r\n\r\n\r\nexport class ItemStore<T> {\r\n\r\n  public readonly onChanged: Subject<T[]> = new Subject();\r\n\r\n  protected items$: object = {};\r\n  protected transformedItems$: T[] = [];\r\n\r\n  constructor(\r\n    public readonly identifier: any,\r\n    public readonly transform?: (items: T[]) => T[]\r\n  ) {}\r\n\r\n  public updateItems(items: T[]): void {\r\n    this.clear();\r\n    items = items || [];\r\n    for (const item of items) {\r\n      this.items$[item[this.identifier]] = item;\r\n    }\r\n    this.internalTransform$();\r\n  }\r\n\r\n  public clear(): void {\r\n    this.items$ = {};\r\n    this.transformedItems$ = [];\r\n  }\r\n\r\n  public remove(item: T): void {\r\n    if (item) {\r\n      delete this.items$[item[this.identifier]];\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public removeByIdentifier(identifier: any): void {\r\n    if (Util.isDefined(identifier)) {\r\n      delete this.items$[identifier];\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public update(item: T): void {\r\n    if (item) {\r\n      this.items$[item[this.identifier]] = item;\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  public push(item: T): void {\r\n    if (item) {\r\n      this.items$[item[this.identifier]] = item;\r\n      this.internalTransform$();\r\n    }\r\n  }\r\n\r\n  protected internalTransform$(): void {\r\n    this.transformedItems$ = Object.values(this.items$);\r\n    if (this.transform) {\r\n      this.transformedItems$ = this.transform(this.transformedItems$);\r\n    }\r\n    this.onChanged.next(this.transformedItems$);\r\n  }\r\n\r\n  get items(): T[] {\r\n    return this.transformedItems$;\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {finalize, tap} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"./rest-service-observer\";\r\nimport {Util} from \"../util/util\";\r\n\r\n\r\nexport class RestHandler<T> implements IWriteableRestService<T> {\r\n\r\n  constructor(\r\n    public readonly http: HttpClient,\r\n    public readonly url: string,\r\n    public readonly observer: RestServiceObserver<T>,\r\n    public readonly identifier: string\r\n  ) {}\r\n\r\n  public create(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isCreatingItem = true;\r\n    return this.http.post<T>(\r\n        Util.armUrlWithSearchParams(this.url, getParams), model, httpOptions)\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemCreated.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isCreatingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    this.observer.isDestoyingItem = true;\r\n    return this.http.delete<void>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, id), getParams\r\n      ),\r\n      httpOptions\r\n    ).pipe(\r\n      tap(() => {\r\n        this.observer.onItemDestroyed.next(id);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isDestoyingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  public partialUpdate(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isPartiallyUpdatingItem = true;\r\n    return this.http.patch<T>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, model[this.identifier]), getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemPartialUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isPartiallyUpdatingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  public save(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isSavingItem = true;\r\n    let observable: Observable<T>;\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      observable = this.update(model, getParams, httpOptions);\r\n    } else {\r\n      observable = this.create(model, getParams, httpOptions);\r\n    }\r\n    return observable\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemSaved.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isSavingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public set(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isSavingItem = true;\r\n    let observable: Observable<T>;\r\n    this.observer.isUpdatingItem = true;\r\n    observable = this.http.put<T>(\r\n      Util.armUrlWithSearchParams(\r\n        this.url, getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isUpdatingItem = false;\r\n      })\r\n    );\r\n\r\n    return observable\r\n      .pipe(\r\n        tap((result: T) => {\r\n          this.observer.onItemSaved.next(result);\r\n        }),\r\n        finalize(() => {\r\n          this.observer.isSavingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public update(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isUpdatingItem = true;\r\n    return this.http.put<T>(\r\n      Util.armUrlWithSearchParams(\r\n        Util.createEntityUrl(this.url, model[this.identifier]), getParams\r\n      ),\r\n      model,\r\n      httpOptions\r\n    ).pipe(\r\n      tap((result: T) => {\r\n        this.observer.onItemUpdated.next(result);\r\n      }),\r\n      finalize(() => {\r\n        this.observer.isUpdatingItem = false;\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","/** Standart Implementierung zur Nutzung von Subscriptions\r\n *  Generell hat es wenig Sinn diese Klasse zu erzwingen,\r\n *  allerdings ergibt sich eine bessere Lesbarkeit des Codes daraus.\r\n */\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\n\r\nexport class SubscriptionHandler implements ISubscriptionHandler {\r\n  constructor(\r\n    public onSuccess?: (...args: any[]) => any,\r\n    public onError?: (...args: any[]) => any,\r\n    public onFinished?: (...args: any[]) => any\r\n  ) {}\r\n}\r\n\r\n","import {OnDestroy} from '@angular/core';\r\nimport {finalize, takeUntil} from 'rxjs/operators';\r\nimport {Observable, Subject, Subscription} from \"rxjs\";\r\nimport {ISubscriptionHandler} from \"../../interface/util/i-subscription-handler\";\r\nimport {SubscriptionManager} from \"../../impl/util/subscription-manager\";\r\n\r\n\r\n/** Abstracte Klasse von der alle Komponenten und Services erben. Sie stellt eine Speicherverwaltung fÃ¼r Observables bereit. */\r\nexport abstract class BaseObject implements OnDestroy {\r\n  /** Wird benutzt um Observables bei der ZerstÃ¶rung einer Komponente auszulÃ¶sen.\r\n   * Wird im ngOnDestroy ausgelÃ¶st.\r\n   */\r\n  protected $unsubscribe: Subject<void> = new Subject<void>();\r\n  /** Funktion zur dauerhaften Ãberwachung von Subscriptions. Speicher wird bei ZerstÃ¶rung der Komponente freigegeben. */\r\n  protected watch<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    return observable\r\n      .pipe(\r\n        takeUntil(this.$unsubscribe),\r\n        finalize( (...args: any[]) => {\r\n          if (handler.onFinished) {\r\n            handler.onFinished(...args);\r\n          }\r\n        })\r\n      )\r\n      .subscribe(\r\n        (...args: any[]) => {\r\n          if (handler.onSuccess) {\r\n            handler.onSuccess(...args);\r\n          }\r\n        },\r\n        (...args: any[]) => {\r\n          if (handler.onError) {\r\n            handler.onError(...args);\r\n          }\r\n        }\r\n      );\r\n  }\r\n  /** Proxy fÃ¼r SubscriptionManager.subscribe */\r\n  protected subscribe<T>(\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler,\r\n  ): Subscription {\r\n    return SubscriptionManager.subscribe<T>(observable, handler);\r\n  }\r\n  /** Proxy fÃ¼r SubscriptionManager.subscribeAs */\r\n  protected subscribeAs<T>(\r\n    name: string,\r\n    observable: Observable<T>,\r\n    handler: ISubscriptionHandler\r\n  ): Subscription {\r\n    return SubscriptionManager.subscribeAs<T>(name, observable, handler);\r\n  }\r\n  /** Alle Observables die mit watch Ã¼berwacht werden, werden hier ausgelÃ¶st. Angular kÃ¼mmert sich im den Aufruf.\r\n   *  Falls das Kind auch das Interface 'OnDestroy' implementiert, nicht vergessen super.ngOnDestroy() auszurufen, oder der Speicher\r\n   *  wird nicht freigegeben.\r\n   */\r\n  public ngOnDestroy(): void {\r\n    this.$unsubscribe.next();\r\n    this.$unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport * as moment from 'moment';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport class ValidatorRequired implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Pflichtfeld';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl): object | null => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n\r\n  public validate(): any {\r\n    if (_.isDate(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (moment.isMoment(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (_.isNumber(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (_.isString(this.value)) {\r\n      if (this.value.length > 0) {\r\n        this.hasError = false;\r\n        return null;\r\n      } else {\r\n        this.hasError = true;\r\n        return {required: true};\r\n      }\r\n    }\r\n    if (_.isBoolean(this.value)) {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n    if (!this.value || _.isEmpty(this.value)) {\r\n      this.hasError = true;\r\n      return {required: true};\r\n    } else {\r\n      this.hasError = false;\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {FormControl} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport {ValidatorRequired} from '../../impl/validation/validator-required';\r\nimport {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\r\n\r\n\r\nexport class AccessableFormControl<TType = any>\r\n  implements IAccessableFormControl<AccessableFormControl<TType>, TType> {\r\n\r\n  public control: FormControl;\r\n  public showAs: (value: any) => any;\r\n  public convertTo: (value: any) => any;\r\n  private required$: boolean;\r\n  private validators$: IValidator[];\r\n\r\n  public initialize(\r\n    formState?: any,\r\n    validators?: IValidator[]\r\n  ) {\r\n    this.control = new FormControl(formState, null, null);\r\n    this.validateWith(validators);\r\n    this.setValue(formState);\r\n  }\r\n\r\n  public validateWith(validators: IValidator[] = []): AccessableFormControl {\r\n    this.validators$ = validators;\r\n    this.control.setValidators(_.map(validators, (v: IValidator) => {\r\n      return v.validator();\r\n    }));\r\n    this.required$ = false;\r\n    _.each(this.validators$, (v: IValidator) => {\r\n      if (v instanceof ValidatorRequired) {\r\n        this.required$ = true;\r\n      }\r\n    });\r\n    this.control.updateValueAndValidity();\r\n    return this;\r\n  }\r\n\r\n  public setValue(value: any): AccessableFormControl {\r\n    if (this.showAs) {\r\n      this.control.setValue(this.showAs(value));\r\n    } else {\r\n      this.control.setValue(value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public reset(value: TType): AccessableFormControl {\r\n    if (this.showAs) {\r\n      this.control.reset(this.showAs(value));\r\n    } else {\r\n      this.control.reset(value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormControl {\r\n    this.control.markAsDirty();\r\n    this.control.markAsTouched();\r\n    this.control.updateValueAndValidity();\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormControl {\r\n    _.each(this.validators$, (validator: IValidator) => validator.hasError = false );\r\n    this.control.updateValueAndValidity();\r\n    this.control.markAsPristine();\r\n    this.control.markAsUntouched();\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormControl {\r\n    this.control.markAsDirty();\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormControl {\r\n    this.control.markAsTouched();\r\n    return this;\r\n  }\r\n\r\n  public disable(): AccessableFormControl {\r\n    this.control.disable();\r\n    return this;\r\n  }\r\n\r\n  public enable(): AccessableFormControl {\r\n    this.control.enable();\r\n    return this;\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.control.disabled;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    if (this.control.disabled) {\r\n      return true;\r\n    }\r\n    return !this.error;\r\n  }\r\n\r\n  get validators(): IValidator[] {\r\n    return this.validators$;\r\n  }\r\n\r\n  get error(): IValidator {\r\n    return _.find(this.validators$, (v: IValidator) => v.hasError );\r\n  }\r\n\r\n  get value(): any {\r\n    if (this.convertTo) {\r\n      return this.convertTo(this.control.value);\r\n    } else {\r\n      return this.control.value;\r\n    }\r\n  }\r\n\r\n  set value(value: any) {\r\n    this.setValue(value);\r\n  }\r\n\r\n  get required(): boolean {\r\n    return this.required$;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n}\r\n","import {FormGroup} from '@angular/forms';\r\nimport * as _ from 'underscore';\r\nimport {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\r\nimport {Util} from '../../impl/util/util';\r\n\r\nexport abstract class AccessableFormGroup<TFields, TModel extends object>\r\n  implements IAccessableFormControl<AccessableFormGroup<TFields, TModel>, TModel> {\r\n\r\n  public control: FormGroup;\r\n  private fields$: TFields;\r\n\r\n  public initialize(\r\n    fields: TFields\r\n  ): void {\r\n    this.control = new FormGroup(\r\n      _.mapObject(fields, (field) => {\r\n        return field.control;\r\n      })\r\n    );\r\n    this.fields$ = fields;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsUsed() );\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsUnused() );\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsDirty() );\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormGroup<TFields, TModel> {\r\n    _.each(this.fields$, (field) => field.markAsTouched() );\r\n    return this;\r\n  }\r\n\r\n  public reset(model: TModel): AccessableFormGroup<TFields, TModel> {\r\n    if (!Util.isDefined(model)) {\r\n      model = {} as TModel;\r\n    }\r\n    _.each(this.fields$, (field: IAccessableFormControl<any, any>, key: string) => field.reset(model[key]));\r\n    return this;\r\n  }\r\n\r\n  get fields(): TFields {\r\n    return this.fields$;\r\n  }\r\n\r\n\r\n  get value(): TModel {\r\n    const ret = {} as TModel;\r\n    _.each(this.fields$, (field: IAccessableFormControl<any, any>, key: string) => ret[key] = field.value);\r\n    return ret;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.control.valid;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  disable(): AccessableFormGroup<TFields, TModel> {\r\n    return undefined;\r\n  }\r\n\r\n  enable(): AccessableFormGroup<TFields, TModel> {\r\n    return undefined;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import {IAccessableFormControl} from '../../interface/validation/i-accessable-form-control';\r\nimport {FormArray} from '@angular/forms';\r\nimport {Type} from '@angular/core';\r\nimport * as _ from 'underscore';\r\n\r\nexport abstract class AccessableFormArray<TModel>\r\n  implements IAccessableFormControl<AccessableFormArray<TModel>, TModel[]> {\r\n\r\n  public control: FormArray;\r\n  public type: Type<IAccessableFormControl<any, any>>;\r\n\r\n  private entries$: IAccessableFormControl<any, TModel>[];\r\n\r\n  public initialize(type: Type<IAccessableFormControl<any, any>>): void {\r\n    this.control = new FormArray([]);\r\n    this.type = type;\r\n    this.entries$ = [];\r\n  }\r\n\r\n  public push(entry: TModel): IAccessableFormControl<any, TModel> {\r\n    const item = this.generateFormEntry(entry);\r\n    this.control.push(item.control);\r\n    this.entries$.push(item);\r\n    return item;\r\n  }\r\n\r\n  public removeAt(index: number): void {\r\n    this.control.removeAt(index);\r\n    this.entries$ = _.reject(this.entries$, (e, round: number) => {\r\n      return round === index;\r\n    });\r\n    let markAsUsed = false;\r\n    for (const entry of this.entries$) {\r\n      markAsUsed = markAsUsed || entry.dirty;\r\n    }\r\n    markAsUsed ? this.markAsUsed() : this.markAsUnused();\r\n  }\r\n\r\n  public generateFormEntry(value: any): IAccessableFormControl<any, TModel> {\r\n    const validation = new this.type();\r\n    validation.reset(value);\r\n    return validation;\r\n  }\r\n\r\n  get dirty(): boolean {\r\n    return this.control.dirty;\r\n  }\r\n\r\n  get touched(): boolean {\r\n    return this.control.touched;\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.control.valid;\r\n  }\r\n\r\n  get value(): TModel[] {\r\n    const ret: TModel[] = [];\r\n    for (const entry of this.entries$) {\r\n      ret.push(entry.value);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  public disable(): AccessableFormArray<TModel> {\r\n    this.control.disable();\r\n    return this;\r\n  }\r\n\r\n  public enable(): AccessableFormArray<TModel> {\r\n    this.control.enable();\r\n    for (const entry of this.entries$) {\r\n      entry.enable();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsDirty(): AccessableFormArray<TModel> {\r\n    this.control.markAsDirty();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsDirty();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsTouched(): AccessableFormArray<TModel> {\r\n    this.control.markAsTouched();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsTouched();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUnused(): AccessableFormArray<TModel> {\r\n    this.control.markAsUntouched();\r\n    this.control.markAsPristine();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsUnused();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public markAsUsed(): AccessableFormArray<TModel> {\r\n    this.control.markAsTouched();\r\n    this.control.markAsDirty();\r\n    for (const entry of this.entries$) {\r\n      entry.markAsUsed();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public reset(models: TModel[]): AccessableFormArray<TModel> {\r\n    this.entries$ = [];\r\n    this.control.reset([]);\r\n    for (const model of models) {\r\n      this.push(model);\r\n    }\r\n    return this;\r\n  }\r\n\r\n}\r\n","import {EventEmitter} from '@angular/core';\r\nimport {Subject} from \"rxjs\";\r\n\r\n\r\nexport class ReadonlyRestServiceObserver<T> {\r\n\r\n  public readonly onItemFetched: Subject<T> = new Subject();\r\n  public readonly onItemsFetched: Subject<T[]> = new Subject();\r\n\r\n  private isFetchingItem$: boolean;\r\n  private isFetchingItems$: boolean;\r\n\r\n  constructor() {\r\n    this.isFetchingItem$ = false;\r\n    this.isFetchingItems$ = false;\r\n  }\r\n\r\n  public isActivate(): boolean {\r\n    return !this.isFetchingItem && !this.isFetchingItems;\r\n  }\r\n\r\n  set isFetchingItems(fetching: boolean) {\r\n    this.isFetchingItems$ = fetching;\r\n  }\r\n\r\n  get isFetchingItems(): boolean {\r\n    return this.isFetchingItems$;\r\n  }\r\n\r\n  set isFetchingItem(fetching: boolean) {\r\n    this.isFetchingItem$ = fetching;\r\n  }\r\n\r\n  get isFetchingItem(): boolean {\r\n    return this.isFetchingItem$;\r\n  }\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {finalize, tap} from 'rxjs/operators';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IReadonlyRestService} from \"../../interface/http/i-readonly-restservice\";\r\nimport {ReadonlyRestServiceObserver} from \"./readonly-rest-service-observer\";\r\nimport {Util} from \"../util/util\";\r\n\r\n\r\nexport class ReadonlyRestHandler<T> implements IReadonlyRestService<T> {\r\n\r\n  identifier: string;\r\n\r\n  constructor(\r\n    public readonly http: HttpClient,\r\n    public readonly url: string,\r\n    public readonly observer: ReadonlyRestServiceObserver<T>\r\n  ) {}\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<T[]> {\r\n    this.observer.isFetchingItems = true;\r\n    return this.http.get<T[]>(Util.armUrlWithSearchParams(this.url, searchParams), httpOptions)\r\n      .pipe(\r\n        tap( (result: T[]): void => {\r\n          this.observer.onItemsFetched.next(result);\r\n        }),\r\n        // catchError( _.bind(this.serviceErrorHandler.catchError, this.serviceErrorHandler) as (error: any) => Observable<any> ),\r\n        finalize( (): void => {\r\n          this.observer.isFetchingItems = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<T> {\r\n    this.observer.isFetchingItem = true;\r\n    return this.http.get<T>(\r\n        Util.armUrlWithSearchParams(Util.createEntityUrl(this.url, id), getParams), httpOptions)\r\n      .pipe(\r\n        tap( (result: T): void => {\r\n          this.observer.onItemFetched.next(result);\r\n        }),\r\n        finalize( (): void => {\r\n          this.observer.isFetchingItem = false;\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {BaseObject} from '../ui/base-object';\r\nimport {IReadonlyRestService} from '../../interface/http/i-readonly-restservice';\r\nimport {ReadonlyRestServiceObserver} from '../../impl/http/readonly-rest-service-observer';\r\nimport {ReadonlyRestHandler} from '../../impl/http/readony-rest-handler';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractReadonlyRestservice<T> extends BaseObject implements IReadonlyRestService<T> {\r\n\r\n  identifier: string;\r\n  public abstract url: string;\r\n  public readonly observer: ReadonlyRestServiceObserver<T>;\r\n  protected abstract http: HttpClient;\r\n\r\n  protected constructor(\r\n    restServiceObserver?: ReadonlyRestServiceObserver<T>\r\n  ) {\r\n    super();\r\n    this.observer = Util.isDefined(restServiceObserver) ? restServiceObserver :\r\n      new ReadonlyRestServiceObserver<T>();\r\n  }\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<T[]> {\r\n    return new ReadonlyRestHandler<T>(this.http, this.url, this.observer).all(searchParams, httpOptions);\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new ReadonlyRestHandler<T>(this.http, this.url, this.observer).show(id, getParams, httpOptions);\r\n  }\r\n\r\n}\r\n","import {ReadonlyRestServiceObserver} from './readonly-rest-service-observer';\r\nimport {Subject} from \"rxjs\";\r\n\r\n\r\nexport class RestServiceObserver<T> extends ReadonlyRestServiceObserver<T> {\r\n\r\n  public readonly onItemCreated: Subject<T> = new Subject();\r\n  public readonly onItemUpdated: Subject<T> = new Subject();\r\n  public readonly onItemDestroyed: Subject<T> = new Subject();\r\n  public readonly onItemPartialUpdated: Subject<T> = new Subject();\r\n  public readonly onItemSaved: Subject<T> = new Subject();\r\n\r\n  private isCreatingItem$: boolean;\r\n  private isUpdatingItem$: boolean;\r\n  private isDestoyingItem$: boolean;\r\n  private isPartiallyUpdatingItem$: boolean;\r\n  private isSavingItem$: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.isCreatingItem$ = false;\r\n    this.isUpdatingItem$ = false;\r\n    this.isDestoyingItem$ = false;\r\n    this.isPartiallyUpdatingItem$ = false;\r\n  }\r\n\r\n  public isActivate(): boolean {\r\n    return super.isActivate() &&\r\n      !this.isCreatingItem$ &&\r\n      !this.isUpdatingItem$ &&\r\n      !this.isDestoyingItem$ &&\r\n      !this.isPartiallyUpdatingItem$ &&\r\n      !this.isSavingItem$;\r\n  }\r\n\r\n  set isCreatingItem(isCreating: boolean) {\r\n    this.isCreatingItem$ = isCreating;\r\n  }\r\n\r\n  get isCreatingItem(): boolean {\r\n    return this.isCreatingItem$;\r\n  }\r\n\r\n  set isUpdatingItem(isUpdating: boolean) {\r\n    this.isUpdatingItem$ = isUpdating;\r\n  }\r\n\r\n  get isUpdatingItem(): boolean {\r\n    return this.isUpdatingItem$;\r\n  }\r\n\r\n  set isDestoyingItem(isDestroying: boolean) {\r\n    this.isDestoyingItem$ = isDestroying;\r\n  }\r\n\r\n  get isDestoyingItem(): boolean {\r\n    return this.isDestoyingItem$;\r\n  }\r\n\r\n  set isPartiallyUpdatingItem(isUpdating: boolean) {\r\n    this.isPartiallyUpdatingItem$ = isUpdating;\r\n  }\r\n\r\n  get isPartiallyUpdatingItem(): boolean {\r\n    return this.isPartiallyUpdatingItem$;\r\n  }\r\n\r\n  set isSavingItem(isSaving: boolean) {\r\n    this.isSavingItem$ = isSaving;\r\n  }\r\n\r\n  get isSavingItem(): boolean {\r\n    return this.isSavingItem$;\r\n  }\r\n\r\n\r\n}\r\n","import {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AbstractReadonlyRestservice} from './abstract-readonly-restservice';\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\n\r\nexport abstract class AbstractRestservice<T> extends AbstractReadonlyRestservice<T> implements IWriteableRestService<T> {\r\n\r\n  public abstract identifier: string;\r\n  public readonly observer: RestServiceObserver<any>;\r\n  protected abstract http: HttpClient;\r\n\r\n  protected constructor() {\r\n    super(new RestServiceObserver<T>());\r\n  }\r\n\r\n  public create(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).create(model, getParams, httpOptions);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).destroy(id, getParams, httpOptions);\r\n  }\r\n\r\n  public partialUpdate(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions);\r\n  }\r\n\r\n  public save(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).save(model, getParams, httpOptions);\r\n  }\r\n\r\n  public update(model: T, getParams?: object, httpOptions?: object): Observable<T> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier).update(model, getParams, httpOptions);\r\n  }\r\n\r\n}\r\n","import {ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport abstract class ValidatorCustom implements IValidator {\r\n  public abstract error: string;\r\n  public abstract hasError = false;\r\n  private value: any;\r\n\r\n  protected constructor() {\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return null;\r\n  }\r\n\r\n  public validate(): any {\r\n    return null;\r\n  }\r\n\r\n}\r\n","/** Hier werden alle von der Applikation genutzten REGEX gespeichert. */\r\nexport const REGEX = {\r\n  /** Regex fÃ¼r eine Zahl. Jede Zahl sollte damit erkannt werden */\r\n  NUMBER: /^-?[0-9]+([,.][0-9]+)?$/,\r\n  /** Die Representation einer (Gleitkomma)Zahl, die der Anwender eingeben darf */\r\n  INPUT_NUMBER: /^[0-9]+(,[0-9]+)?$/,\r\n  INTEGER: /^[0-9]+$/,\r\n  SIGNED_INTEGER: /^-?[0-9]+$/,\r\n  /** Offizieller RFC 5322 Standart regex */\r\n  EMAIL: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n  POSTAL_CODE: /^[0-9]{5}$/,\r\n  SPECIAL_CHARS_REGEX: /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\r\n  DATE: /^(\\d{1,2})[-\\/](\\d{1,2})[-\\/](\\d{4})$/\r\n};\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport class ValidatorEmail implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine gÃ¼ltige E-Mail ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n  public validate(): any {\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.EMAIL.test(this.value.toString())) {\r\n      this.hasError = false;\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidEmail: true};\r\n    }\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\n\r\n\r\nexport class ValidatorFixedValue implements IValidator {\r\n\r\n  public hasError: boolean;\r\n  private value$: any;\r\n  constructor(\r\n    public comparator: any,\r\n    public error: string = null\r\n  ) {}\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (this.comparator === this.value$) {\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {validatorFixed: true};\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value$ = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {REGEX} from '../../enum/regex';\r\nimport {Util} from '../util/util';\r\n\r\n\r\nexport class ValidatorFloat implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine valide Zahl ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    private digitsBefore?: number,\r\n    private digitsAfter?: number\r\n  ) {}\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl): object | null => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    this.error = 'Bitte geben Sie eine valide Zahl ein';\r\n    let validAmountDisgitsBefore = false;\r\n    let validAmountDisgitsAfter = false;\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.INPUT_NUMBER.test(this.value.toString())) {\r\n      const numberSplitted = this.value.toString().split(',');\r\n      if (Util.isDefined(this.digitsBefore) && this.digitsAfter === 0 && numberSplitted.length === 2) {\r\n        this.hasError = true;\r\n        this.error = 'Es sind keine Nachkommastellen erlaubt';\r\n        return {invalidFloat: true};\r\n      }\r\n      if (numberSplitted.length !== 2) {\r\n        if (Util.isDefined(this.digitsBefore)) {\r\n          if (this.value.length > this.digitsBefore) {\r\n            this.error = `Bitte runden Sie die Zahl auf ${this.digitsBefore === 1 ? 'eine Stelle' : this.digitsBefore.toString() + ' Stellen'} vor dem Komma`;\r\n            this.hasError = true;\r\n            return {invalidFloat: true};\r\n          }\r\n        }\r\n        this.hasError = false;\r\n        return null;\r\n      }\r\n      if (Util.isDefined(this.digitsBefore) && this.digitsBefore > 0) {\r\n        validAmountDisgitsBefore = numberSplitted[0].length <= this.digitsBefore;\r\n        if (!validAmountDisgitsBefore) {\r\n          this.error = `Bitte runden Sie die Zahl auf ${this.digitsBefore === 1 ? 'eine Stelle' : this.digitsBefore.toString() + ' Stellen'} vor dem Komma`;\r\n        }\r\n      } else {\r\n        validAmountDisgitsBefore = true;\r\n      }\r\n      if (Util.isDefined(this.digitsAfter) && this.digitsAfter > 0) {\r\n        validAmountDisgitsAfter = numberSplitted[1].length <= this.digitsAfter;\r\n        if (!validAmountDisgitsAfter) {\r\n          this.error = `Bitte runden Sie die Zahl auf ${this.digitsAfter === 1 ? ' eine Stelle' : this.digitsAfter.toString() + ' Stellen'} nach dem Komma`;\r\n        }\r\n      } else {\r\n        validAmountDisgitsAfter = true;\r\n      }\r\n      this.hasError = !(validAmountDisgitsBefore && validAmountDisgitsAfter);\r\n      if (this.hasError) {\r\n        return {invalidFloat: true};\r\n      }\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidFloat: true};\r\n    }\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\n\r\n\r\nexport class ValidatorInteger implements IValidator {\r\n\r\n  public error = 'Bitte geben Sie eine ganze Zahl ein';\r\n  public hasError: boolean;\r\n\r\n  private value$: string;\r\n  private regex$: RegExp;\r\n\r\n\r\n  constructor(\r\n    private allowNegativeValues$: boolean = false\r\n  ) {\r\n    if (allowNegativeValues$) {\r\n      this.regex$ = REGEX.SIGNED_INTEGER;\r\n    } else {\r\n      this.regex$ = REGEX.INTEGER;\r\n    }\r\n  }\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (!this.value$) {\r\n      return null;\r\n    }\r\n    if (!this.regex$.test(this.value$)) {\r\n      this.hasError = true;\r\n      return {invalidInteger: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value$ = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n}\r\n","import {FormControl, ValidatorFn} from '@angular/forms';\r\nimport {IValidator} from '../../interface/validation/i-validator';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport class ValidatorPostalCode implements IValidator {\r\n\r\n  public hasError = false;\r\n  public error = 'Bitte geben Sie eine gÃ¼ltige Postleitzahl ein';\r\n  private value: any;\r\n\r\n  constructor(\r\n    error?: string\r\n  ) {\r\n    if (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public validator(): ValidatorFn {\r\n    return (input: FormControl) => {\r\n      this.value = input.value;\r\n      return this.validate();\r\n    };\r\n  }\r\n\r\n  public validate(): any {\r\n    this.hasError = false;\r\n    if (!this.value) {\r\n      return null;\r\n    }\r\n    if (this.value && REGEX.POSTAL_CODE.test(this.value.toString())) {\r\n      this.hasError = false;\r\n      return null;\r\n    } else {\r\n      this.hasError = true;\r\n      return {invalidPostalCode: true};\r\n    }\r\n  }\r\n}\r\n","import moment from 'moment';\r\nimport * as _ from 'underscore';\r\nimport {Util} from './util';\r\nimport {REGEX} from '../../enum/regex';\r\n\r\n\r\nexport abstract class TypeConverter {\r\n\r\n  /** Versucht den Wert in eine Zahl zu konvertieren. */\r\n  public static toNumber(value: string | number): number | string {\r\n    // Falls null oder undefined Ã¼bergeben wurde, brechen wir ab\r\n    if (!value) {\r\n      return value;\r\n    }\r\n    // Falls der Wert bereits eine Zahl ist, sind wir fertig\r\n    if (_.isNumber(value)) {\r\n      return value;\r\n    }\r\n    // Falls der Wert ein String ist, testen wir, ob er aussieht wie eine Zahl und versuchen ihn anschlieÃend zu konvertieren\r\n    if (_.isString(value) && REGEX.NUMBER.test(value as string)) {\r\n      return TypeConverter.convertInputStringToNumber(value as string);\r\n    }\r\n    // Wir haben keine Regel fÃ¼r die Konvertierung gefunden\r\n    return value;\r\n  }\r\n\r\n  /** Nimmt eine Zahl und gibt eine deutsche Representation dieses Wertes zurÃ¼ck */\r\n  public static asGermanFloat(value: number | string, stellen?: number): string | undefined {\r\n    if (value === null || value === undefined) {\r\n      return undefined;\r\n    }\r\n\r\n    if (!_.isUndefined(stellen) && _.isNumber(value)) {\r\n      value = (value as number).toFixed(stellen);\r\n    }\r\n    return value.toString().replace('.', ',');\r\n  }\r\n\r\n  /** Erzeugt ein moment object und setzt dieses auf UTC, falls dies noch nicht geschehen ist. */\r\n  /*public static utcDate(...args: any[]): moment.Moment {\r\n    const isDefined = _.every(args, (arg: any) => Util.isDefined(arg));\r\n    if (!isDefined) {\r\n      return undefined;\r\n    }\r\n    const mObject = moment(...args);\r\n    if (mObject.isUTC()) {\r\n      return mObject;\r\n    } else {\r\n      return mObject.utc(true);\r\n    }\r\n  }*/\r\n  /** Konvertiert ein moment Object in die lokale Zeitzone (Entfernt UTC) */\r\n  /*public static toLocalDate(mObject: moment.Moment): moment.Moment {\r\n    if (!Util.isDefined(mObject)) {\r\n      return undefined;\r\n    }\r\n    const param = moment(mObject);\r\n    if (param.isUTC()) {\r\n      return param.local(true);\r\n    } else {\r\n      return param;\r\n    }\r\n  }*/\r\n\r\n  public static booleanNumberToSting(n: number): string {\r\n    return n === 1 ? 'Ja' : 'Nein';\r\n  }\r\n\r\n  /** Konvertiert ein Moment Object zu einem Date Object */\r\n  /*public static toJSDate(mObject: moment.Moment): Date {\r\n    const mDate = TypeConverter.utcDate(mObject);\r\n    if (!mDate) {\r\n      return undefined;\r\n    }\r\n    return mDate.toDate();\r\n  }*/\r\n\r\n  /** Kovertiert einen String in einen Regex um eine Volltextsuche zu ermÃ¶glichen */\r\n  public static asRegex(text: string): RegExp {\r\n    let builderString = '';\r\n    if (_.isEmpty(text)) {\r\n      return new RegExp(builderString);\r\n    }\r\n    _.each(text.split(''), (char) => {\r\n      builderString = builderString + `${char}`;\r\n    });\r\n    return new RegExp(builderString.replace(REGEX.SPECIAL_CHARS_REGEX, '\\\\$&'), 'i');\r\n  }\r\n\r\n  public static booleanToNumber(bool: boolean): number {\r\n    return bool === true ? 1 : 0;\r\n  }\r\n\r\n  public static numberToBoolean(digit: number): boolean {\r\n    return digit === 1;\r\n  }\r\n\r\n  /** Kovertiert einen String, der dem Regex einer Zahl entspricht, in eine Zahl */\r\n  private static convertInputStringToNumber(value: string): number {\r\n    if (value.includes('.')) {\r\n      return Number.parseFloat(value);\r\n    }\r\n    if (value.includes(',')) {\r\n      return Number.parseFloat(value.replace(',', '.'));\r\n    }\r\n    return Number.parseInt(value);\r\n  }\r\n\r\n}\r\n","import {IValidator} from '../../interface/validation/i-validator';\r\nimport {AccessableFormControl} from '../../abstract/validation/accessable-form-control';\r\nimport {TypeConverter} from '../util/type-converter';\r\nimport {Util} from '../util/util';\r\n\r\nexport abstract class AccessableControlFactory {\r\n\r\n  public static simpleControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = new AccessableFormControl();\r\n    control.initialize(formState, validators);\r\n    return control;\r\n  }\r\n\r\n  public static numberControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = TypeConverter.asGermanFloat;\r\n    control.convertTo = TypeConverter.toNumber;\r\n    control.setValue(formState);\r\n    return control;\r\n  }\r\n\r\n  public static numberBooleanControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = TypeConverter.numberToBoolean;\r\n    control.convertTo = TypeConverter.booleanToNumber;\r\n    control.setValue(formState);\r\n    return control;\r\n  }\r\n\r\n  public static dateControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    return control;\r\n  }\r\n\r\n  /** Schneides alle Whitespaces am Ende und Anfang weg */\r\n  public static trimControl(\r\n    formState: any = null,\r\n    validators: IValidator[]\r\n  ): AccessableFormControl {\r\n    const control = AccessableControlFactory.simpleControl(formState, validators);\r\n    control.showAs = (str: string): string | undefined | null => {\r\n      if (Util.isDefined(str)) {\r\n        return str.trim();\r\n      }\r\n      return str;\r\n    };\r\n    control.convertTo = (str: string): string | undefined | null => {\r\n      if (Util.isDefined(str)) {\r\n        return str.trim();\r\n      }\r\n      return str;\r\n    };\r\n    return control;\r\n  }\r\n}\r\n","import {ValidatorFn} from '@angular/forms';\r\n\r\nexport interface IValidator {\r\n  hasError: boolean;\r\n  error: string;\r\n  validator(): ValidatorFn;\r\n  validate(): any;\r\n}\r\n","\r\nexport enum HttpStatusCodes {\r\n  OK = 200,\r\n  BAD_REQUEST = 400,\r\n  PRECONDITION_FAILED = 412,\r\n  CONFLICT = 409,\r\n  FORBIDDEN = 403,\r\n  NOT_FOUND = 404,\r\n  LOCKED = 423,\r\n  NOT_ACCEPTABLE = 406\r\n}\r\n","import {BaseObject} from './base-object';\r\nimport {ChangeDetectorRef} from '@angular/core';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {SubscriptionHandler} from '../../impl/util/subscription-handler';\r\n\r\n\r\nexport abstract class BasePushStrategyObject extends BaseObject {\r\n\r\n  protected abstract cdr: ChangeDetectorRef;\r\n\r\n  protected markForCheckIf(subject: Observable<any>): Subscription {\r\n    return this.watch(subject, new SubscriptionHandler(this.cdr.markForCheck.bind(this.cdr)));\r\n  }\r\n\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport {Util} from \"./util\";\r\n\r\n/**\r\n * Diese Klasse kann verwendet werden um Werte zu speichern und die automatisch\r\n * Ã¼berwachbar zu machen. Dadurch kÃ¶nnen UI Push Strategien leichter implementiert werden.\r\n */\r\nexport class ObservableValue<TValueType> {\r\n\r\n  private value$: TValueType;\r\n  public readonly changed: Subject<TValueType> = new Subject<TValueType>();\r\n\r\n  public constructor(\r\n    initialValue?: TValueType,\r\n    private readonly equals?: (current: TValueType, next: TValueType) => boolean\r\n  ) {\r\n    this.value$ = initialValue;\r\n    this.equals = Util.isDefined(this.equals) ? this.equals : this.defaultComparator;\r\n  }\r\n\r\n\r\n  public set value(value: TValueType) {\r\n    if (!this.equals(this.value$, value)) {\r\n      this.value$ = value;\r\n      this.changed.next(value);\r\n    }\r\n  }\r\n\r\n  public get value(): TValueType {\r\n    return this.value$;\r\n  }\r\n\r\n\r\n  private defaultComparator(current: TValueType, next: TValueType): boolean {\r\n    return current === next;\r\n  }\r\n\r\n}\r\n","import {BaseObject} from \"../ui/base-object\";\r\nimport {IReadonlyStoreRestService} from \"../../interface/http/i-readonly-stored-rest-service\";\r\nimport {ItemStore} from \"../../impl/util/item-store\";\r\nimport {ReadonlyRestServiceObserver} from \"../../impl/http/readonly-rest-service-observer\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {ReadonlyRestHandler} from \"../../impl/http/readony-rest-handler\";\r\nimport { tap } from 'rxjs/operators';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractStoredReadonlyRestservice<TModel> extends BaseObject\r\n  implements IReadonlyStoreRestService<TModel> {\r\n\r\n  public abstract url: string;\r\n  public abstract store: ItemStore<TModel>;\r\n  public abstract identifier: string;\r\n  protected abstract http: HttpClient;\r\n\r\n  public readonly observer: ReadonlyRestServiceObserver<TModel>;\r\n\r\n  protected constructor(\r\n    restServiceObserver?: ReadonlyRestServiceObserver<TModel>\r\n  ) {\r\n    super();\r\n    this.observer = Util.isDefined(restServiceObserver) ? restServiceObserver :\r\n      new ReadonlyRestServiceObserver<TModel>();\r\n  }\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<TModel[]> {\r\n    return new ReadonlyRestHandler<TModel>(this.http, this.url, this.observer).all(searchParams, httpOptions)\r\n      .pipe(\r\n        tap( (response: TModel[]) => {\r\n          this.store.updateItems(response);\r\n        })\r\n      );\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new ReadonlyRestHandler<TModel>(this.http, this.url, this.observer).show(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (response: TModel) => {\r\n          this.store.update(response);\r\n        })\r\n      );\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractStoredReadonlyRestservice} from \"./abstract-stored-readonly-restservice\";\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport {Util} from \"../../impl/util/util\";\r\n\r\nexport abstract class AbstractStoredRestservice<TModel>\r\n  extends AbstractStoredReadonlyRestservice<TModel>\r\n  implements IWriteableRestService<TModel> {\r\n\r\n  public readonly observer: RestServiceObserver<TModel>;\r\n\r\n  protected constructor() {\r\n    super(new RestServiceObserver<TModel>());\r\n  }\r\n\r\n  public create(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .create(model, getParams, httpOptions)\r\n    return this.modifyCreateCall(request);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .destroy(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( () => {\r\n          this.store.removeByIdentifier(id);\r\n        })\r\n      );\r\n  }\r\n\r\n  public partialUpdate(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (result: TModel) => {\r\n          this.store.update(result);\r\n        })\r\n      );\r\n  }\r\n\r\n  public save(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .save(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public set(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .set(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public update(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .update(model, getParams, httpOptions);\r\n    request = this.modifyUpdateCall(request);\r\n    return request;\r\n  }\r\n\r\n  protected modifyCreateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.push(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected modifyUpdateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.update(result);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\n/** Dieses Interface muss von jeder Komponente implementiert werden, falls beim Routenwechsel geprÃ¼ft werden soll,\r\n *  ob der Anwender speichern muss.\r\n */\r\nexport interface IDeactivate {\r\n  canDeactivate(): Observable<boolean>;\r\n}\r\n","import {IDeactivate} from \"../../interface/util/i-deactivate\";\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport {SubscriptionManager} from \"./subscription-manager\";\r\nimport {SubscriptionHandler} from \"./subscription-handler\";\r\n\r\nexport class DeactivationHandler implements IDeactivate {\r\n\r\n  private deactivators$: { [name: string]: IDeactivate } = {};\r\n\r\n\r\n  public register(name: string, component: IDeactivate): void {\r\n    this.deactivators$[name] = component;\r\n  }\r\n\r\n  public remove(name: string): void {\r\n    delete this.deactivators$[name];\r\n  }\r\n\r\n  public canDeactivate(): Observable<boolean> {\r\n    return new Observable<boolean>(subscriber => {\r\n      this._deactivateComponent(0, subscriber);\r\n    });\r\n  }\r\n\r\n  private _deactivateComponent(index: number, observer: Subscriber<boolean>): void {\r\n    const component = Object.values(this.deactivators$)[index];\r\n    if (!component) {\r\n      observer.next(true);\r\n      observer.complete();\r\n    } else {\r\n      SubscriptionManager.subscribe(component.canDeactivate(), new SubscriptionHandler( (canDeactivate: boolean) => {\r\n        if (!canDeactivate) {\r\n          observer.next(false);\r\n          observer.complete();\r\n        } else {\r\n          this._deactivateComponent(index + 1, observer);\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, Subscriber, forkJoin } from 'rxjs';\r\nimport * as _ from 'underscore';\r\nimport {Util} from \"../../impl/util/util\";\r\nimport {SubscriptionManager} from \"../../impl/util/subscription-manager\";\r\nimport {SubscriptionHandler} from \"../../impl/util/subscription-handler\";\r\n\r\nexport abstract class AbstractActivationQueuedGuard implements CanActivate {\r\n\r\n  private readonly queue: CanActivate[][] = [];\r\n\r\n  private route: ActivatedRouteSnapshot;\r\n  private state: RouterStateSnapshot;\r\n\r\n  public canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    this.route = route;\r\n    this.state = state;\r\n    return new Observable((subscriber) => {\r\n      this.runQueueRecursive(0, subscriber);\r\n    });\r\n  }\r\n\r\n  protected sequence(step: CanActivate[] | CanActivate): AbstractActivationQueuedGuard {\r\n    if (_.isArray(step)) {\r\n      this.queue.push(step as CanActivate[]);\r\n    } else {\r\n      this.queue.push([step as CanActivate]);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  private runQueueRecursive(level: number, subscriber: Subscriber<boolean | UrlTree>): void {\r\n    const currentQueueItems: CanActivate[] = this.queue[level];\r\n    if (!Util.isDefined(currentQueueItems)) {\r\n      subscriber.next(true);\r\n      subscriber.complete();\r\n      return;\r\n    }\r\n    const activators: CanActivate[] = _.map(currentQueueItems, (queueItem: CanActivate) => {\r\n      return queueItem.canActivate(this.route, this.state);\r\n    });\r\n    SubscriptionManager.subscribe(forkJoin(activators), new SubscriptionHandler(\r\n      (canActivateStates: boolean[]) => {\r\n        if (!_.all(canActivateStates)) {\r\n          subscriber.next(false);\r\n          subscriber.complete();\r\n        } else {\r\n          this.runQueueRecursive(level + 1, subscriber);\r\n        }\r\n      },\r\n      () => {\r\n        subscriber.next(false);\r\n        subscriber.complete();\r\n      }\r\n    ));\r\n  }\r\n\r\n}\r\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport {AbstractRouteConfiguration} from \"./abstract-route-configuration\";\r\nimport {IRoutingData} from \"../../interface/routing/i-routing-configuration\";\r\n\r\n\r\nexport abstract class AbstractActivationGuard<TSuccessType, TRouteParams> implements CanActivate {\r\n\r\n  protected abstract onSuccess(result: TSuccessType): Observable<boolean>;\r\n  protected abstract onError(error: any): Observable<boolean>;\r\n  protected abstract onActivate(): Observable<TSuccessType>;\r\n\r\n  protected route: ActivatedRouteSnapshot;\r\n  protected state: RouterStateSnapshot;\r\n\r\n  public canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    this.route = route;\r\n    this.state = state;\r\n    return this.onActivate()\r\n      .pipe(\r\n        switchMap((result: TSuccessType): Observable<boolean> => {\r\n          return this.onSuccess(result);\r\n        }),\r\n        catchError((error): Observable<boolean> => {\r\n          return this.onError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  protected get routeConfiguration(): AbstractRouteConfiguration<TRouteParams> {\r\n    return (this.route.data as IRoutingData<TRouteParams>).routeConfiguration;\r\n  }\r\n\r\n}\r\n","import {Util} from \"../../impl/util/util\";\r\nimport * as _ from 'underscore';\r\n\r\nexport abstract class AbstractRouteConfiguration<TParams> {\r\n\r\n  protected constructor(\r\n    protected pathSegments: string[],\r\n    protected paramNames?: TParams,\r\n    protected parent?: AbstractRouteConfiguration<any>\r\n  ) {}\r\n\r\n  public get path(): string {\r\n    if (Util.isDefined(this.parent)) {\r\n      return `${this.parent.path}/${this.pathSegments.join('/')}`;\r\n    } else {\r\n      return this.pathSegments.join('/');\r\n    }\r\n  }\r\n\r\n  public get paramDefinition(): TParams {\r\n    return _.extend(\r\n      Util.isDefined(this.parent) ? this.parent.paramDefinition : {},\r\n      this.paramNames || {}\r\n    );\r\n  }\r\n\r\n  public buildNavigation(params?: TParams): any[] {\r\n    let navigationParams = Util.isDefined(this.parent) ?\r\n      this.parent.buildNavigation(params) : [];\r\n    if (!Util.isDefined(params)) {\r\n      return navigationParams.concat(this.pathSegments);\r\n    }\r\n    navigationParams = navigationParams.concat(_.map(this.pathSegments, (segment: string) => {\r\n      const segmentInParams = params[segment.replace(':', '')];\r\n      if (Util.isDefined(segmentInParams)) {\r\n        return segmentInParams;\r\n      }\r\n      return segment;\r\n    }));\r\n    return navigationParams;\r\n  }\r\n\r\n  public validate(): boolean {\r\n    for(const pathSnippet in this.pathSegments) {\r\n      if (!Util.isDefined(pathSnippet)) {\r\n        console.error('Creating a route without a path snippet is not allowed');\r\n        return false;\r\n      }\r\n      if (pathSnippet.startsWith('/')) {\r\n        console.error('Creating a route with a path snippet starting with a / is not allowed');\r\n        return false;\r\n      }\r\n      if (pathSnippet.endsWith('/')) {\r\n        console.error('Creating a route with a path snippet ending with a / is not allowed');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Data } from '@angular/router';\r\nimport {AbstractRouteConfiguration} from \"../../abstract/routing/abstract-route-configuration\";\r\n/**\r\n * Dieses Interface muss mit jeder Angular Route verundet werden\r\n * damit die abstrakten Routing-Klassen die aktuelle Konfiguration\r\n * lesen kÃ¶nnen.\r\n */\r\nexport interface IRoutingConfiguration<TRoutingParams> {\r\n  data: Data & IRoutingData<TRoutingParams>;\r\n}\r\n\r\nexport interface IRoutingData<TRoutingParams> {\r\n  routeConfiguration: AbstractRouteConfiguration<TRoutingParams>;\r\n  pageTitle: string;\r\n}\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {AbstractRouteConfiguration} from \"./abstract-route-configuration\";\r\nimport {IRoutingData} from \"../../interface/routing/i-routing-configuration\";\r\n\r\nexport abstract class AbstractResolver<TData, TRouteParams> implements Resolve<TData> {\r\n\r\n  protected route: ActivatedRouteSnapshot;\r\n  protected state: RouterStateSnapshot;\r\n\r\n  protected abstract onResolve(): Observable<TData>;\r\n\r\n  public resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<TData> | Promise<TData> | TData {\r\n    this.route = route;\r\n    this.state = state;\r\n    return this.onResolve();\r\n  }\r\n\r\n  protected get routeConfiguration(): AbstractRouteConfiguration<TRouteParams> {\r\n    return (this.route.data as IRoutingData<TRouteParams>).routeConfiguration;\r\n  }\r\n\r\n}\r\n","import {ObservableValue} from \"../../impl/util/observable-value\";\r\nimport {Subject} from 'rxjs';\r\n\r\nexport interface IEntitySelector<TModelType> {\r\n\r\n  data: ObservableValue<TModelType>;\r\n  nextRequested: Subject<TModelType>;\r\n  isVisible: ObservableValue<boolean>;\r\n  resolve(dataSet: TModelType): void;\r\n}\r\n","import {IDeactivate} from \"../../interface/util/i-deactivate\";\r\nimport { Observable } from 'rxjs';\r\nimport { OnDestroy } from '@angular/core';\r\nimport {IEntitySelector} from \"../../interface/ui/i-entity-selector\";\r\nimport {SubscriptionHandler} from \"../../impl/util/subscription-handler\";\r\nimport * as _ from 'underscore';\r\nimport {AbstractEntityResolver} from \"../util/abstract-entity-resolver\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {BasePushStrategyObject} from \"./base-push-strategy-object\";\r\n\r\nexport abstract class BaseRootComponent extends BasePushStrategyObject implements IDeactivate, OnDestroy {\r\n\r\n  public abstract canDeactivate(): Observable<boolean>;\r\n  protected abstract activatedRoute: ActivatedRoute;\r\n  protected observables: IEntitySelector<any>[] = [];\r\n\r\n  public listenTo(observable: IEntitySelector<any>, resolver: AbstractEntityResolver<any, any>): void {\r\n    this.observables.push(observable);\r\n    observable.isVisible.value = true;\r\n    this.watch(observable.nextRequested, new SubscriptionHandler((dataSet: any) => {\r\n      this.onNextRequested(observable, dataSet, resolver);\r\n    }));\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n    _.each(this.observables, (observable: IEntitySelector<any>) => observable.isVisible.value = false);\r\n  }\r\n\r\n  protected onNextRequested(\r\n    observable: IEntitySelector<any>,\r\n    dataSet: any,\r\n    resolver: AbstractEntityResolver<any, any>\r\n  ): void {\r\n    this.subscribe(this.canDeactivate(), new SubscriptionHandler((canDeactivate: boolean) => {\r\n      if (canDeactivate) {\r\n        // Maybe catch error\r\n        resolver.resolve(this.activatedRoute, dataSet, observable);\r\n      }\r\n    }));\r\n  }\r\n\r\n}\r\n","import {AbstractStoredReadonlyRestservice} from \"./abstract-stored-readonly-restservice\";\r\nimport { Observable, of } from 'rxjs';\r\nimport * as _ from 'underscore';\r\nimport {TimestampItemStore} from \"../../impl/util/timestamp-item-store\";\r\n\r\nexport abstract class AbstractReadonlyCachedRestservice<TModel>\r\n  extends AbstractStoredReadonlyRestservice<TModel> {\r\n\r\n  public abstract store: TimestampItemStore<TModel>;\r\n\r\n  public all(searchParams?: object, httpOptions?: object): Observable<TModel[]> {\r\n    if (this.store.isStoreValid()) {\r\n      return of(this.store.items);\r\n    } else {\r\n      return super.all(searchParams, httpOptions);\r\n    }\r\n  }\r\n\r\n  public show(id: any, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    if (this.store.isItemValid(id)) {\r\n      const lookup = {} as TModel;\r\n      lookup[this.identifier] = id;\r\n      return of(_.find(this.store.items, lookup));\r\n    }\r\n    return super.show(id, getParams, httpOptions);\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractReadonlyCachedRestservice} from \"./abstract-readonly-cached-restservice\";\r\nimport {RestServiceObserver} from \"../../impl/http/rest-service-observer\";\r\nimport {RestHandler} from \"../../impl/http/rest-handler\";\r\nimport {Util} from \"../../impl/util/util\";\r\nimport {IWriteableRestService} from \"../../interface/http/i-writeable-rest-service\";\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n\r\nexport abstract class AbstractCachedRestservice<TModel>\r\n  extends AbstractReadonlyCachedRestservice<TModel>\r\n  implements IWriteableRestService<TModel>{\r\n\r\n  public readonly observer: RestServiceObserver<TModel> = new RestServiceObserver();\r\n\r\n\r\n  public create(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .create(model, getParams, httpOptions);\r\n    return this.modifyCreateCall(request);\r\n  }\r\n\r\n  public destroy(id: any, getParams?: object, httpOptions?: object): Observable<void> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .destroy(id, getParams, httpOptions)\r\n      .pipe(\r\n        tap( () => {\r\n          this.store.removeByIdentifier(id);\r\n        })\r\n      );\r\n  }\r\n\r\n  public partialUpdate(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    return new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .partialUpdate(model, getParams, httpOptions)\r\n      .pipe(\r\n        tap( (result: TModel) => {\r\n          this.store.update(result);\r\n        })\r\n      );\r\n  }\r\n\r\n  public save(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .save(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public set(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .set(model, getParams, httpOptions);\r\n    if (Util.isDefined(model[this.identifier])) {\r\n      request = this.modifyUpdateCall(request);\r\n    } else {\r\n      request = this.modifyCreateCall(request);\r\n    }\r\n    return request;\r\n  }\r\n\r\n  public update(model: TModel, getParams?: object, httpOptions?: object): Observable<TModel> {\r\n    let request = new RestHandler(this.http, this.url, this.observer, this.identifier)\r\n      .update(model, getParams, httpOptions);\r\n    request = this.modifyUpdateCall(request);\r\n    return request;\r\n  }\r\n\r\n  protected modifyCreateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.push(result);\r\n      })\r\n    );\r\n  }\r\n\r\n  protected modifyUpdateCall(observable: Observable<TModel>): Observable<TModel> {\r\n    return observable.pipe(\r\n      tap( (result: TModel) => {\r\n        this.store.update(result);\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import {AbstractRouteConfiguration} from \"../routing/abstract-route-configuration\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as _ from 'underscore';\r\nimport {IEntitySelector} from \"../../interface/ui/i-entity-selector\";\r\n\r\nexport interface IEntityResolverConfiguration {\r\n  keepQueryParams: boolean;\r\n}\r\n\r\nexport abstract class AbstractEntityResolver<TRouteParams, TModel> {\r\n\r\n  public abstract resolve(\r\n    activatedRoute: ActivatedRoute,\r\n    model: TModel,\r\n    entitySelector: IEntitySelector<TModel>\r\n  ): Promise<boolean>;\r\n\r\n  protected constructor(\r\n    protected readonly router: Router,\r\n    protected readonly routeConfiguration: AbstractRouteConfiguration<TRouteParams>,\r\n    protected readonly configuration?: IEntityResolverConfiguration,\r\n  ) {\r\n    this.configuration = configuration || AbstractEntityResolver.generateDefaultConfiguration();\r\n  }\r\n\r\n  protected runResolver(activatedRoute: ActivatedRoute, params: object): Promise<boolean> {\r\n    const currentRouteParams = _.extend(_.clone(activatedRoute.snapshot.params), params);\r\n    if (this.configuration.keepQueryParams) {\r\n      return this.router.navigate(\r\n        this.routeConfiguration.buildNavigation(currentRouteParams),\r\n        {queryParams: activatedRoute.snapshot.queryParams}\r\n      );\r\n    } else {\r\n      return this.router.navigate(this.routeConfiguration.buildNavigation(currentRouteParams))\r\n    }\r\n  }\r\n\r\n  private static generateDefaultConfiguration(): IEntityResolverConfiguration {\r\n    return {\r\n      keepQueryParams: false\r\n    };\r\n  }\r\n\r\n}\r\n","import {ItemStore} from \"./item-store\";\r\nimport {Util} from \"./util\";\r\nimport * as _ from 'underscore';\r\n\r\nexport class TimestampItemStore<TModel> extends ItemStore<TModel> {\r\n\r\n  public static readonly ITEM_TIMESTAMP_KEY = '__timestamp__';\r\n\r\n  private wasFilled: boolean;\r\n\r\n  constructor(\r\n    identifier: any,\r\n    private itemLifetimeInSeconds: number,\r\n    transform?: (items: TModel[]) => TModel[]\r\n  ) {\r\n    super(identifier, transform);\r\n    this.wasFilled = false;\r\n  }\r\n\r\n  public updateItems(items: TModel[]): void {\r\n    super.updateItems(items);\r\n    _.each(this.items, (item) => this.trackItem(item));\r\n    this.wasFilled = true;\r\n  }\r\n\r\n  public clear(): void {\r\n    super.clear();\r\n    this.wasFilled = false;\r\n  }\r\n\r\n  public update(item: TModel): void {\r\n    super.update(item);\r\n    this.trackItem(item);\r\n  }\r\n\r\n  public push(item: TModel): void {\r\n    super.push(item);\r\n    this.trackItem(item);\r\n  }\r\n\r\n  public isItemValid(identifier: any): boolean {\r\n    let itemInStore = null;\r\n    for(const item of this.items) {\r\n      if (item[this.identifier] === identifier) {\r\n        itemInStore = item;\r\n        break;\r\n      }\r\n    }\r\n    if (!Util.isDefined(itemInStore)) {\r\n      return false;\r\n    }\r\n    const currentTimeStamp = Util.getCurrentUnixTimestamp();\r\n    return (currentTimeStamp - this.itemLifetimeInSeconds) < itemInStore[TimestampItemStore.ITEM_TIMESTAMP_KEY];\r\n  }\r\n\r\n  public isStoreValid(): boolean {\r\n    if (!this.wasFilled) {\r\n      return false;\r\n    }\r\n    if (_.isEmpty(this.items)) {\r\n      return false;\r\n    }\r\n    return _.all(this.items, (item) => this.isItemValid(item[this.identifier]));\r\n  }\r\n\r\n  private trackItem(item: TModel): void {\r\n    item[TimestampItemStore.ITEM_TIMESTAMP_KEY] = Util.getCurrentUnixTimestamp();\r\n  }\r\n\r\n}\r\n"],"names":["_.isFunction","_.isEmpty","_.each","_.sortBy","tslib_1.__values","_.isDate","moment.isMoment","_.isNumber","_.isString","_.isBoolean","_.map","_.find","_.mapObject","_.reject","tslib_1.__extends","_.isUndefined","_.isArray","_.all","_.extend","_.clone"],"mappings":"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"}